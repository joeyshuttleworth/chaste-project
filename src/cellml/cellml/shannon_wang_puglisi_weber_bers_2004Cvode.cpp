#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version 0.6.3
//!
//! Model: shannon_wang_puglisi_weber_bers_2004_model_updated
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: AnalyticCvode)
//! on 2021-03-29 17:38:00
//!
//! <autogenerated>

#include "shannon_wang_puglisi_weber_bers_2004Cvode.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"



    boost::shared_ptr<RegularStimulus> Cellshannon_wang_puglisi_weber_bers_2004FromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__cell__stim_amplitude_converted = -9.5 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__cell__stim_duration = 5.0; // millisecond
        const double var_chaste_interface__cell__stim_period = 1000.0; // millisecond
        const double var_chaste_interface__cell__stim_start = 100.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__cell__stim_amplitude_converted),
                var_chaste_interface__cell__stim_duration,
                var_chaste_interface__cell__stim_period,
                var_chaste_interface__cell__stim_start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }

    double Cellshannon_wang_puglisi_weber_bers_2004FromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Cellshannon_wang_puglisi_weber_bers_2004FromCellMLCvode::Cellshannon_wang_puglisi_weber_bers_2004FromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                45,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellshannon_wang_puglisi_weber_bers_2004FromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 5.3480000000000003e-6; // (var_Jleak_SR__KSRleak) [per_millisecond]
        NV_Ith_S(this->mParameters, 1) = 25.0; // (var_Jrel_SR__ks) [per_millisecond]
        NV_Ith_S(this->mParameters, 2) = 0.00028600000000000001; // (var_Jpump_SR__V_max) [millimolar_per_millisecond]
        NV_Ith_S(this->mParameters, 3) = 1.0; // (var_Na_buffer__conc_clamp) [dimensionless]
        NV_Ith_S(this->mParameters, 4) = 135.0; // (var_model_parameters__Ki) [millimolar]
        NV_Ith_S(this->mParameters, 5) = 1.8; // (var_model_parameters__Cao) [millimolar]
        NV_Ith_S(this->mParameters, 6) = 5.4000000000000004; // (var_model_parameters__Ko) [millimolar]
        NV_Ith_S(this->mParameters, 7) = 140.0; // (var_model_parameters__Nao) [millimolar]
        NV_Ith_S(this->mParameters, 8) = 0.00054000000000000001; // (var_ICaL__PCa) [litre_per_farad_millisecond]
        NV_Ith_S(this->mParameters, 9) = 16.0; // (var_INa__G_INa) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 10) = 0; // (var_INa__perc_reduced_inact_for_IpNa) [dimensionless]
        NV_Ith_S(this->mParameters, 11) = 0; // (var_INa__shift_INa_inact) [millivolt]
        NV_Ith_S(this->mParameters, 12) = 0.02; // (var_Itof__G_tof) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 13) = 0.90000000000000002; // (var_IK1__G_K1_max) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 14) = 0.029999999999999999; // (var_IKr__G_IKr_const) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 15) = 0.070000000000000007; // (var_IKs__G_Ks_max) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 16) = 0.059999999999999998; // (var_Itos__G_tos) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 17) = 9.0; // (var_INaCa__V_max) [microA_per_microF]
    }

    Cellshannon_wang_puglisi_weber_bers_2004FromCellMLCvode::~Cellshannon_wang_puglisi_weber_bers_2004FromCellMLCvode()
    {
    }

    
    double Cellshannon_wang_puglisi_weber_bers_2004FromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -85.721630473733
        double var_chaste_interface__INa_h_gate__h = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.98714602875678
        double var_chaste_interface__INa_j_gate__j = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.991826348770428
        double var_chaste_interface__INa_m_gate__m = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.0013702407736465
        double var_chaste_interface__IKr_Xr_gate__Xr = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.00846906175020028
        double var_chaste_interface__IKs_Xs_gate__Xs = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.00613557812033723
        double var_chaste_interface__Itos_X_gate__X_tos = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.00401072468238921
        double var_chaste_interface__Itos_Y_gate__Y_tos = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.31555225368514
        double var_chaste_interface__Itos_R_gate__R_tos = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.402577243036347
        double var_chaste_interface__Itof_X_gate__X_tof = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.00401068798369438
        double var_chaste_interface__Itof_Y_gate__Y_tof = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.994632857675454
        double var_chaste_interface__ICaL_d_gate__d = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 6.99526086177479e-06
        double var_chaste_interface__ICaL_f_gate__f = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 1.00067601563206
        double var_chaste_interface__ICaL_fCa_gate__fCaB_SL = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.0150193299768419
        double var_chaste_interface__ICaL_fCa_gate__fCaB_jct = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.0244048782575591
        double var_chaste_interface__Na_buffer__Na_SL = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 8.87161932058707
        double var_chaste_interface__Na_buffer__Na_jct = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 8.87031835089116
        double var_chaste_interface__Na_buffer__Nai = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 8.87200572571131
        double var_chaste_interface__Ca_buffer__Ca_SL = NV_Ith_S(rY, 25);
        // Units: millimolar; Initial value: 0.000104971310105451
        double var_chaste_interface__Ca_buffer__Ca_jct = NV_Ith_S(rY, 26);
        // Units: millimolar; Initial value: 0.000174045152623969
        
        const double var_ICab__Fx_CaBk_SL = 0.89000000000000001; // dimensionless
        const double var_ICab__Fx_CaBk_jct = 0.11; // dimensionless
        const double var_ICab__G_CaBk = 0.00025129999999999998; // milliS_per_microF
        const double var_ICap__Fx_SLCaP_SL = 0.89000000000000001; // dimensionless
        const double var_ICap__Fx_SLCaP_jct = 0.11; // dimensionless
        const double var_ICap__H = 1.6000000000000001; // dimensionless
        const double var_ICap__Km = 0.00050000000000000001; // millimolar
        const double var_ICap__Q10_SLCaP = 2.3500000000000001; // dimensionless
        const double var_ICap__V_maxAF = 0.067299999999999999; // microA_per_microF
        const double var_ICl_Ca__Fx_Cl_SL = 0.89000000000000001; // dimensionless
        const double var_ICl_Ca__Fx_Cl_jct = 0.11; // dimensionless
        const double var_ICl_Ca__G_Cl = 0.109625; // milliS_per_microF
        const double var_ICl_Ca__Kd_ClCa = 0.10000000000000001; // millimolar
        const double var_IClb__G_ClBk = 0.0089999999999999993; // milliS_per_microF
        const double var_IKs__Fx_Ks_SL = 0.89000000000000001; // dimensionless
        const double var_IKs__Fx_Ks_jct = 0.11; // dimensionless
        const double var_IKs__pCa_SL = 3.0 - log10(var_chaste_interface__Ca_buffer__Ca_SL); // dimensionless
        const double var_IKs__G_Ks_SL = (0.057000000000000002 + 0.19 / (1.0 + exp(-12.0 + 1.6666666666666667 * var_IKs__pCa_SL))) * NV_Ith_S(mParameters, 15); // milliS_per_microF
        const double var_IKs__pCa_jct = 3.0 - log10(var_chaste_interface__Ca_buffer__Ca_jct); // dimensionless
        const double var_IKs__G_Ks_jct = (0.057000000000000002 + 0.19 / (1.0 + exp(-12.0 + 1.6666666666666667 * var_IKs__pCa_jct))) * NV_Ith_S(mParameters, 15); // milliS_per_microF
        const double var_IKs__pKNa = 0.018329999999999999; // dimensionless
        const double var_INa__Fx_Na_SL = 0.89000000000000001; // dimensionless
        const double var_INa__Fx_Na_jct = 0.11; // dimensionless
        const double var_INaCa__Fx_NCX_SL = 0.89000000000000001; // dimensionless
        const double var_INaCa__Fx_NCX_jct = 0.11; // dimensionless
        const double var_INaCa__HNa = 3.0; // dimensionless
        const double var_INaCa__K_mCai = 0.0035899999999999999; // millimolar
        const double var_INaCa__K_mCao = 1.3; // millimolar
        const double var_INaCa__K_mNai = 12.289999999999999; // millimolar
        const double var_INaCa__K_mNao = 87.5; // millimolar
        const double var_INaCa__Kd_act = 0.00025599999999999999; // millimolar
        const double var_INaCa__Ka_SL = 1 / (1.0 + pow(var_INaCa__Kd_act, 3) / pow(var_chaste_interface__Ca_buffer__Ca_SL, 3)); // dimensionless
        const double var_INaCa__Ka_jct = 1 / (1.0 + pow(var_INaCa__Kd_act, 3) / pow(var_chaste_interface__Ca_buffer__Ca_jct, 3)); // dimensionless
        const double var_INaCa__Q10_NCX = 1.5700000000000001; // dimensionless
        const double var_INaCa__eta = 0.34999999999999998; // dimensionless
        const double var_INaCa__ksat = 0.27000000000000002; // dimensionless
        const double var_INaK__Fx_NaK_SL = 0.89000000000000001; // dimensionless
        const double var_INaK__Fx_NaK_jct = 0.11; // dimensionless
        const double var_INaK__H_NaK = 4.0; // dimensionless
        const double var_INaK__I_NaK_max = 1.9099999999999999; // microA_per_microF
        const double var_INaK__Km_Ko = 1.5; // millimolar
        const double var_INaK__Km_Nai = 11.0; // millimolar
        const double var_INaK__Q10_Km_Nai = 1.49; // dimensionless
        const double var_INaK__Q10_NaK = 1.6299999999999999; // dimensionless
        const double var_INa__openProb = pow(var_chaste_interface__INa_m_gate__m, 3) * var_chaste_interface__INa_h_gate__h * var_chaste_interface__INa_j_gate__j; // dimensionless
        const double var_INab__Fx_NaBk_SL = 0.89000000000000001; // dimensionless
        const double var_INab__Fx_NaBk_jct = 0.11; // dimensionless
        const double var_INab__G_NaBk = 0.00029700000000000001; // milliS_per_microF
        const double var_IKr_Rr_gate__Rr = 1 / (1.0 + exp(1.4732142857142858 + 0.044642857142857144 * var_chaste_interface__cell__V)); // dimensionless
        const double var_ICaL__i_CaL_Ca_SL = ((fabs(var_chaste_interface__cell__V) < 1.3356415961992688e-6) ? (374351.92301797954 * (1.3356415961992688e-6 + var_chaste_interface__cell__V) * (0.00086838029999999997 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_SL * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 8) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(9.9999999999999995e-8)) + 0.00086838029999999997 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_SL * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 8) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) - 0.00086838029999999997 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_SL * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 8) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) : (650.15967043186004 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_SL * exp(0.074870384603595908 * var_chaste_interface__cell__V)) * NV_Ith_S(mParameters, 8) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f * var_chaste_interface__cell__V / (-1.0 + exp(0.074870384603595908 * var_chaste_interface__cell__V)))); // microA_per_microF
        const double var_ICaL__i_CaL_Ca_jct = ((fabs(var_chaste_interface__cell__V) < 1.3356415961992688e-6) ? (374351.92301797954 * (1.3356415961992688e-6 + var_chaste_interface__cell__V) * (0.0078154226999999996 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_jct * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 8) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(9.9999999999999995e-8)) + 0.0078154226999999996 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_jct * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 8) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) - 0.0078154226999999996 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_jct * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 8) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) : (5851.4370338867393 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_jct * exp(0.074870384603595908 * var_chaste_interface__cell__V)) * NV_Ith_S(mParameters, 8) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f * var_chaste_interface__cell__V / (-1.0 + exp(0.074870384603595908 * var_chaste_interface__cell__V)))); // microA_per_microF
        const double var_model_parameters__Cli = 15.0; // millimolar
        const double var_model_parameters__Clo = 150.0; // millimolar
        const double var_model_parameters__F = 96486.699999999997; // coulomb_per_mole
        const double var_ICaL__i_CaL_K = ((fabs(var_chaste_interface__cell__V) < 2.6712831923985376e-6) ? (187175.96150898977 * (2.6712831923985376e-6 + var_chaste_interface__cell__V) * (1.172313405e-9 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * NV_Ith_S(mParameters, 4) * exp(9.9999999999999995e-8)) * (1.0 - 0.10000000000000001 * var_chaste_interface__ICaL_fCa_gate__fCaB_SL - 0.90000000000000002 * var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(9.9999999999999995e-8)) + 1.172313405e-9 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * NV_Ith_S(mParameters, 4) * exp(-9.9999999999999995e-8)) * (1.0 - 0.10000000000000001 * var_chaste_interface__ICaL_fCa_gate__fCaB_SL - 0.90000000000000002 * var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) - 1.172313405e-9 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * NV_Ith_S(mParameters, 4) * exp(-9.9999999999999995e-8)) * (1.0 - 0.10000000000000001 * var_chaste_interface__ICaL_fCa_gate__fCaB_SL - 0.90000000000000002 * var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) : (0.00043885777754150548 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * NV_Ith_S(mParameters, 4) * exp(0.037435192301797954 * var_chaste_interface__cell__V)) * (1.0 - 0.10000000000000001 * var_chaste_interface__ICaL_fCa_gate__fCaB_SL - 0.90000000000000002 * var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f * var_chaste_interface__cell__V / (-1.0 + exp(0.037435192301797954 * var_chaste_interface__cell__V)))); // microA_per_microF
        const double var_IK1__G_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 6)) * NV_Ith_S(mParameters, 13); // milliS_per_microF
        const double var_IKr__G_IKr = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 6)) * NV_Ith_S(mParameters, 14); // milliS_per_microF
        const double var_ICaL__i_CaL_Na_SL = ((fabs(var_chaste_interface__cell__V) < 2.6712831923985376e-6) ? (187175.96150898977 * (2.6712831923985376e-6 + var_chaste_interface__cell__V) * (6.5128522499999997e-12 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * (-0.75 * NV_Ith_S(mParameters, 7) + 0.75 * var_chaste_interface__Na_buffer__Na_SL * exp(9.9999999999999995e-8)) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(9.9999999999999995e-8)) + 6.5128522499999997e-12 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * (-0.75 * NV_Ith_S(mParameters, 7) + 0.75 * var_chaste_interface__Na_buffer__Na_SL * exp(-9.9999999999999995e-8)) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) - 6.5128522499999997e-12 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * (-0.75 * NV_Ith_S(mParameters, 7) + 0.75 * var_chaste_interface__Na_buffer__Na_SL * exp(-9.9999999999999995e-8)) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) : (2.4380987641194746e-6 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * (-0.75 * NV_Ith_S(mParameters, 7) + 0.75 * var_chaste_interface__Na_buffer__Na_SL * exp(0.037435192301797954 * var_chaste_interface__cell__V)) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f * var_chaste_interface__cell__V / (-1.0 + exp(0.037435192301797954 * var_chaste_interface__cell__V)))); // microA_per_microF
        const double var_ICaL__i_CaL_Na_jct = ((fabs(var_chaste_interface__cell__V) < 2.6712831923985376e-6) ? (187175.96150898977 * (2.6712831923985376e-6 + var_chaste_interface__cell__V) * (5.8615670249999994e-11 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * (-0.75 * NV_Ith_S(mParameters, 7) + 0.75 * var_chaste_interface__Na_buffer__Na_jct * exp(9.9999999999999995e-8)) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(9.9999999999999995e-8)) + 5.8615670249999994e-11 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * (-0.75 * NV_Ith_S(mParameters, 7) + 0.75 * var_chaste_interface__Na_buffer__Na_jct * exp(-9.9999999999999995e-8)) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) - 5.8615670249999994e-11 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * (-0.75 * NV_Ith_S(mParameters, 7) + 0.75 * var_chaste_interface__Na_buffer__Na_jct * exp(-9.9999999999999995e-8)) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) : (2.1942888877075271e-5 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * (-0.75 * NV_Ith_S(mParameters, 7) + 0.75 * var_chaste_interface__Na_buffer__Na_jct * exp(0.037435192301797954 * var_chaste_interface__cell__V)) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f * var_chaste_interface__cell__V / (-1.0 + exp(0.037435192301797954 * var_chaste_interface__cell__V)))); // microA_per_microF
        const double var_ICaL__i_CaL = var_ICaL__i_CaL_Ca_SL + var_ICaL__i_CaL_Ca_jct + var_ICaL__i_CaL_K + var_ICaL__i_CaL_Na_SL + var_ICaL__i_CaL_Na_jct; // microA_per_microF
        const double var_ICaL__i_CaL_converted = HeartConfig::Instance()->GetCapacitance() * var_ICaL__i_CaL; // uA_per_cm2
        const double var_INaK__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 7)); // dimensionless
        const double var_model_parameters__R = 8314.2999999999993; // joule_per_kilomole_kelvin
        const double var_model_parameters__T = 310.0; // kelvin
        const double var_ICap__Q_SLCaP = pow(var_ICap__Q10_SLCaP, (-31.0 + 0.10000000000000001 * var_model_parameters__T)); // dimensionless
        const double var_ICap__i_Cap_SL = var_ICap__Fx_SLCaP_SL * var_ICap__Q_SLCaP * var_ICap__V_maxAF / (1.0 + pow((var_ICap__Km / var_chaste_interface__Ca_buffer__Ca_SL), var_ICap__H)); // microA_per_microF
        const double var_ICap__i_Cap_jct = var_ICap__Fx_SLCaP_jct * var_ICap__Q_SLCaP * var_ICap__V_maxAF / (1.0 + pow((var_ICap__Km / var_chaste_interface__Ca_buffer__Ca_jct), var_ICap__H)); // microA_per_microF
        const double var_ICap__i_Cap = var_ICap__i_Cap_SL + var_ICap__i_Cap_jct; // microA_per_microF
        const double var_IKs__E_Ks = var_model_parameters__R * var_model_parameters__T * log((var_IKs__pKNa * NV_Ith_S(mParameters, 7) + NV_Ith_S(mParameters, 6)) / (var_IKs__pKNa * var_chaste_interface__Na_buffer__Nai + NV_Ith_S(mParameters, 4))) / var_model_parameters__F; // millivolt
        const double var_IKs__i_Ks_SL = pow(var_chaste_interface__IKs_Xs_gate__Xs, 2) * (-var_IKs__E_Ks + var_chaste_interface__cell__V) * var_IKs__Fx_Ks_SL * var_IKs__G_Ks_SL; // microA_per_microF
        const double var_IKs__i_Ks_jct = pow(var_chaste_interface__IKs_Xs_gate__Xs, 2) * (-var_IKs__E_Ks + var_chaste_interface__cell__V) * var_IKs__Fx_Ks_jct * var_IKs__G_Ks_jct; // microA_per_microF
        const double var_IKs__i_Ks = var_IKs__i_Ks_SL + var_IKs__i_Ks_jct; // microA_per_microF
        const double var_IKs__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_IKs__i_Ks; // uA_per_cm2
        const double var_INaCa__Q_NCX = pow(var_INaCa__Q10_NCX, (-31.0 + 0.10000000000000001 * var_model_parameters__T)); // dimensionless
        const double var_INaCa__temp_SL = (pow(var_chaste_interface__Na_buffer__Na_SL, var_INaCa__HNa) * NV_Ith_S(mParameters, 5) * exp(var_INaCa__eta * var_chaste_interface__cell__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) - pow(NV_Ith_S(mParameters, 7), var_INaCa__HNa) * var_chaste_interface__Ca_buffer__Ca_SL * exp((-1.0 + var_INaCa__eta) * var_chaste_interface__cell__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))) / (1.0 + var_INaCa__ksat * exp((-1.0 + var_INaCa__eta) * var_chaste_interface__cell__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))); // millimolar4
        const double var_INaCa__i_NaCa_SL = var_INaCa__Fx_NCX_SL * var_INaCa__Ka_SL * var_INaCa__Q_NCX * NV_Ith_S(mParameters, 17) * var_INaCa__temp_SL / (pow(var_chaste_interface__Na_buffer__Na_SL, var_INaCa__HNa) * var_INaCa__K_mCao + pow(var_chaste_interface__Na_buffer__Na_SL, var_INaCa__HNa) * NV_Ith_S(mParameters, 5) + pow(NV_Ith_S(mParameters, 7), var_INaCa__HNa) * var_chaste_interface__Ca_buffer__Ca_SL + pow(var_INaCa__K_mNao, var_INaCa__HNa) * (1.0 + var_chaste_interface__Ca_buffer__Ca_SL / var_INaCa__K_mCai) * var_chaste_interface__Ca_buffer__Ca_SL + pow(NV_Ith_S(mParameters, 7), var_INaCa__HNa) * (1.0 + pow((var_chaste_interface__Na_buffer__Na_SL / var_INaCa__K_mNai), var_INaCa__HNa)) * var_INaCa__K_mCai); // microA_per_microF
        const double var_INaCa__temp_jct = (pow(var_chaste_interface__Na_buffer__Na_jct, var_INaCa__HNa) * NV_Ith_S(mParameters, 5) * exp(var_INaCa__eta * var_chaste_interface__cell__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) - pow(NV_Ith_S(mParameters, 7), var_INaCa__HNa) * var_chaste_interface__Ca_buffer__Ca_jct * exp((-1.0 + var_INaCa__eta) * var_chaste_interface__cell__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))) / (1.0 + var_INaCa__ksat * exp((-1.0 + var_INaCa__eta) * var_chaste_interface__cell__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))); // millimolar4
        const double var_INaCa__i_NaCa_jct = var_INaCa__Fx_NCX_jct * var_INaCa__Ka_jct * var_INaCa__Q_NCX * NV_Ith_S(mParameters, 17) * var_INaCa__temp_jct / (pow(var_chaste_interface__Na_buffer__Na_jct, var_INaCa__HNa) * var_INaCa__K_mCao + pow(var_chaste_interface__Na_buffer__Na_jct, var_INaCa__HNa) * NV_Ith_S(mParameters, 5) + pow(NV_Ith_S(mParameters, 7), var_INaCa__HNa) * var_chaste_interface__Ca_buffer__Ca_jct + pow(var_INaCa__K_mNao, var_INaCa__HNa) * (1.0 + var_chaste_interface__Ca_buffer__Ca_jct / var_INaCa__K_mCai) * var_chaste_interface__Ca_buffer__Ca_jct + pow(NV_Ith_S(mParameters, 7), var_INaCa__HNa) * (1.0 + pow((var_chaste_interface__Na_buffer__Na_jct / var_INaCa__K_mNai), var_INaCa__HNa)) * var_INaCa__K_mCai); // microA_per_microF
        const double var_INaCa__i_NaCa = var_INaCa__i_NaCa_SL + var_INaCa__i_NaCa_jct; // microA_per_microF
        const double var_INaCa__i_NaCa_converted = HeartConfig::Instance()->GetCapacitance() * var_INaCa__i_NaCa; // uA_per_cm2
        const double var_INaK__Q_Km_Nai = pow(var_INaK__Q10_Km_Nai, (-31.0 + 0.10000000000000001 * var_model_parameters__T)); // dimensionless
        const double var_INaK__Q_NaK = pow(var_INaK__Q10_NaK, (-31.0 + 0.10000000000000001 * var_model_parameters__T)); // dimensionless
        const double var_INaK__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_chaste_interface__cell__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) + 0.036499999999999998 * var_INaK__sigma * exp(-var_chaste_interface__cell__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))); // dimensionless
        const double var_INaK__i_NaK_SL = var_INaK__Fx_NaK_SL * var_INaK__I_NaK_max * var_INaK__Q_NaK * var_INaK__f_NaK * NV_Ith_S(mParameters, 6) / ((1.0 + pow((var_INaK__Km_Nai * var_INaK__Q_Km_Nai / var_chaste_interface__Na_buffer__Na_SL), var_INaK__H_NaK)) * (var_INaK__Km_Ko + NV_Ith_S(mParameters, 6))); // microA_per_microF
        const double var_INaK__i_NaK_jct = var_INaK__Fx_NaK_jct * var_INaK__I_NaK_max * var_INaK__Q_NaK * var_INaK__f_NaK * NV_Ith_S(mParameters, 6) / ((1.0 + pow((var_INaK__Km_Nai * var_INaK__Q_Km_Nai / var_chaste_interface__Na_buffer__Na_jct), var_INaK__H_NaK)) * (var_INaK__Km_Ko + NV_Ith_S(mParameters, 6))); // microA_per_microF
        const double var_INaK__i_NaK = var_INaK__i_NaK_SL + var_INaK__i_NaK_jct; // microA_per_microF
        const double var_reversal_potentials__E_Ca_SL = 0.5 * var_model_parameters__R * var_model_parameters__T * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__Ca_buffer__Ca_SL) / var_model_parameters__F; // millivolt
        const double var_ICab__i_Cab_SL = (-var_reversal_potentials__E_Ca_SL + var_chaste_interface__cell__V) * var_ICab__Fx_CaBk_SL * var_ICab__G_CaBk; // microA_per_microF
        const double var_reversal_potentials__E_Ca_jct = 0.5 * var_model_parameters__R * var_model_parameters__T * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__Ca_buffer__Ca_jct) / var_model_parameters__F; // millivolt
        const double var_ICab__i_Cab_jct = (-var_reversal_potentials__E_Ca_jct + var_chaste_interface__cell__V) * var_ICab__Fx_CaBk_jct * var_ICab__G_CaBk; // microA_per_microF
        const double var_ICab__i_Cab = var_ICab__i_Cab_SL + var_ICab__i_Cab_jct; // microA_per_microF
        const double var_reversal_potentials__E_Cl = -var_model_parameters__R * var_model_parameters__T * log(var_model_parameters__Clo / var_model_parameters__Cli) / var_model_parameters__F; // millivolt
        const double var_ICl_Ca__i_Cl_Ca = (-var_reversal_potentials__E_Cl + var_chaste_interface__cell__V) * (var_ICl_Ca__Fx_Cl_SL / (1.0 + var_ICl_Ca__Kd_ClCa / var_chaste_interface__Ca_buffer__Ca_SL) + var_ICl_Ca__Fx_Cl_jct / (1.0 + var_ICl_Ca__Kd_ClCa / var_chaste_interface__Ca_buffer__Ca_jct)) * var_ICl_Ca__G_Cl; // microA_per_microF
        const double var_IClb__i_Clb = (-var_reversal_potentials__E_Cl + var_chaste_interface__cell__V) * var_IClb__G_ClBk; // microA_per_microF
        const double var_reversal_potentials__E_K = var_model_parameters__R * var_model_parameters__T * log(NV_Ith_S(mParameters, 6) / NV_Ith_S(mParameters, 4)) / var_model_parameters__F; // millivolt
        const double var_IK1_K1_gate__alpha_K1 = 1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__cell__V - 0.23849999999999999 * var_reversal_potentials__E_K)); // per_millisecond
        const double var_IK1_K1_gate__beta_K1 = (exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__cell__V - 0.061749999999999999 * var_reversal_potentials__E_K) + 0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__cell__V - 0.080320000000000003 * var_reversal_potentials__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_reversal_potentials__E_K - 0.51429999999999998 * var_chaste_interface__cell__V)); // per_millisecond
        const double var_IK1_K1_gate__K1_infinity = var_IK1_K1_gate__alpha_K1 / (var_IK1_K1_gate__alpha_K1 + var_IK1_K1_gate__beta_K1); // dimensionless
        const double var_IK1__i_K1 = (-var_reversal_potentials__E_K + var_chaste_interface__cell__V) * var_IK1__G_K1 * var_IK1_K1_gate__K1_infinity; // microA_per_microF
        const double var_IK1__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_IK1__i_K1; // uA_per_cm2
        const double var_IKr__i_Kr = (-var_reversal_potentials__E_K + var_chaste_interface__cell__V) * var_IKr__G_IKr * var_IKr_Rr_gate__Rr * var_chaste_interface__IKr_Xr_gate__Xr; // microA_per_microF
        const double var_IKr__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_IKr__i_Kr; // uA_per_cm2
        const double var_Itof__i_tof = (-var_reversal_potentials__E_K + var_chaste_interface__cell__V) * NV_Ith_S(mParameters, 12) * var_chaste_interface__Itof_X_gate__X_tof * var_chaste_interface__Itof_Y_gate__Y_tof; // microA_per_microF
        const double var_Itof__i_tof_converted = HeartConfig::Instance()->GetCapacitance() * var_Itof__i_tof; // uA_per_cm2
        const double var_Itos__i_tos = (-var_reversal_potentials__E_K + var_chaste_interface__cell__V) * (0.5 * var_chaste_interface__Itos_R_gate__R_tos + var_chaste_interface__Itos_Y_gate__Y_tos) * NV_Ith_S(mParameters, 16) * var_chaste_interface__Itos_X_gate__X_tos; // microA_per_microF
        const double var_Itos__i_tos_converted = HeartConfig::Instance()->GetCapacitance() * var_Itos__i_tos; // uA_per_cm2
        const double var_reversal_potentials__E_Na_SL = var_model_parameters__R * var_model_parameters__T * log(NV_Ith_S(mParameters, 7) / var_chaste_interface__Na_buffer__Na_SL) / var_model_parameters__F; // millivolt
        const double var_INa__i_Na_SL = (-var_reversal_potentials__E_Na_SL + var_chaste_interface__cell__V) * var_INa__Fx_Na_SL * NV_Ith_S(mParameters, 9) * var_INa__openProb; // microA_per_microF
        const double var_INab__i_Nab_SL = (-var_reversal_potentials__E_Na_SL + var_chaste_interface__cell__V) * var_INab__Fx_NaBk_SL * var_INab__G_NaBk; // microA_per_microF
        const double var_reversal_potentials__E_Na_jct = var_model_parameters__R * var_model_parameters__T * log(NV_Ith_S(mParameters, 7) / var_chaste_interface__Na_buffer__Na_jct) / var_model_parameters__F; // millivolt
        const double var_INa__i_Na_jct = (-var_reversal_potentials__E_Na_jct + var_chaste_interface__cell__V) * var_INa__Fx_Na_jct * NV_Ith_S(mParameters, 9) * var_INa__openProb; // microA_per_microF
        const double var_INa__i_Na = var_INa__i_Na_SL + var_INa__i_Na_jct; // microA_per_microF
        const double var_INa__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_INa__i_Na; // uA_per_cm2
        const double var_INab__i_Nab_jct = (-var_reversal_potentials__E_Na_jct + var_chaste_interface__cell__V) * var_INab__Fx_NaBk_jct * var_INab__G_NaBk; // microA_per_microF
        const double var_INab__i_Nab = var_INab__i_Nab_SL + var_INab__i_Nab_jct; // microA_per_microF
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_ICab__i_Cab + HeartConfig::Instance()->GetCapacitance() * var_ICap__i_Cap + HeartConfig::Instance()->GetCapacitance() * var_ICl_Ca__i_Cl_Ca + HeartConfig::Instance()->GetCapacitance() * var_IClb__i_Clb + HeartConfig::Instance()->GetCapacitance() * var_INaK__i_NaK + HeartConfig::Instance()->GetCapacitance() * var_INab__i_Nab + var_ICaL__i_CaL_converted + var_IK1__i_K1_converted + var_IKr__i_Kr_converted + var_IKs__i_Ks_converted + var_INa__i_Na_converted + var_INaCa__i_NaCa_converted + var_Itof__i_tof_converted + var_Itos__i_tos_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellshannon_wang_puglisi_weber_bers_2004FromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -85.721630473733
        double var_chaste_interface__Ca_buffer__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 8.6504944644883e-05
        double var_chaste_interface__INa_h_gate__h = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.98714602875678
        double var_chaste_interface__INa_j_gate__j = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.991826348770428
        double var_chaste_interface__INa_m_gate__m = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.0013702407736465
        double var_chaste_interface__IKr_Xr_gate__Xr = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.00846906175020028
        double var_chaste_interface__IKs_Xs_gate__Xs = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.00613557812033723
        double var_chaste_interface__Itos_X_gate__X_tos = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.00401072468238921
        double var_chaste_interface__Itos_Y_gate__Y_tos = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.31555225368514
        double var_chaste_interface__Itos_R_gate__R_tos = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.402577243036347
        double var_chaste_interface__Itof_X_gate__X_tof = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.00401068798369438
        double var_chaste_interface__Itof_Y_gate__Y_tof = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.994632857675454
        double var_chaste_interface__ICaL_d_gate__d = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 6.99526086177479e-06
        double var_chaste_interface__ICaL_f_gate__f = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 1.00067601563206
        double var_chaste_interface__ICaL_fCa_gate__fCaB_SL = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.0150193299768419
        double var_chaste_interface__ICaL_fCa_gate__fCaB_jct = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.0244048782575591
        double var_chaste_interface__Jrel_SR__R = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.890917121306535
        double var_chaste_interface__Jrel_SR__I = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 8.71752603681652e-08
        double var_chaste_interface__Jrel_SR__O = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 7.1199533741995e-07
        double var_chaste_interface__Na_buffer__Na_SL = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 8.87161932058707
        double var_chaste_interface__Na_buffer__Na_jct = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 8.87031835089116
        double var_chaste_interface__Na_buffer__Na_SL_buf = NV_Ith_S(rY, 21);
        // Units: millimolar; Initial value: 0.77606800956492
        double var_chaste_interface__Na_buffer__Na_jct_buf = NV_Ith_S(rY, 22);
        // Units: millimolar; Initial value: 3.55668431730337
        double var_chaste_interface__Na_buffer__Nai = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 8.87200572571131
        double var_chaste_interface__Ca_buffer__Ca_SR = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 0.547125831028543
        double var_chaste_interface__Ca_buffer__Ca_SL = NV_Ith_S(rY, 25);
        // Units: millimolar; Initial value: 0.000104971310105451
        double var_chaste_interface__Ca_buffer__Ca_jct = NV_Ith_S(rY, 26);
        // Units: millimolar; Initial value: 0.000174045152623969
        double var_chaste_interface__Ca_buffer__Ca_SLB_SL = NV_Ith_S(rY, 27);
        // Units: millimolar; Initial value: 0.00973710481246467
        double var_chaste_interface__Ca_buffer__Ca_SLB_jct = NV_Ith_S(rY, 28);
        // Units: millimolar; Initial value: 0.00774564218017916
        double var_chaste_interface__Ca_buffer__Ca_SLHigh_SL = NV_Ith_S(rY, 29);
        // Units: millimolar; Initial value: 0.113168405274355
        double var_chaste_interface__Ca_buffer__Ca_SLHigh_jct = NV_Ith_S(rY, 30);
        // Units: millimolar; Initial value: 0.0772568134367606
        double var_chaste_interface__Ca_buffer__Ca_Calsequestrin = NV_Ith_S(rY, 31);
        // Units: millimolar; Initial value: 1.18828527890062
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC = NV_Ith_S(rY, 32);
        // Units: millimolar; Initial value: 0.00886665040283094
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg = NV_Ith_S(rY, 33);
        // Units: millimolar; Initial value: 0.117873278193472
        double var_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg = NV_Ith_S(rY, 34);
        // Units: millimolar; Initial value: 0.0103906683506505
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin = NV_Ith_S(rY, 35);
        // Units: millimolar; Initial value: 0.000293073957804278
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin = NV_Ith_S(rY, 36);
        // Units: millimolar; Initial value: 0.00195899238146509
        double var_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin = NV_Ith_S(rY, 37);
        // Units: millimolar; Initial value: 0.137523520981802
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_SRB = NV_Ith_S(rY, 38);
        // Units: millimolar; Initial value: 0.00215728901718264
        double var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_Cytosol = NV_Ith_S(rY, 39);
        // Units: millimolar; Initial value: 0.0
        double var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_SL = NV_Ith_S(rY, 40);
        // Units: millimolar; Initial value: 0.0
        double var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_jct = NV_Ith_S(rY, 41);
        // Units: millimolar; Initial value: 0.0
        double var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_Cytosol = NV_Ith_S(rY, 42);
        // Units: millimolar; Initial value: 0.0
        double var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_SL = NV_Ith_S(rY, 43);
        // Units: millimolar; Initial value: 0.0
        double var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_jct = NV_Ith_S(rY, 44);
        // Units: millimolar; Initial value: 0.0

        // Mathematics
        double d_dt_chaste_interface_var_cell__V;
        const double var_Ca_buffer__Bmax_Calsequestrin = 0.14000000000000001; // millimolar
        const double var_Ca_buffer__Bmax_SLB_SL = 0.037400000000000003; // millimolar
        const double var_Ca_buffer__Bmax_SLB_jct = 0.0045999999999999999; // millimolar
        const double var_Ca_buffer__Bmax_SLHigh_SL = 0.0134; // millimolar
        const double var_Ca_buffer__Bmax_SLHigh_jct = 0.00165; // millimolar
        const double var_Ca_buffer__koff_Calsequestrin = 65.0; // per_millisecond
        const double var_Ca_buffer__koff_SLB = 1.3; // per_millisecond
        const double var_Ca_buffer__koff_SLHigh = 0.029999999999999999; // per_millisecond
        const double var_Ca_buffer__kon_Calsequestrin = 100.0; // per_millimolar_per_millisecond
        const double var_Ca_buffer__kon_SL = 100.0; // per_millimolar_per_millisecond
        const double d_dt_chaste_interface_var_ICaL_fCa_gate__fCaB_SL = -0.011900000000000001 * var_chaste_interface__ICaL_fCa_gate__fCaB_SL + 1.7 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * var_chaste_interface__Ca_buffer__Ca_SL; // 1 / millisecond
        const double d_dt_chaste_interface_var_ICaL_fCa_gate__fCaB_jct = -0.011900000000000001 * var_chaste_interface__ICaL_fCa_gate__fCaB_jct + 1.7 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * var_chaste_interface__Ca_buffer__Ca_jct; // 1 / millisecond
        const double var_ICab__Fx_CaBk_SL = 0.89000000000000001; // dimensionless
        const double var_ICab__Fx_CaBk_jct = 0.11; // dimensionless
        const double var_ICab__G_CaBk = 0.00025129999999999998; // milliS_per_microF
        const double var_ICap__Fx_SLCaP_SL = 0.89000000000000001; // dimensionless
        const double var_ICap__Fx_SLCaP_jct = 0.11; // dimensionless
        const double var_ICap__H = 1.6000000000000001; // dimensionless
        const double var_ICap__Km = 0.00050000000000000001; // millimolar
        const double var_ICap__Q10_SLCaP = 2.3500000000000001; // dimensionless
        const double var_ICap__V_maxAF = 0.067299999999999999; // microA_per_microF
        const double var_INa__Fx_Na_SL = 0.89000000000000001; // dimensionless
        const double var_INa__Fx_Na_jct = 0.11; // dimensionless
        const double var_INaCa__Fx_NCX_SL = 0.89000000000000001; // dimensionless
        const double var_INaCa__Fx_NCX_jct = 0.11; // dimensionless
        const double var_INaCa__HNa = 3.0; // dimensionless
        const double var_INaCa__K_mCai = 0.0035899999999999999; // millimolar
        const double var_INaCa__K_mCao = 1.3; // millimolar
        const double var_INaCa__K_mNai = 12.289999999999999; // millimolar
        const double var_INaCa__K_mNao = 87.5; // millimolar
        const double var_INaCa__Kd_act = 0.00025599999999999999; // millimolar
        const double var_INaCa__Ka_SL = 1 / (1.0 + pow(var_INaCa__Kd_act, 3) / pow(var_chaste_interface__Ca_buffer__Ca_SL, 3)); // dimensionless
        const double var_INaCa__Ka_jct = 1 / (1.0 + pow(var_INaCa__Kd_act, 3) / pow(var_chaste_interface__Ca_buffer__Ca_jct, 3)); // dimensionless
        const double var_INaCa__Q10_NCX = 1.5700000000000001; // dimensionless
        const double var_INaCa__eta = 0.34999999999999998; // dimensionless
        const double var_INaCa__ksat = 0.27000000000000002; // dimensionless
        const double var_INaK__Fx_NaK_SL = 0.89000000000000001; // dimensionless
        const double var_INaK__Fx_NaK_jct = 0.11; // dimensionless
        const double var_INaK__H_NaK = 4.0; // dimensionless
        const double var_INaK__I_NaK_max = 1.9099999999999999; // microA_per_microF
        const double var_INaK__Km_Ko = 1.5; // millimolar
        const double var_INaK__Km_Nai = 11.0; // millimolar
        const double var_INaK__Q10_Km_Nai = 1.49; // dimensionless
        const double var_INaK__Q10_NaK = 1.6299999999999999; // dimensionless
        const double var_INa__openProb = pow(var_chaste_interface__INa_m_gate__m, 3) * var_chaste_interface__INa_h_gate__h * var_chaste_interface__INa_j_gate__j; // dimensionless
        const double var_INab__Fx_NaBk_SL = 0.89000000000000001; // dimensionless
        const double var_INab__Fx_NaBk_jct = 0.11; // dimensionless
        const double var_INab__G_NaBk = 0.00029700000000000001; // milliS_per_microF
        const double var_Jleak_SR__j_leak_SR = (-var_chaste_interface__Ca_buffer__Ca_jct + var_chaste_interface__Ca_buffer__Ca_SR) * NV_Ith_S(mParameters, 0); // millimolar_per_millisecond
        const double var_Jpump_SR__H = 1.7869999999999999; // dimensionless
        const double var_Jpump_SR__Kmf = 0.00024600000000000002; // millimolar
        const double var_Jpump_SR__Kmr = 1.7; // millimolar
        const double var_Jpump_SR__Q10_SRCaP = 2.6000000000000001; // dimensionless
        const double var_Jrel_SR__EC50_SR = 0.45000000000000001; // millimolar
        const double var_Jrel_SR__HSR = 2.5; // dimensionless
        const double var_Jrel_SR__Max_SR = 15.0; // dimensionless
        const double var_Jrel_SR__Min_SR = 1.0; // dimensionless
        const double var_Jrel_SR__RI = 1.0 - var_chaste_interface__Jrel_SR__I - var_chaste_interface__Jrel_SR__O - var_chaste_interface__Jrel_SR__R; // dimensionless
        const double var_Jrel_SR__kCaSR = -(-var_Jrel_SR__Min_SR + var_Jrel_SR__Max_SR) / (1.0 + pow((var_Jrel_SR__EC50_SR / var_chaste_interface__Ca_buffer__Ca_SR), var_Jrel_SR__HSR)) + var_Jrel_SR__Max_SR; // dimensionless
        const double var_Jrel_SR__kiCa = 0.5; // per_millimolar_per_millisecond
        const double var_Jrel_SR__kiSRCa = var_Jrel_SR__kCaSR * var_Jrel_SR__kiCa; // per_millimolar_per_millisecond
        const double var_Jrel_SR__kim = 0.0050000000000000001; // per_millisecond
        const double var_Jrel_SR__koCa = 10.0; // per_millimolar2_per_millisecond
        const double var_Jrel_SR__koSRCa = var_Jrel_SR__koCa / var_Jrel_SR__kCaSR; // per_millimolar2_per_millisecond
        const double var_Jrel_SR__kom = 0.059999999999999998; // per_millisecond
        const double d_dt_chaste_interface_var_Jrel_SR__I = -var_chaste_interface__Jrel_SR__I * var_Jrel_SR__kim - var_chaste_interface__Jrel_SR__I * var_Jrel_SR__kom + pow(var_chaste_interface__Ca_buffer__Ca_jct, 2) * var_Jrel_SR__RI * var_Jrel_SR__koSRCa + var_chaste_interface__Ca_buffer__Ca_jct * var_chaste_interface__Jrel_SR__O * var_Jrel_SR__kiSRCa; // 1 / millisecond
        const double d_dt_chaste_interface_var_Jrel_SR__O = var_chaste_interface__Jrel_SR__I * var_Jrel_SR__kim - var_chaste_interface__Jrel_SR__O * var_Jrel_SR__kom + pow(var_chaste_interface__Ca_buffer__Ca_jct, 2) * var_chaste_interface__Jrel_SR__R * var_Jrel_SR__koSRCa - var_chaste_interface__Ca_buffer__Ca_jct * var_chaste_interface__Jrel_SR__O * var_Jrel_SR__kiSRCa; // 1 / millisecond
        const double d_dt_chaste_interface_var_Jrel_SR__R = var_chaste_interface__Jrel_SR__O * var_Jrel_SR__kom + var_Jrel_SR__RI * var_Jrel_SR__kim - pow(var_chaste_interface__Ca_buffer__Ca_jct, 2) * var_chaste_interface__Jrel_SR__R * var_Jrel_SR__koSRCa - var_chaste_interface__Ca_buffer__Ca_jct * var_chaste_interface__Jrel_SR__R * var_Jrel_SR__kiSRCa; // 1 / millisecond
        const double var_Jrel_SR__j_rel_SR = (-var_chaste_interface__Ca_buffer__Ca_jct + var_chaste_interface__Ca_buffer__Ca_SR) * var_chaste_interface__Jrel_SR__O * NV_Ith_S(mParameters, 1); // millimolar_per_millisecond
        const double var_Na_buffer__Bmax_SL = 1.6499999999999999; // millimolar
        const double var_Na_buffer__Bmax_jct = 7.5609999999999999; // millimolar
        const double var_Na_buffer__koff = 0.001; // per_millisecond
        const double var_Na_buffer__kon = 0.0001; // per_millimolar_per_millisecond
        const double var_Na_buffer__dNa_SL_buf = -var_chaste_interface__Na_buffer__Na_SL_buf * var_Na_buffer__koff + (-var_chaste_interface__Na_buffer__Na_SL_buf + var_Na_buffer__Bmax_SL) * var_chaste_interface__Na_buffer__Na_SL * var_Na_buffer__kon; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_Na_buffer__Na_SL_buf = var_Na_buffer__dNa_SL_buf; // millimolar / millisecond
        const double var_Na_buffer__dNa_jct_buf = -var_chaste_interface__Na_buffer__Na_jct_buf * var_Na_buffer__koff + (-var_chaste_interface__Na_buffer__Na_jct_buf + var_Na_buffer__Bmax_jct) * var_chaste_interface__Na_buffer__Na_jct * var_Na_buffer__kon; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_Na_buffer__Na_jct_buf = var_Na_buffer__dNa_jct_buf; // millimolar / millisecond
        const double var_ICaL_d_gate__d_infinity = 1 / (1.0 + exp(-2.4166666666666665 - 0.16666666666666666 * var_chaste_interface__cell__V)); // dimensionless
        const double var_ICaL_d_gate__tau_d = ((fabs(14.5 + var_chaste_interface__cell__V) < 5.9999999999643672e-7) ? (47619047.619881123 * (1.0 - exp(-9.9999999998249642e-8)) / (1.0 + exp(-9.9999999998249642e-8)) - 833333.3333382823 * (14.4999994 + var_chaste_interface__cell__V) * (-47619047.619881123 * (1.0 - exp(-9.9999999998249642e-8)) / (1.0 + exp(-9.9999999998249642e-8)) - 47619047.618779711 * (1.0 - exp(1.000000000005626e-7)) / (1.0 + exp(1.000000000005626e-7)))) : (28.571428571428569 * (1.0 - exp(-2.4166666666666665 - 0.16666666666666666 * var_chaste_interface__cell__V)) / ((1.0 + exp(-2.4166666666666665 - 0.16666666666666666 * var_chaste_interface__cell__V)) * (14.5 + var_chaste_interface__cell__V)))); // millisecond
        const double d_dt_chaste_interface_var_ICaL_d_gate__d = (-var_chaste_interface__ICaL_d_gate__d + var_ICaL_d_gate__d_infinity) / var_ICaL_d_gate__tau_d; // 1 / millisecond
        const double var_ICaL_f_gate__f_infinity = 1 / (1.0 + exp(9.7388888888888889 + 0.27777777777777779 * var_chaste_interface__cell__V)) + 0.59999999999999998 / (1.0 + exp(2.5 - 0.050000000000000003 * var_chaste_interface__cell__V)); // dimensionless
        const double var_ICaL_f_gate__tau_f = 1 / (0.02 + 0.019699999999999999 * exp(-0.23877882250000002 * pow((1 + 0.068965517241379309 * var_chaste_interface__cell__V), 2))); // millisecond
        const double d_dt_chaste_interface_var_ICaL_f_gate__f = (-var_chaste_interface__ICaL_f_gate__f + var_ICaL_f_gate__f_infinity) / var_ICaL_f_gate__tau_f; // 1 / millisecond
        const double var_IKr_Xr_gate__Xr_infinity = 1 / (1.0 + exp(-6.666666666666667 - 0.13333333333333333 * var_chaste_interface__cell__V)); // dimensionless
        const double var_IKr_Xr_gate__tau_Xr = 1 / (((fabs(7.0 + var_chaste_interface__cell__V) < 8.1300813008222672e-7) ? (1.1219512195134727e-9 / (1.0 - exp(-1.0000000000011388e-7)) - 614999.99999929965 * (6.9999991869918698 + var_chaste_interface__cell__V) * (-1.1219512195134727e-9 / (1.0 - exp(1.0000000000011388e-7)) - 1.1219512195134727e-9 / (1.0 - exp(-1.0000000000011388e-7)))) : (0.0013799999999999999 * (7.0 + var_chaste_interface__cell__V) / (1.0 - exp(-0.86099999999999999 - 0.123 * var_chaste_interface__cell__V)))) + ((fabs(10.0 + var_chaste_interface__cell__V) < 6.8965517241448282e-7) ? (-4.2068965517283451e-10 / (-1.0 + exp(-1.000000000001e-7)) + 724999.99999927497 * (10.000000689655172 + var_chaste_interface__cell__V) * (4.2068965517283451e-10 / (-1.0 + exp(1.000000000001e-7)) + 4.2068965517283451e-10 / (-1.0 + exp(-1.000000000001e-7)))) : (0.00060999999999999997 * (10.0 + var_chaste_interface__cell__V) / (-1.0 + exp(1.45 + 0.14499999999999999 * var_chaste_interface__cell__V))))); // millisecond
        const double d_dt_chaste_interface_var_IKr_Xr_gate__Xr = (-var_chaste_interface__IKr_Xr_gate__Xr + var_IKr_Xr_gate__Xr_infinity) / var_IKr_Xr_gate__tau_Xr; // 1 / millisecond
        const double var_IKs_Xs_gate__Xs_infinity = 1 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__cell__V)); // dimensionless
        const double var_IKs_Xs_gate__tau_Xs = ((fabs(30.0 + var_chaste_interface__cell__V) < 1.455604075689676e-6) ? (1 / (-1.0465793304208771e-10 / (1.0 - exp(2.1542940320207204e-7)) - 1.9068413391534758e-10 / (-1.0 + exp(-9.9999999999880736e-8)) + 343500.00000040967 * (30.000001455604075 + var_chaste_interface__cell__V) * (1.0465793304208771e-10 / (1.0 - exp(2.1542940320207204e-7)) + 1.0465793304208771e-10 / (1.0 - exp(-2.1542940320207204e-7)) + 1.9068413391534758e-10 / (-1.0 + exp(9.9999999999880736e-8)) + 1.9068413391534758e-10 / (-1.0 + exp(-9.9999999999880736e-8))))) : (1 / (0.00013100000000000001 * (30.0 + var_chaste_interface__cell__V) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__cell__V)) + 7.1899999999999999e-5 * (30.0 + var_chaste_interface__cell__V) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__cell__V))))); // millisecond
        const double d_dt_chaste_interface_var_IKs_Xs_gate__Xs = (-var_chaste_interface__IKs_Xs_gate__Xs + var_IKs_Xs_gate__Xs_infinity) / var_IKs_Xs_gate__tau_Xs; // 1 / millisecond
        const double var_INa_h_gate__alpha_h = ((var_chaste_interface__cell__V < -40.0) ? (0.13500000000000001 * exp(-11.764705882352942 + 0.14705882352941177 * NV_Ith_S(mParameters, 11) - 0.14705882352941177 * var_chaste_interface__cell__V)) : (0)); // per_millisecond
        const double var_INa_h_gate__beta_h = ((var_chaste_interface__cell__V < -40.0) ? (310000.0 * exp(0.34999999999999998 * var_chaste_interface__cell__V - 0.34999999999999998 * NV_Ith_S(mParameters, 11)) + 3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__cell__V - 0.079000000000000001 * NV_Ith_S(mParameters, 11))) : (7.6923076923076916 / (1.0 + exp(-0.96036036036036043 + 0.0900900900900901 * NV_Ith_S(mParameters, 11) - 0.0900900900900901 * var_chaste_interface__cell__V)))); // per_millisecond
        const double var_INa_h_gate__h_infinity = 0.01 * NV_Ith_S(mParameters, 10) + (1.0 - 0.01 * NV_Ith_S(mParameters, 10)) * var_INa_h_gate__alpha_h / (var_INa_h_gate__alpha_h + var_INa_h_gate__beta_h); // dimensionless
        const double var_INa_h_gate__tau_h = 1 / (var_INa_h_gate__alpha_h + var_INa_h_gate__beta_h); // millisecond
        const double d_dt_chaste_interface_var_INa_h_gate__h = (-var_chaste_interface__INa_h_gate__h + var_INa_h_gate__h_infinity) / var_INa_h_gate__tau_h; // 1 / millisecond
        const double var_INa_j_gate__alpha_j = ((var_chaste_interface__cell__V < -40.0) ? ((37.780000000000001 + var_chaste_interface__cell__V) * (-127140.0 * exp(0.24440000000000001 * var_chaste_interface__cell__V - 0.24440000000000001 * NV_Ith_S(mParameters, 11)) - 3.4740000000000003e-5 * exp(0.043909999999999998 * NV_Ith_S(mParameters, 11) - 0.043909999999999998 * var_chaste_interface__cell__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__cell__V - 0.311 * NV_Ith_S(mParameters, 11)))) : (0)); // per_millisecond
        const double var_INa_j_gate__beta_j = ((var_chaste_interface__cell__V < -40.0) ? (0.1212 * exp(0.01052 * NV_Ith_S(mParameters, 11) - 0.01052 * var_chaste_interface__cell__V) / (1.0 + exp(-5.5312920000000005 + 0.13780000000000001 * NV_Ith_S(mParameters, 11) - 0.13780000000000001 * var_chaste_interface__cell__V))) : (0.29999999999999999 * exp(2.5349999999999999e-7 * NV_Ith_S(mParameters, 11) - 2.5349999999999999e-7 * var_chaste_interface__cell__V) / (1.0 + exp(-3.2000000000000002 + 0.10000000000000001 * NV_Ith_S(mParameters, 11) - 0.10000000000000001 * var_chaste_interface__cell__V)))); // per_millisecond
        const double var_INa_j_gate__j_infinity = 0.01 * NV_Ith_S(mParameters, 10) + (1.0 - 0.01 * NV_Ith_S(mParameters, 10)) * var_INa_j_gate__alpha_j / (var_INa_j_gate__alpha_j + var_INa_j_gate__beta_j); // dimensionless
        const double var_INa_j_gate__tau_j = 1 / (var_INa_j_gate__alpha_j + var_INa_j_gate__beta_j); // millisecond
        const double d_dt_chaste_interface_var_INa_j_gate__j = (-var_chaste_interface__INa_j_gate__j + var_INa_j_gate__j_infinity) / var_INa_j_gate__tau_j; // 1 / millisecond
        const double var_INa_m_gate__alpha_m = ((fabs(47.130000000000003 + var_chaste_interface__cell__V) < 1.0000000000287557e-6) ? (3.200000000092018e-7 / (1.0 - exp(-1.0000000000287557e-7)) - 499999.99998562218 * (47.129999000000005 + var_chaste_interface__cell__V) * (-3.200000000092018e-7 / (1.0 - exp(1.0000000000287557e-7)) - 3.200000000092018e-7 / (1.0 - exp(-1.0000000000287557e-7)))) : (0.32000000000000001 * (47.130000000000003 + var_chaste_interface__cell__V) / (1.0 - exp(-4.7130000000000001 - 0.10000000000000001 * var_chaste_interface__cell__V)))); // per_millisecond
        const double var_INa_m_gate__beta_m = 0.080000000000000002 * exp(-0.090909090909090912 * var_chaste_interface__cell__V); // per_millisecond
        const double var_INa_m_gate__m_infinity = var_INa_m_gate__alpha_m / (var_INa_m_gate__alpha_m + var_INa_m_gate__beta_m); // dimensionless
        const double var_INa_m_gate__tau_m = 1 / (var_INa_m_gate__alpha_m + var_INa_m_gate__beta_m); // millisecond
        const double d_dt_chaste_interface_var_INa_m_gate__m = (-var_chaste_interface__INa_m_gate__m + var_INa_m_gate__m_infinity) / var_INa_m_gate__tau_m; // 1 / millisecond
        const double var_Itof_X_gate__X_tof_infinity = 1 / (1.0 + exp(-0.20000000000000001 - 0.066666666666666666 * var_chaste_interface__cell__V)); // dimensionless
        const double var_Itof_X_gate__tau_X_tof = 1.5 + 3.5 * exp(-0.0011111111111111111 * pow(var_chaste_interface__cell__V, 2)); // millisecond
        const double d_dt_chaste_interface_var_Itof_X_gate__X_tof = (-var_chaste_interface__Itof_X_gate__X_tof + var_Itof_X_gate__X_tof_infinity) / var_Itof_X_gate__tau_X_tof; // 1 / millisecond
        const double var_Itof_Y_gate__Y_tof_infinity = 1 / (1.0 + exp(3.3500000000000001 + 0.10000000000000001 * var_chaste_interface__cell__V)); // dimensionless
        const double var_Itof_Y_gate__tau_Y_tof = 20.0 + 20.0 / (1.0 + exp(3.3500000000000001 + 0.10000000000000001 * var_chaste_interface__cell__V)); // millisecond
        const double d_dt_chaste_interface_var_Itof_Y_gate__Y_tof = (-var_chaste_interface__Itof_Y_gate__Y_tof + var_Itof_Y_gate__Y_tof_infinity) / var_Itof_Y_gate__tau_Y_tof; // 1 / millisecond
        const double var_Itos_R_gate__R_tos_infinity = 1 / (1.0 + exp(3.3500000000000001 + 0.10000000000000001 * var_chaste_interface__cell__V)); // dimensionless
        const double var_Itos_R_gate__tau_R_tos = 220.0 + 2800.0 / (1.0 + exp(6.0 + 0.10000000000000001 * var_chaste_interface__cell__V)); // millisecond
        const double d_dt_chaste_interface_var_Itos_R_gate__R_tos = (-var_chaste_interface__Itos_R_gate__R_tos + var_Itos_R_gate__R_tos_infinity) / var_Itos_R_gate__tau_R_tos; // 1 / millisecond
        const double var_Itos_X_gate__X_tos_infinity = 1 / (1.0 + exp(-0.20000000000000001 - 0.066666666666666666 * var_chaste_interface__cell__V)); // dimensionless
        const double var_Itos_X_gate__tau_X_tos = 0.5 + 9.0 / (1.0 + exp(0.20000000000000001 + 0.066666666666666666 * var_chaste_interface__cell__V)); // millisecond
        const double d_dt_chaste_interface_var_Itos_X_gate__X_tos = (-var_chaste_interface__Itos_X_gate__X_tos + var_Itos_X_gate__X_tos_infinity) / var_Itos_X_gate__tau_X_tos; // 1 / millisecond
        const double var_Itos_Y_gate__Y_tos_infinity = 1 / (1.0 + exp(3.3500000000000001 + 0.10000000000000001 * var_chaste_interface__cell__V)); // dimensionless
        const double var_Itos_Y_gate__tau_Y_tos = 30.0 + 3000.0 / (1.0 + exp(6.0 + 0.10000000000000001 * var_chaste_interface__cell__V)); // millisecond
        const double d_dt_chaste_interface_var_Itos_Y_gate__Y_tos = (-var_chaste_interface__Itos_Y_gate__Y_tos + var_Itos_Y_gate__Y_tos_infinity) / var_Itos_Y_gate__tau_Y_tos; // 1 / millisecond
        const double var_cytosolic_Ca_buffer__Bmax_Calmodulin = 0.024; // millimolar
        const double var_cytosolic_Ca_buffer__Bmax_Myosin_Ca = 0.14000000000000001; // millimolar
        const double var_cytosolic_Ca_buffer__Bmax_Myosin_Mg = 0.14000000000000001; // millimolar
        const double var_cytosolic_Ca_buffer__Bmax_SRB = 0.017100000000000001; // millimolar
        const double var_cytosolic_Ca_buffer__Bmax_TroponinC = 0.070000000000000007; // millimolar
        const double var_cytosolic_Ca_buffer__Bmax_TroponinC_Ca_Mg_Ca = 0.14000000000000001; // millimolar
        const double var_cytosolic_Ca_buffer__Bmax_TroponinC_Ca_Mg_Mg = 0.14000000000000001; // millimolar
        const double var_cytosolic_Ca_buffer__koff_Calmodulin = 0.23799999999999999; // per_millisecond
        const double var_cytosolic_Ca_buffer__koff_Myosin_Ca = 0.00046000000000000001; // per_millisecond
        const double var_cytosolic_Ca_buffer__koff_Myosin_Mg = 5.7000000000000003e-5; // per_millisecond
        const double var_cytosolic_Ca_buffer__koff_SRB = 0.059999999999999998; // per_millisecond
        const double var_cytosolic_Ca_buffer__koff_TroponinC = 0.019599999999999999; // per_millisecond
        const double var_cytosolic_Ca_buffer__koff_TroponinC_Ca_Mg_Ca = 3.1999999999999999e-5; // per_millisecond
        const double var_cytosolic_Ca_buffer__koff_TroponinC_Ca_Mg_Mg = 0.0033300000000000001; // per_millisecond
        const double var_cytosolic_Ca_buffer__kon_Calmodulin = 34.0; // per_millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__dCa_Calmodulin = -var_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin * var_cytosolic_Ca_buffer__koff_Calmodulin + (-var_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin + var_cytosolic_Ca_buffer__Bmax_Calmodulin) * var_chaste_interface__Ca_buffer__Cai * var_cytosolic_Ca_buffer__kon_Calmodulin; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_cytosolic_Ca_buffer__Ca_Calmodulin = var_cytosolic_Ca_buffer__dCa_Calmodulin; // millimolar / millisecond
        const double var_cytosolic_Ca_buffer__kon_Myosin_Ca = 13.800000000000001; // per_millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__dCa_Myosin = -var_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin * var_cytosolic_Ca_buffer__koff_Myosin_Ca + (-var_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin - var_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin + var_cytosolic_Ca_buffer__Bmax_Myosin_Ca) * var_chaste_interface__Ca_buffer__Cai * var_cytosolic_Ca_buffer__kon_Myosin_Ca; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_cytosolic_Ca_buffer__Ca_Myosin = var_cytosolic_Ca_buffer__dCa_Myosin; // millimolar / millisecond
        const double var_cytosolic_Ca_buffer__kon_Myosin_Mg = 0.015699999999999999; // per_millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__kon_SRB = 100.0; // per_millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__dCa_SRB = -var_chaste_interface__cytosolic_Ca_buffer__Ca_SRB * var_cytosolic_Ca_buffer__koff_SRB + (-var_chaste_interface__cytosolic_Ca_buffer__Ca_SRB + var_cytosolic_Ca_buffer__Bmax_SRB) * var_chaste_interface__Ca_buffer__Cai * var_cytosolic_Ca_buffer__kon_SRB; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_cytosolic_Ca_buffer__Ca_SRB = var_cytosolic_Ca_buffer__dCa_SRB; // millimolar / millisecond
        const double var_cytosolic_Ca_buffer__kon_TroponinC = 32.700000000000003; // per_millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__dCa_TroponinC = -var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC * var_cytosolic_Ca_buffer__koff_TroponinC + (-var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC + var_cytosolic_Ca_buffer__Bmax_TroponinC) * var_chaste_interface__Ca_buffer__Cai * var_cytosolic_Ca_buffer__kon_TroponinC; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_cytosolic_Ca_buffer__Ca_TroponinC = var_cytosolic_Ca_buffer__dCa_TroponinC; // millimolar / millisecond
        const double var_cytosolic_Ca_buffer__kon_TroponinC_Ca_Mg_Ca = 2.3700000000000001; // per_millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__dCa_TroponinC_Ca_Mg = -var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg * var_cytosolic_Ca_buffer__koff_TroponinC_Ca_Mg_Ca + (-var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg - var_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg + var_cytosolic_Ca_buffer__Bmax_TroponinC_Ca_Mg_Ca) * var_chaste_interface__Ca_buffer__Cai * var_cytosolic_Ca_buffer__kon_TroponinC_Ca_Mg_Ca; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg = var_cytosolic_Ca_buffer__dCa_TroponinC_Ca_Mg; // millimolar / millisecond
        const double var_cytosolic_Ca_buffer__kon_TroponinC_Ca_Mg_Mg = 0.0030000000000000001; // per_millimolar_per_millisecond
        const double var_indo_fluo_Ca_buffer_not_connected__Bmax_Fluo3_Cytosol = 0.025000000000000001; // millimolar
        const double var_indo_fluo_Ca_buffer_not_connected__Bmax_Fluo3_SL = 0.00076999999999999996; // millimolar
        const double var_indo_fluo_Ca_buffer_not_connected__Bmax_Fluo3_jct = 2.0000000000000002e-5; // millimolar
        const double var_indo_fluo_Ca_buffer_not_connected__Bmax_Indo1_Cytosol = 0.025000000000000001; // millimolar
        const double var_indo_fluo_Ca_buffer_not_connected__Bmax_Indo1_SL = 0.00076999999999999996; // millimolar
        const double var_indo_fluo_Ca_buffer_not_connected__Bmax_Indo1_jct = 2.0000000000000002e-5; // millimolar
        const double var_indo_fluo_Ca_buffer_not_connected__Fluo3 = 0; // millimolar
        const double var_indo_fluo_Ca_buffer_not_connected__Indo1 = 0; // millimolar
        const double var_indo_fluo_Ca_buffer_not_connected__koff_Fluo3 = 0.11; // per_millisecond
        const double var_indo_fluo_Ca_buffer_not_connected__koff_Indo1 = 0.059999999999999998; // per_millisecond
        const double var_indo_fluo_Ca_buffer_not_connected__kon_Fluo3 = 100.0; // per_millimolar2_per_millisecond
        const double var_indo_fluo_Ca_buffer_not_connected__kon_Indo1 = 100.0; // per_millimolar2_per_millisecond
        const double var_ion_diffusion__J_Ca_SL_cytosol = 3.7243000000000002e-12 * var_chaste_interface__Ca_buffer__Ca_SL - 3.7243000000000002e-12 * var_chaste_interface__Ca_buffer__Cai; // millimole_per_millisecond
        const double var_ion_diffusion__J_Ca_jct_SL = 8.2413000000000004e-13 * var_chaste_interface__Ca_buffer__Ca_jct - 8.2413000000000004e-13 * var_chaste_interface__Ca_buffer__Ca_SL; // millimole_per_millisecond
        const double var_ion_diffusion__J_Na_SL_cytosol = 1.6385999999999999e-12 * var_chaste_interface__Na_buffer__Na_SL - 1.6385999999999999e-12 * var_chaste_interface__Na_buffer__Nai; // millimole_per_millisecond
        const double var_ion_diffusion__J_Na_jct_SL = 1.8312999999999999e-14 * var_chaste_interface__Na_buffer__Na_jct - 1.8312999999999999e-14 * var_chaste_interface__Na_buffer__Na_SL; // millimole_per_millisecond
        const double var_ICaL__i_CaL_Ca_SL = ((fabs(var_chaste_interface__cell__V) < 1.3356415961992688e-6) ? (374351.92301797954 * (1.3356415961992688e-6 + var_chaste_interface__cell__V) * (0.00086838029999999997 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_SL * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 8) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(9.9999999999999995e-8)) + 0.00086838029999999997 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_SL * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 8) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) - 0.00086838029999999997 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_SL * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 8) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) : (650.15967043186004 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_SL * exp(0.074870384603595908 * var_chaste_interface__cell__V)) * NV_Ith_S(mParameters, 8) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f * var_chaste_interface__cell__V / (-1.0 + exp(0.074870384603595908 * var_chaste_interface__cell__V)))); // microA_per_microF
        const double var_ICaL__i_CaL_Ca_jct = ((fabs(var_chaste_interface__cell__V) < 1.3356415961992688e-6) ? (374351.92301797954 * (1.3356415961992688e-6 + var_chaste_interface__cell__V) * (0.0078154226999999996 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_jct * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 8) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(9.9999999999999995e-8)) + 0.0078154226999999996 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_jct * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 8) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) - 0.0078154226999999996 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_jct * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 8) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) : (5851.4370338867393 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_jct * exp(0.074870384603595908 * var_chaste_interface__cell__V)) * NV_Ith_S(mParameters, 8) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f * var_chaste_interface__cell__V / (-1.0 + exp(0.074870384603595908 * var_chaste_interface__cell__V)))); // microA_per_microF
        const double var_model_parameters__Cm_per_area = 1.9999999999999999e-6; // farad_per_cm2
        const double var_model_parameters__F = 96486.699999999997; // coulomb_per_mole
        const double var_model_parameters__Mgi = 1.0; // millimolar
        const double var_cytosolic_Ca_buffer__dMg_Myosin = -var_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin * var_cytosolic_Ca_buffer__koff_Myosin_Mg + (-var_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin - var_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin + var_cytosolic_Ca_buffer__Bmax_Myosin_Mg) * var_cytosolic_Ca_buffer__kon_Myosin_Mg * var_model_parameters__Mgi; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_cytosolic_Ca_buffer__Mg_Myosin = var_cytosolic_Ca_buffer__dMg_Myosin; // millimolar / millisecond
        const double var_cytosolic_Ca_buffer__dMg_TroponinC_Ca_Mg = -var_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg * var_cytosolic_Ca_buffer__koff_TroponinC_Ca_Mg_Mg + (-var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg - var_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg + var_cytosolic_Ca_buffer__Bmax_TroponinC_Ca_Mg_Mg) * var_cytosolic_Ca_buffer__kon_TroponinC_Ca_Mg_Mg * var_model_parameters__Mgi; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg = var_cytosolic_Ca_buffer__dMg_TroponinC_Ca_Mg; // millimolar / millisecond
        const double var_cytosolic_Ca_buffer__dCa_cytosol_tot_bound = var_cytosolic_Ca_buffer__dCa_Calmodulin + var_cytosolic_Ca_buffer__dCa_Myosin + var_cytosolic_Ca_buffer__dCa_SRB + var_cytosolic_Ca_buffer__dCa_TroponinC + var_cytosolic_Ca_buffer__dCa_TroponinC_Ca_Mg + var_cytosolic_Ca_buffer__dMg_Myosin + var_cytosolic_Ca_buffer__dMg_TroponinC_Ca_Mg; // millimolar_per_millisecond
        const double var_ICaL__i_CaL_Na_SL = ((fabs(var_chaste_interface__cell__V) < 2.6712831923985376e-6) ? (187175.96150898977 * (2.6712831923985376e-6 + var_chaste_interface__cell__V) * (6.5128522499999997e-12 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * (-0.75 * NV_Ith_S(mParameters, 7) + 0.75 * var_chaste_interface__Na_buffer__Na_SL * exp(9.9999999999999995e-8)) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(9.9999999999999995e-8)) + 6.5128522499999997e-12 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * (-0.75 * NV_Ith_S(mParameters, 7) + 0.75 * var_chaste_interface__Na_buffer__Na_SL * exp(-9.9999999999999995e-8)) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) - 6.5128522499999997e-12 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * (-0.75 * NV_Ith_S(mParameters, 7) + 0.75 * var_chaste_interface__Na_buffer__Na_SL * exp(-9.9999999999999995e-8)) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) : (2.4380987641194746e-6 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * (-0.75 * NV_Ith_S(mParameters, 7) + 0.75 * var_chaste_interface__Na_buffer__Na_SL * exp(0.037435192301797954 * var_chaste_interface__cell__V)) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f * var_chaste_interface__cell__V / (-1.0 + exp(0.037435192301797954 * var_chaste_interface__cell__V)))); // microA_per_microF
        const double var_ICaL__i_CaL_Na_jct = ((fabs(var_chaste_interface__cell__V) < 2.6712831923985376e-6) ? (187175.96150898977 * (2.6712831923985376e-6 + var_chaste_interface__cell__V) * (5.8615670249999994e-11 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * (-0.75 * NV_Ith_S(mParameters, 7) + 0.75 * var_chaste_interface__Na_buffer__Na_jct * exp(9.9999999999999995e-8)) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(9.9999999999999995e-8)) + 5.8615670249999994e-11 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * (-0.75 * NV_Ith_S(mParameters, 7) + 0.75 * var_chaste_interface__Na_buffer__Na_jct * exp(-9.9999999999999995e-8)) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) - 5.8615670249999994e-11 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * (-0.75 * NV_Ith_S(mParameters, 7) + 0.75 * var_chaste_interface__Na_buffer__Na_jct * exp(-9.9999999999999995e-8)) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) : (2.1942888877075271e-5 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * (-0.75 * NV_Ith_S(mParameters, 7) + 0.75 * var_chaste_interface__Na_buffer__Na_jct * exp(0.037435192301797954 * var_chaste_interface__cell__V)) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f * var_chaste_interface__cell__V / (-1.0 + exp(0.037435192301797954 * var_chaste_interface__cell__V)))); // microA_per_microF
        const double var_INaK__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 7)); // dimensionless
        const double var_model_parameters__R = 8314.2999999999993; // joule_per_kilomole_kelvin
        const double var_model_parameters__T = 310.0; // kelvin
        const double var_ICap__Q_SLCaP = pow(var_ICap__Q10_SLCaP, (-31.0 + 0.10000000000000001 * var_model_parameters__T)); // dimensionless
        const double var_ICap__i_Cap_SL = var_ICap__Fx_SLCaP_SL * var_ICap__Q_SLCaP * var_ICap__V_maxAF / (1.0 + pow((var_ICap__Km / var_chaste_interface__Ca_buffer__Ca_SL), var_ICap__H)); // microA_per_microF
        const double var_ICap__i_Cap_jct = var_ICap__Fx_SLCaP_jct * var_ICap__Q_SLCaP * var_ICap__V_maxAF / (1.0 + pow((var_ICap__Km / var_chaste_interface__Ca_buffer__Ca_jct), var_ICap__H)); // microA_per_microF
        const double var_INaCa__Q_NCX = pow(var_INaCa__Q10_NCX, (-31.0 + 0.10000000000000001 * var_model_parameters__T)); // dimensionless
        const double var_INaCa__temp_SL = (pow(var_chaste_interface__Na_buffer__Na_SL, var_INaCa__HNa) * NV_Ith_S(mParameters, 5) * exp(var_INaCa__eta * var_chaste_interface__cell__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) - pow(NV_Ith_S(mParameters, 7), var_INaCa__HNa) * var_chaste_interface__Ca_buffer__Ca_SL * exp((-1.0 + var_INaCa__eta) * var_chaste_interface__cell__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))) / (1.0 + var_INaCa__ksat * exp((-1.0 + var_INaCa__eta) * var_chaste_interface__cell__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))); // millimolar4
        const double var_INaCa__i_NaCa_SL = var_INaCa__Fx_NCX_SL * var_INaCa__Ka_SL * var_INaCa__Q_NCX * NV_Ith_S(mParameters, 17) * var_INaCa__temp_SL / (pow(var_chaste_interface__Na_buffer__Na_SL, var_INaCa__HNa) * var_INaCa__K_mCao + pow(var_chaste_interface__Na_buffer__Na_SL, var_INaCa__HNa) * NV_Ith_S(mParameters, 5) + pow(NV_Ith_S(mParameters, 7), var_INaCa__HNa) * var_chaste_interface__Ca_buffer__Ca_SL + pow(var_INaCa__K_mNao, var_INaCa__HNa) * (1.0 + var_chaste_interface__Ca_buffer__Ca_SL / var_INaCa__K_mCai) * var_chaste_interface__Ca_buffer__Ca_SL + pow(NV_Ith_S(mParameters, 7), var_INaCa__HNa) * (1.0 + pow((var_chaste_interface__Na_buffer__Na_SL / var_INaCa__K_mNai), var_INaCa__HNa)) * var_INaCa__K_mCai); // microA_per_microF
        const double var_INaCa__temp_jct = (pow(var_chaste_interface__Na_buffer__Na_jct, var_INaCa__HNa) * NV_Ith_S(mParameters, 5) * exp(var_INaCa__eta * var_chaste_interface__cell__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) - pow(NV_Ith_S(mParameters, 7), var_INaCa__HNa) * var_chaste_interface__Ca_buffer__Ca_jct * exp((-1.0 + var_INaCa__eta) * var_chaste_interface__cell__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))) / (1.0 + var_INaCa__ksat * exp((-1.0 + var_INaCa__eta) * var_chaste_interface__cell__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))); // millimolar4
        const double var_INaCa__i_NaCa_jct = var_INaCa__Fx_NCX_jct * var_INaCa__Ka_jct * var_INaCa__Q_NCX * NV_Ith_S(mParameters, 17) * var_INaCa__temp_jct / (pow(var_chaste_interface__Na_buffer__Na_jct, var_INaCa__HNa) * var_INaCa__K_mCao + pow(var_chaste_interface__Na_buffer__Na_jct, var_INaCa__HNa) * NV_Ith_S(mParameters, 5) + pow(NV_Ith_S(mParameters, 7), var_INaCa__HNa) * var_chaste_interface__Ca_buffer__Ca_jct + pow(var_INaCa__K_mNao, var_INaCa__HNa) * (1.0 + var_chaste_interface__Ca_buffer__Ca_jct / var_INaCa__K_mCai) * var_chaste_interface__Ca_buffer__Ca_jct + pow(NV_Ith_S(mParameters, 7), var_INaCa__HNa) * (1.0 + pow((var_chaste_interface__Na_buffer__Na_jct / var_INaCa__K_mNai), var_INaCa__HNa)) * var_INaCa__K_mCai); // microA_per_microF
        const double var_INaK__Q_Km_Nai = pow(var_INaK__Q10_Km_Nai, (-31.0 + 0.10000000000000001 * var_model_parameters__T)); // dimensionless
        const double var_INaK__Q_NaK = pow(var_INaK__Q10_NaK, (-31.0 + 0.10000000000000001 * var_model_parameters__T)); // dimensionless
        const double var_INaK__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_chaste_interface__cell__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) + 0.036499999999999998 * var_INaK__sigma * exp(-var_chaste_interface__cell__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))); // dimensionless
        const double var_INaK__i_NaK_SL = var_INaK__Fx_NaK_SL * var_INaK__I_NaK_max * var_INaK__Q_NaK * var_INaK__f_NaK * NV_Ith_S(mParameters, 6) / ((1.0 + pow((var_INaK__Km_Nai * var_INaK__Q_Km_Nai / var_chaste_interface__Na_buffer__Na_SL), var_INaK__H_NaK)) * (var_INaK__Km_Ko + NV_Ith_S(mParameters, 6))); // microA_per_microF
        const double var_INaK__i_NaK_jct = var_INaK__Fx_NaK_jct * var_INaK__I_NaK_max * var_INaK__Q_NaK * var_INaK__f_NaK * NV_Ith_S(mParameters, 6) / ((1.0 + pow((var_INaK__Km_Nai * var_INaK__Q_Km_Nai / var_chaste_interface__Na_buffer__Na_jct), var_INaK__H_NaK)) * (var_INaK__Km_Ko + NV_Ith_S(mParameters, 6))); // microA_per_microF
        const double var_Jpump_SR__Q_SRCaP = pow(var_Jpump_SR__Q10_SRCaP, (-31.0 + 0.10000000000000001 * var_model_parameters__T)); // dimensionless
        const double var_model_parameters__cell_length = 100.0; // micrometre
        const double var_model_parameters__cell_radius = 10.25; // micrometre
        const double var_model_parameters__Cm = 2.0e-8 * M_PI * var_model_parameters__Cm_per_area * var_model_parameters__cell_length * var_model_parameters__cell_radius; // farad
        const double var_model_parameters__Vol_Cell = 3.1415926540000002e-15 * pow(var_model_parameters__cell_radius, 2) * var_model_parameters__cell_length; // liter
        const double var_model_parameters__Vol_SL = 0.02 * var_model_parameters__Vol_Cell; // liter
        const double var_model_parameters__Vol_SR = 0.035000000000000003 * var_model_parameters__Vol_Cell; // liter
        const double var_model_parameters__Vol_cytosol = 0.65000000000000002 * var_model_parameters__Vol_Cell; // liter
        const double var_Ca_buffer__dCa_SLB_SL = -var_chaste_interface__Ca_buffer__Ca_SLB_SL * var_Ca_buffer__koff_SLB + (-var_chaste_interface__Ca_buffer__Ca_SLB_SL + var_Ca_buffer__Bmax_SLB_SL * var_model_parameters__Vol_cytosol / var_model_parameters__Vol_SL) * var_chaste_interface__Ca_buffer__Ca_SL * var_Ca_buffer__kon_SL; // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_SLHigh_SL = -var_chaste_interface__Ca_buffer__Ca_SLHigh_SL * var_Ca_buffer__koff_SLHigh + (-var_chaste_interface__Ca_buffer__Ca_SLHigh_SL + var_Ca_buffer__Bmax_SLHigh_SL * var_model_parameters__Vol_cytosol / var_model_parameters__Vol_SL) * var_chaste_interface__Ca_buffer__Ca_SL * var_Ca_buffer__kon_SL; // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_SL_tot_bound = var_Ca_buffer__dCa_SLB_SL + var_Ca_buffer__dCa_SLHigh_SL; // millimolar_per_millisecond
        const double var_Ca_buffer__dCalsequestrin = -var_chaste_interface__Ca_buffer__Ca_Calsequestrin * var_Ca_buffer__koff_Calsequestrin + (-var_chaste_interface__Ca_buffer__Ca_Calsequestrin + var_Ca_buffer__Bmax_Calsequestrin * var_model_parameters__Vol_cytosol / var_model_parameters__Vol_SR) * var_chaste_interface__Ca_buffer__Ca_SR * var_Ca_buffer__kon_Calsequestrin; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_Ca_buffer__Ca_Calsequestrin = var_Ca_buffer__dCalsequestrin; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Ca_buffer__Ca_SLB_SL = var_Ca_buffer__dCa_SLB_SL; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Ca_buffer__Ca_SLHigh_SL = var_Ca_buffer__dCa_SLHigh_SL; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Na_buffer__Nai = NV_Ith_S(mParameters, 3) * var_ion_diffusion__J_Na_SL_cytosol / var_model_parameters__Vol_cytosol; // millimolar / millisecond
        const double var_Jpump_SR__j_pump_SR = (pow((var_chaste_interface__Ca_buffer__Cai / var_Jpump_SR__Kmf), var_Jpump_SR__H) - pow((var_chaste_interface__Ca_buffer__Ca_SR / var_Jpump_SR__Kmr), var_Jpump_SR__H)) * var_Jpump_SR__Q_SRCaP * NV_Ith_S(mParameters, 2) * var_model_parameters__Vol_cytosol / ((1.0 + pow((var_chaste_interface__Ca_buffer__Cai / var_Jpump_SR__Kmf), var_Jpump_SR__H) + pow((var_chaste_interface__Ca_buffer__Ca_SR / var_Jpump_SR__Kmr), var_Jpump_SR__H)) * var_model_parameters__Vol_SR); // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_Ca_buffer__Ca_SR = -var_Ca_buffer__dCalsequestrin - var_Jrel_SR__j_rel_SR - var_Jleak_SR__j_leak_SR * var_model_parameters__Vol_cytosol / var_model_parameters__Vol_SR + var_Jpump_SR__j_pump_SR; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Ca_buffer__Cai = -var_cytosolic_Ca_buffer__dCa_cytosol_tot_bound + var_ion_diffusion__J_Ca_SL_cytosol / var_model_parameters__Vol_cytosol - var_Jpump_SR__j_pump_SR * var_model_parameters__Vol_SR / var_model_parameters__Vol_cytosol; // millimolar / millisecond
        const double var_model_parameters__Vol_jct = 0.00051000000000000004 * var_model_parameters__Vol_Cell; // liter
        const double var_Ca_buffer__dCa_SLB_jct = -var_chaste_interface__Ca_buffer__Ca_SLB_jct * var_Ca_buffer__koff_SLB + (-var_chaste_interface__Ca_buffer__Ca_SLB_jct + 0.10000000000000001 * var_Ca_buffer__Bmax_SLB_jct * var_model_parameters__Vol_cytosol / var_model_parameters__Vol_jct) * var_chaste_interface__Ca_buffer__Ca_jct * var_Ca_buffer__kon_SL; // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_SLHigh_jct = -var_chaste_interface__Ca_buffer__Ca_SLHigh_jct * var_Ca_buffer__koff_SLHigh + (-var_chaste_interface__Ca_buffer__Ca_SLHigh_jct + 0.10000000000000001 * var_Ca_buffer__Bmax_SLHigh_jct * var_model_parameters__Vol_cytosol / var_model_parameters__Vol_jct) * var_chaste_interface__Ca_buffer__Ca_jct * var_Ca_buffer__kon_SL; // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_jct_tot_bound = var_Ca_buffer__dCa_SLB_jct + var_Ca_buffer__dCa_SLHigh_jct; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_Ca_buffer__Ca_SLB_jct = var_Ca_buffer__dCa_SLB_jct; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Ca_buffer__Ca_SLHigh_jct = var_Ca_buffer__dCa_SLHigh_jct; // millimolar / millisecond
        const double var_indo_fluo_Ca_buffer_not_connected__Fluo3Bound = var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_SL * var_model_parameters__Vol_SL / var_model_parameters__Vol_cytosol + var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_jct * var_model_parameters__Vol_jct / var_model_parameters__Vol_cytosol + var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_Cytosol; // millimolar
        const double var_indo_fluo_Ca_buffer_not_connected__Indo1Bound = var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_SL * var_model_parameters__Vol_SL / var_model_parameters__Vol_cytosol + var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_jct * var_model_parameters__Vol_jct / var_model_parameters__Vol_cytosol + var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_Cytosol; // millimolar
        const double var_indo_fluo_Ca_buffer_not_connected__dCa_Fluo3_Cytosol = -var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_Cytosol * var_indo_fluo_Ca_buffer_not_connected__koff_Fluo3 + (-var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_Cytosol + var_indo_fluo_Ca_buffer_not_connected__Bmax_Fluo3_Cytosol) * (-var_indo_fluo_Ca_buffer_not_connected__Fluo3Bound + var_indo_fluo_Ca_buffer_not_connected__Fluo3) * var_chaste_interface__Ca_buffer__Cai * var_indo_fluo_Ca_buffer_not_connected__kon_Fluo3; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_Cytosol = var_indo_fluo_Ca_buffer_not_connected__dCa_Fluo3_Cytosol; // millimolar / millisecond
        const double var_indo_fluo_Ca_buffer_not_connected__dCa_Fluo3_SL = -var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_SL * var_indo_fluo_Ca_buffer_not_connected__koff_Fluo3 + (-var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_SL + var_indo_fluo_Ca_buffer_not_connected__Bmax_Fluo3_SL * var_model_parameters__Vol_cytosol / var_model_parameters__Vol_SL) * (-var_indo_fluo_Ca_buffer_not_connected__Fluo3Bound + var_indo_fluo_Ca_buffer_not_connected__Fluo3) * var_chaste_interface__Ca_buffer__Ca_SL * var_indo_fluo_Ca_buffer_not_connected__kon_Fluo3; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_SL = var_indo_fluo_Ca_buffer_not_connected__dCa_Fluo3_SL; // millimolar / millisecond
        const double var_indo_fluo_Ca_buffer_not_connected__dCa_Fluo3_jct = -var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_jct * var_indo_fluo_Ca_buffer_not_connected__koff_Fluo3 + (-var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_jct + var_indo_fluo_Ca_buffer_not_connected__Bmax_Fluo3_jct * var_model_parameters__Vol_cytosol / var_model_parameters__Vol_jct) * (-var_indo_fluo_Ca_buffer_not_connected__Fluo3Bound + var_indo_fluo_Ca_buffer_not_connected__Fluo3) * var_chaste_interface__Ca_buffer__Ca_jct * var_indo_fluo_Ca_buffer_not_connected__kon_Fluo3; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_jct = var_indo_fluo_Ca_buffer_not_connected__dCa_Fluo3_jct; // millimolar / millisecond
        const double var_indo_fluo_Ca_buffer_not_connected__dCa_Indo1_Cytosol = -var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_Cytosol * var_indo_fluo_Ca_buffer_not_connected__koff_Indo1 + (-var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_Cytosol + var_indo_fluo_Ca_buffer_not_connected__Bmax_Indo1_Cytosol) * (-var_indo_fluo_Ca_buffer_not_connected__Indo1Bound + var_indo_fluo_Ca_buffer_not_connected__Indo1) * var_chaste_interface__Ca_buffer__Cai * var_indo_fluo_Ca_buffer_not_connected__kon_Indo1; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_indo_fluo_Ca_buffer_not_connected__Ca_Indo1_Cytosol = var_indo_fluo_Ca_buffer_not_connected__dCa_Indo1_Cytosol; // millimolar / millisecond
        const double var_indo_fluo_Ca_buffer_not_connected__dCa_Indo1_SL = -var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_SL * var_indo_fluo_Ca_buffer_not_connected__koff_Indo1 + (-var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_SL + var_indo_fluo_Ca_buffer_not_connected__Bmax_Indo1_SL * var_model_parameters__Vol_cytosol / var_model_parameters__Vol_SL) * (-var_indo_fluo_Ca_buffer_not_connected__Indo1Bound + var_indo_fluo_Ca_buffer_not_connected__Indo1) * var_chaste_interface__Ca_buffer__Ca_SL * var_indo_fluo_Ca_buffer_not_connected__kon_Indo1; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_indo_fluo_Ca_buffer_not_connected__Ca_Indo1_SL = var_indo_fluo_Ca_buffer_not_connected__dCa_Indo1_SL; // millimolar / millisecond
        const double var_indo_fluo_Ca_buffer_not_connected__dCa_Indo1_jct = -var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_jct * var_indo_fluo_Ca_buffer_not_connected__koff_Indo1 + (-var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_jct + var_indo_fluo_Ca_buffer_not_connected__Bmax_Indo1_jct * var_model_parameters__Vol_cytosol / var_model_parameters__Vol_jct) * (-var_indo_fluo_Ca_buffer_not_connected__Indo1Bound + var_indo_fluo_Ca_buffer_not_connected__Indo1) * var_chaste_interface__Ca_buffer__Ca_jct * var_indo_fluo_Ca_buffer_not_connected__kon_Indo1; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_indo_fluo_Ca_buffer_not_connected__Ca_Indo1_jct = var_indo_fluo_Ca_buffer_not_connected__dCa_Indo1_jct; // millimolar / millisecond
        const double var_reversal_potentials__E_Ca_SL = 0.5 * var_model_parameters__R * var_model_parameters__T * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__Ca_buffer__Ca_SL) / var_model_parameters__F; // millivolt
        const double var_ICab__i_Cab_SL = (-var_reversal_potentials__E_Ca_SL + var_chaste_interface__cell__V) * var_ICab__Fx_CaBk_SL * var_ICab__G_CaBk; // microA_per_microF
        const double var_Ca_buffer__i_Ca_SL_tot = -2.0 * var_INaCa__i_NaCa_SL + var_ICaL__i_CaL_Ca_SL + var_ICab__i_Cab_SL + var_ICap__i_Cap_SL; // microA_per_microF
        const double d_dt_chaste_interface_var_Ca_buffer__Ca_SL = -var_Ca_buffer__dCa_SL_tot_bound + (-var_ion_diffusion__J_Ca_SL_cytosol + var_ion_diffusion__J_Ca_jct_SL) / var_model_parameters__Vol_SL - 0.5 * var_Ca_buffer__i_Ca_SL_tot * var_model_parameters__Cm / (var_model_parameters__F * var_model_parameters__Vol_SL); // millimolar / millisecond
        const double var_reversal_potentials__E_Ca_jct = 0.5 * var_model_parameters__R * var_model_parameters__T * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__Ca_buffer__Ca_jct) / var_model_parameters__F; // millivolt
        const double var_ICab__i_Cab_jct = (-var_reversal_potentials__E_Ca_jct + var_chaste_interface__cell__V) * var_ICab__Fx_CaBk_jct * var_ICab__G_CaBk; // microA_per_microF
        const double var_Ca_buffer__i_Ca_jct_tot = -2.0 * var_INaCa__i_NaCa_jct + var_ICaL__i_CaL_Ca_jct + var_ICab__i_Cab_jct + var_ICap__i_Cap_jct; // microA_per_microF
        const double d_dt_chaste_interface_var_Ca_buffer__Ca_jct = -var_Ca_buffer__dCa_jct_tot_bound - var_ion_diffusion__J_Ca_jct_SL / var_model_parameters__Vol_jct + var_Jleak_SR__j_leak_SR * var_model_parameters__Vol_cytosol / var_model_parameters__Vol_jct + var_Jrel_SR__j_rel_SR * var_model_parameters__Vol_SR / var_model_parameters__Vol_jct - 0.5 * var_Ca_buffer__i_Ca_jct_tot * var_model_parameters__Cm / (var_model_parameters__F * var_model_parameters__Vol_jct); // millimolar / millisecond
        const double var_reversal_potentials__E_Na_SL = var_model_parameters__R * var_model_parameters__T * log(NV_Ith_S(mParameters, 7) / var_chaste_interface__Na_buffer__Na_SL) / var_model_parameters__F; // millivolt
        const double var_INa__i_Na_SL = (-var_reversal_potentials__E_Na_SL + var_chaste_interface__cell__V) * var_INa__Fx_Na_SL * NV_Ith_S(mParameters, 9) * var_INa__openProb; // microA_per_microF
        const double var_INab__i_Nab_SL = (-var_reversal_potentials__E_Na_SL + var_chaste_interface__cell__V) * var_INab__Fx_NaBk_SL * var_INab__G_NaBk; // microA_per_microF
        const double d_dt_chaste_interface_var_Na_buffer__Na_SL = (-var_Na_buffer__dNa_SL_buf + (-var_ion_diffusion__J_Na_SL_cytosol + var_ion_diffusion__J_Na_jct_SL) / var_model_parameters__Vol_SL - (3.0 * var_INaCa__i_NaCa_SL + 3.0 * var_INaK__i_NaK_SL + var_ICaL__i_CaL_Na_SL + var_INa__i_Na_SL + var_INab__i_Nab_SL) * var_model_parameters__Cm / (var_model_parameters__F * var_model_parameters__Vol_SL)) * NV_Ith_S(mParameters, 3); // millimolar / millisecond
        const double var_reversal_potentials__E_Na_jct = var_model_parameters__R * var_model_parameters__T * log(NV_Ith_S(mParameters, 7) / var_chaste_interface__Na_buffer__Na_jct) / var_model_parameters__F; // millivolt
        const double var_INa__i_Na_jct = (-var_reversal_potentials__E_Na_jct + var_chaste_interface__cell__V) * var_INa__Fx_Na_jct * NV_Ith_S(mParameters, 9) * var_INa__openProb; // microA_per_microF
        const double var_INab__i_Nab_jct = (-var_reversal_potentials__E_Na_jct + var_chaste_interface__cell__V) * var_INab__Fx_NaBk_jct * var_INab__G_NaBk; // microA_per_microF
        const double d_dt_chaste_interface_var_Na_buffer__Na_jct = (-var_Na_buffer__dNa_jct_buf - var_ion_diffusion__J_Na_jct_SL / var_model_parameters__Vol_jct - (3.0 * var_INaCa__i_NaCa_jct + 3.0 * var_INaK__i_NaK_jct + var_ICaL__i_CaL_Na_jct + var_INa__i_Na_jct + var_INab__i_Nab_jct) * var_model_parameters__Cm / (var_model_parameters__F * var_model_parameters__Vol_jct)) * NV_Ith_S(mParameters, 3); // millimolar / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_cell__V = 0.0;
        }
        else
        {
            const double var_ICl_Ca__Fx_Cl_SL = 0.89000000000000001; // dimensionless
            const double var_ICl_Ca__Fx_Cl_jct = 0.11; // dimensionless
            const double var_ICl_Ca__G_Cl = 0.109625; // milliS_per_microF
            const double var_ICl_Ca__Kd_ClCa = 0.10000000000000001; // millimolar
            const double var_IClb__G_ClBk = 0.0089999999999999993; // milliS_per_microF
            const double var_IKs__Fx_Ks_SL = 0.89000000000000001; // dimensionless
            const double var_IKs__Fx_Ks_jct = 0.11; // dimensionless
            const double var_IKs__pCa_SL = 3.0 - log10(var_chaste_interface__Ca_buffer__Ca_SL); // dimensionless
            const double var_IKs__G_Ks_SL = (0.057000000000000002 + 0.19 / (1.0 + exp(-12.0 + 1.6666666666666667 * var_IKs__pCa_SL))) * NV_Ith_S(mParameters, 15); // milliS_per_microF
            const double var_IKs__pCa_jct = 3.0 - log10(var_chaste_interface__Ca_buffer__Ca_jct); // dimensionless
            const double var_IKs__G_Ks_jct = (0.057000000000000002 + 0.19 / (1.0 + exp(-12.0 + 1.6666666666666667 * var_IKs__pCa_jct))) * NV_Ith_S(mParameters, 15); // milliS_per_microF
            const double var_IKs__pKNa = 0.018329999999999999; // dimensionless
            const double var_IKr_Rr_gate__Rr = 1 / (1.0 + exp(1.4732142857142858 + 0.044642857142857144 * var_chaste_interface__cell__V)); // dimensionless
            const double var_cell__i_Stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
            const double var_cell__i_Stim = var_cell__i_Stim_converted / HeartConfig::Instance()->GetCapacitance(); // microA_per_microF
            const double var_model_parameters__Cli = 15.0; // millimolar
            const double var_model_parameters__Clo = 150.0; // millimolar
            const double var_ICaL__i_CaL_K = ((fabs(var_chaste_interface__cell__V) < 2.6712831923985376e-6) ? (187175.96150898977 * (2.6712831923985376e-6 + var_chaste_interface__cell__V) * (1.172313405e-9 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * NV_Ith_S(mParameters, 4) * exp(9.9999999999999995e-8)) * (1.0 - 0.10000000000000001 * var_chaste_interface__ICaL_fCa_gate__fCaB_SL - 0.90000000000000002 * var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(9.9999999999999995e-8)) + 1.172313405e-9 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * NV_Ith_S(mParameters, 4) * exp(-9.9999999999999995e-8)) * (1.0 - 0.10000000000000001 * var_chaste_interface__ICaL_fCa_gate__fCaB_SL - 0.90000000000000002 * var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) - 1.172313405e-9 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * NV_Ith_S(mParameters, 4) * exp(-9.9999999999999995e-8)) * (1.0 - 0.10000000000000001 * var_chaste_interface__ICaL_fCa_gate__fCaB_SL - 0.90000000000000002 * var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) : (0.00043885777754150548 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * NV_Ith_S(mParameters, 4) * exp(0.037435192301797954 * var_chaste_interface__cell__V)) * (1.0 - 0.10000000000000001 * var_chaste_interface__ICaL_fCa_gate__fCaB_SL - 0.90000000000000002 * var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f * var_chaste_interface__cell__V / (-1.0 + exp(0.037435192301797954 * var_chaste_interface__cell__V)))); // microA_per_microF
            const double var_IK1__G_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 6)) * NV_Ith_S(mParameters, 13); // milliS_per_microF
            const double var_IKr__G_IKr = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 6)) * NV_Ith_S(mParameters, 14); // milliS_per_microF
            const double var_ICaL__i_CaL = var_ICaL__i_CaL_Ca_SL + var_ICaL__i_CaL_Ca_jct + var_ICaL__i_CaL_K + var_ICaL__i_CaL_Na_SL + var_ICaL__i_CaL_Na_jct; // microA_per_microF
            const double var_ICap__i_Cap = var_ICap__i_Cap_SL + var_ICap__i_Cap_jct; // microA_per_microF
            const double var_IKs__E_Ks = var_model_parameters__R * var_model_parameters__T * log((var_IKs__pKNa * NV_Ith_S(mParameters, 7) + NV_Ith_S(mParameters, 6)) / (var_IKs__pKNa * var_chaste_interface__Na_buffer__Nai + NV_Ith_S(mParameters, 4))) / var_model_parameters__F; // millivolt
            const double var_IKs__i_Ks_SL = pow(var_chaste_interface__IKs_Xs_gate__Xs, 2) * (-var_IKs__E_Ks + var_chaste_interface__cell__V) * var_IKs__Fx_Ks_SL * var_IKs__G_Ks_SL; // microA_per_microF
            const double var_IKs__i_Ks_jct = pow(var_chaste_interface__IKs_Xs_gate__Xs, 2) * (-var_IKs__E_Ks + var_chaste_interface__cell__V) * var_IKs__Fx_Ks_jct * var_IKs__G_Ks_jct; // microA_per_microF
            const double var_IKs__i_Ks = var_IKs__i_Ks_SL + var_IKs__i_Ks_jct; // microA_per_microF
            const double var_INaCa__i_NaCa = var_INaCa__i_NaCa_SL + var_INaCa__i_NaCa_jct; // microA_per_microF
            const double var_INaK__i_NaK = var_INaK__i_NaK_SL + var_INaK__i_NaK_jct; // microA_per_microF
            const double var_ICab__i_Cab = var_ICab__i_Cab_SL + var_ICab__i_Cab_jct; // microA_per_microF
            const double var_reversal_potentials__E_Cl = -var_model_parameters__R * var_model_parameters__T * log(var_model_parameters__Clo / var_model_parameters__Cli) / var_model_parameters__F; // millivolt
            const double var_ICl_Ca__i_Cl_Ca = (-var_reversal_potentials__E_Cl + var_chaste_interface__cell__V) * (var_ICl_Ca__Fx_Cl_SL / (1.0 + var_ICl_Ca__Kd_ClCa / var_chaste_interface__Ca_buffer__Ca_SL) + var_ICl_Ca__Fx_Cl_jct / (1.0 + var_ICl_Ca__Kd_ClCa / var_chaste_interface__Ca_buffer__Ca_jct)) * var_ICl_Ca__G_Cl; // microA_per_microF
            const double var_IClb__i_Clb = (-var_reversal_potentials__E_Cl + var_chaste_interface__cell__V) * var_IClb__G_ClBk; // microA_per_microF
            const double var_reversal_potentials__E_K = var_model_parameters__R * var_model_parameters__T * log(NV_Ith_S(mParameters, 6) / NV_Ith_S(mParameters, 4)) / var_model_parameters__F; // millivolt
            const double var_IK1_K1_gate__alpha_K1 = 1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__cell__V - 0.23849999999999999 * var_reversal_potentials__E_K)); // per_millisecond
            const double var_IK1_K1_gate__beta_K1 = (exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__cell__V - 0.061749999999999999 * var_reversal_potentials__E_K) + 0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__cell__V - 0.080320000000000003 * var_reversal_potentials__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_reversal_potentials__E_K - 0.51429999999999998 * var_chaste_interface__cell__V)); // per_millisecond
            const double var_IK1_K1_gate__K1_infinity = var_IK1_K1_gate__alpha_K1 / (var_IK1_K1_gate__alpha_K1 + var_IK1_K1_gate__beta_K1); // dimensionless
            const double var_IK1__i_K1 = (-var_reversal_potentials__E_K + var_chaste_interface__cell__V) * var_IK1__G_K1 * var_IK1_K1_gate__K1_infinity; // microA_per_microF
            const double var_IKr__i_Kr = (-var_reversal_potentials__E_K + var_chaste_interface__cell__V) * var_IKr__G_IKr * var_IKr_Rr_gate__Rr * var_chaste_interface__IKr_Xr_gate__Xr; // microA_per_microF
            const double var_Itof__i_tof = (-var_reversal_potentials__E_K + var_chaste_interface__cell__V) * NV_Ith_S(mParameters, 12) * var_chaste_interface__Itof_X_gate__X_tof * var_chaste_interface__Itof_Y_gate__Y_tof; // microA_per_microF
            const double var_Itos__i_tos = (-var_reversal_potentials__E_K + var_chaste_interface__cell__V) * (0.5 * var_chaste_interface__Itos_R_gate__R_tos + var_chaste_interface__Itos_Y_gate__Y_tos) * NV_Ith_S(mParameters, 16) * var_chaste_interface__Itos_X_gate__X_tos; // microA_per_microF
            const double var_INa__i_Na = var_INa__i_Na_SL + var_INa__i_Na_jct; // microA_per_microF
            const double var_INab__i_Nab = var_INab__i_Nab_SL + var_INab__i_Nab_jct; // microA_per_microF
            d_dt_chaste_interface_var_cell__V = -var_ICaL__i_CaL - var_ICab__i_Cab - var_ICap__i_Cap - var_ICl_Ca__i_Cl_Ca - var_IClb__i_Clb - var_IK1__i_K1 - var_IKr__i_Kr - var_IKs__i_Ks - var_INa__i_Na - var_INaCa__i_NaCa - var_INaK__i_NaK - var_INab__i_Nab - var_Itof__i_tof - var_Itos__i_tos - var_cell__i_Stim; // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_cell__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_Ca_buffer__Cai;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_INa_h_gate__h;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_INa_j_gate__j;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_INa_m_gate__m;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_IKr_Xr_gate__Xr;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_IKs_Xs_gate__Xs;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_Itos_X_gate__X_tos;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_Itos_Y_gate__Y_tos;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_Itos_R_gate__R_tos;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_Itof_X_gate__X_tof;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_Itof_Y_gate__Y_tof;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_ICaL_d_gate__d;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_ICaL_f_gate__f;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_ICaL_fCa_gate__fCaB_SL;
        NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_ICaL_fCa_gate__fCaB_jct;
        NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_Jrel_SR__R;
        NV_Ith_S(rDY,17) = d_dt_chaste_interface_var_Jrel_SR__I;
        NV_Ith_S(rDY,18) = d_dt_chaste_interface_var_Jrel_SR__O;
        NV_Ith_S(rDY,19) = d_dt_chaste_interface_var_Na_buffer__Na_SL;
        NV_Ith_S(rDY,20) = d_dt_chaste_interface_var_Na_buffer__Na_jct;
        NV_Ith_S(rDY,21) = d_dt_chaste_interface_var_Na_buffer__Na_SL_buf;
        NV_Ith_S(rDY,22) = d_dt_chaste_interface_var_Na_buffer__Na_jct_buf;
        NV_Ith_S(rDY,23) = d_dt_chaste_interface_var_Na_buffer__Nai;
        NV_Ith_S(rDY,24) = d_dt_chaste_interface_var_Ca_buffer__Ca_SR;
        NV_Ith_S(rDY,25) = d_dt_chaste_interface_var_Ca_buffer__Ca_SL;
        NV_Ith_S(rDY,26) = d_dt_chaste_interface_var_Ca_buffer__Ca_jct;
        NV_Ith_S(rDY,27) = d_dt_chaste_interface_var_Ca_buffer__Ca_SLB_SL;
        NV_Ith_S(rDY,28) = d_dt_chaste_interface_var_Ca_buffer__Ca_SLB_jct;
        NV_Ith_S(rDY,29) = d_dt_chaste_interface_var_Ca_buffer__Ca_SLHigh_SL;
        NV_Ith_S(rDY,30) = d_dt_chaste_interface_var_Ca_buffer__Ca_SLHigh_jct;
        NV_Ith_S(rDY,31) = d_dt_chaste_interface_var_Ca_buffer__Ca_Calsequestrin;
        NV_Ith_S(rDY,32) = d_dt_chaste_interface_var_cytosolic_Ca_buffer__Ca_TroponinC;
        NV_Ith_S(rDY,33) = d_dt_chaste_interface_var_cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg;
        NV_Ith_S(rDY,34) = d_dt_chaste_interface_var_cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg;
        NV_Ith_S(rDY,35) = d_dt_chaste_interface_var_cytosolic_Ca_buffer__Ca_Calmodulin;
        NV_Ith_S(rDY,36) = d_dt_chaste_interface_var_cytosolic_Ca_buffer__Ca_Myosin;
        NV_Ith_S(rDY,37) = d_dt_chaste_interface_var_cytosolic_Ca_buffer__Mg_Myosin;
        NV_Ith_S(rDY,38) = d_dt_chaste_interface_var_cytosolic_Ca_buffer__Ca_SRB;
        NV_Ith_S(rDY,39) = d_dt_chaste_interface_var_indo_fluo_Ca_buffer_not_connected__Ca_Indo1_Cytosol;
        NV_Ith_S(rDY,40) = d_dt_chaste_interface_var_indo_fluo_Ca_buffer_not_connected__Ca_Indo1_SL;
        NV_Ith_S(rDY,41) = d_dt_chaste_interface_var_indo_fluo_Ca_buffer_not_connected__Ca_Indo1_jct;
        NV_Ith_S(rDY,42) = d_dt_chaste_interface_var_indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_Cytosol;
        NV_Ith_S(rDY,43) = d_dt_chaste_interface_var_indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_SL;
        NV_Ith_S(rDY,44) = d_dt_chaste_interface_var_indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_jct;
    }

    void Cellshannon_wang_puglisi_weber_bers_2004FromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -85.721630473733
        double var_chaste_interface__Ca_buffer__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 8.6504944644883e-05
        double var_chaste_interface__INa_h_gate__h = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.98714602875678
        double var_chaste_interface__INa_j_gate__j = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.991826348770428
        double var_chaste_interface__INa_m_gate__m = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.0013702407736465
        double var_chaste_interface__IKr_Xr_gate__Xr = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.00846906175020028
        double var_chaste_interface__IKs_Xs_gate__Xs = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.00613557812033723
        double var_chaste_interface__Itos_X_gate__X_tos = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.00401072468238921
        double var_chaste_interface__Itos_Y_gate__Y_tos = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.31555225368514
        double var_chaste_interface__Itos_R_gate__R_tos = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.402577243036347
        double var_chaste_interface__Itof_X_gate__X_tof = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.00401068798369438
        double var_chaste_interface__Itof_Y_gate__Y_tof = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.994632857675454
        double var_chaste_interface__ICaL_d_gate__d = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 6.99526086177479e-06
        double var_chaste_interface__ICaL_f_gate__f = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 1.00067601563206
        double var_chaste_interface__ICaL_fCa_gate__fCaB_SL = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.0150193299768419
        double var_chaste_interface__ICaL_fCa_gate__fCaB_jct = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.0244048782575591
        double var_chaste_interface__Jrel_SR__R = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.890917121306535
        double var_chaste_interface__Jrel_SR__I = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 8.71752603681652e-08
        double var_chaste_interface__Jrel_SR__O = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 7.1199533741995e-07
        double var_chaste_interface__Na_buffer__Na_SL = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 8.87161932058707
        double var_chaste_interface__Na_buffer__Na_jct = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 8.87031835089116
        double var_chaste_interface__Na_buffer__Na_SL_buf = NV_Ith_S(rY, 21);
        // Units: millimolar; Initial value: 0.77606800956492
        double var_chaste_interface__Na_buffer__Na_jct_buf = NV_Ith_S(rY, 22);
        // Units: millimolar; Initial value: 3.55668431730337
        double var_chaste_interface__Na_buffer__Nai = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 8.87200572571131
        double var_chaste_interface__Ca_buffer__Ca_SR = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 0.547125831028543
        double var_chaste_interface__Ca_buffer__Ca_SL = NV_Ith_S(rY, 25);
        // Units: millimolar; Initial value: 0.000104971310105451
        double var_chaste_interface__Ca_buffer__Ca_jct = NV_Ith_S(rY, 26);
        // Units: millimolar; Initial value: 0.000174045152623969
        double var_chaste_interface__Ca_buffer__Ca_SLB_SL = NV_Ith_S(rY, 27);
        // Units: millimolar; Initial value: 0.00973710481246467
        double var_chaste_interface__Ca_buffer__Ca_SLB_jct = NV_Ith_S(rY, 28);
        // Units: millimolar; Initial value: 0.00774564218017916
        double var_chaste_interface__Ca_buffer__Ca_SLHigh_SL = NV_Ith_S(rY, 29);
        // Units: millimolar; Initial value: 0.113168405274355
        double var_chaste_interface__Ca_buffer__Ca_SLHigh_jct = NV_Ith_S(rY, 30);
        // Units: millimolar; Initial value: 0.0772568134367606
        double var_chaste_interface__Ca_buffer__Ca_Calsequestrin = NV_Ith_S(rY, 31);
        // Units: millimolar; Initial value: 1.18828527890062
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC = NV_Ith_S(rY, 32);
        // Units: millimolar; Initial value: 0.00886665040283094
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg = NV_Ith_S(rY, 33);
        // Units: millimolar; Initial value: 0.117873278193472
        double var_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg = NV_Ith_S(rY, 34);
        // Units: millimolar; Initial value: 0.0103906683506505
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin = NV_Ith_S(rY, 35);
        // Units: millimolar; Initial value: 0.000293073957804278
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin = NV_Ith_S(rY, 36);
        // Units: millimolar; Initial value: 0.00195899238146509
        double var_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin = NV_Ith_S(rY, 37);
        // Units: millimolar; Initial value: 0.137523520981802
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_SRB = NV_Ith_S(rY, 38);
        // Units: millimolar; Initial value: 0.00215728901718264
        double var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_Cytosol = NV_Ith_S(rY, 39);
        // Units: millimolar; Initial value: 0.0
        double var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_SL = NV_Ith_S(rY, 40);
        // Units: millimolar; Initial value: 0.0
        double var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_jct = NV_Ith_S(rY, 41);
        // Units: millimolar; Initial value: 0.0
        double var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_Cytosol = NV_Ith_S(rY, 42);
        // Units: millimolar; Initial value: 0.0
        double var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_SL = NV_Ith_S(rY, 43);
        // Units: millimolar; Initial value: 0.0
        double var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_jct = NV_Ith_S(rY, 44);
        // Units: millimolar; Initial value: 0.0
        const double var_x0 = -0.75 * NV_Ith_S(mParameters, 6);
        const double var_x1 = exp(9.9999999999999995e-8);
        const double var_x2 = 0.75 * NV_Ith_S(mParameters, 4);
        const double var_x3 = var_x0 + var_x1 * var_x2;
        const double var_x4 = 1 / (-1.0 + var_x1);
        const double var_x5 = var_x4 * var_chaste_interface__ICaL_f_gate__f;
        const double var_x6 = var_x3 * var_x5;
        const double var_x7 = 1.0 - 0.10000000000000001 * var_chaste_interface__ICaL_fCa_gate__fCaB_SL - 0.90000000000000002 * var_chaste_interface__ICaL_fCa_gate__fCaB_jct;
        const double var_x8 = var_x7 * var_chaste_interface__ICaL_d_gate__d;
        const double var_x9 = 0.00021942888877075274 * var_x8;
        const double var_x10 = exp(-9.9999999999999995e-8);
        const double var_x11 = var_x0 + var_x10 * var_x2;
        const double var_x12 = 1 / (-1.0 + var_x10);
        const double var_x13 = var_x12 * var_chaste_interface__ICaL_f_gate__f;
        const double var_x14 = var_x11 * var_x13;
        const double var_x15 = fabs(var_chaste_interface__cell__V);
        const double var_x16 = var_x15 < 2.6712831923985376e-6;
        const double var_x17 = 0.037435192301797954 * var_chaste_interface__cell__V;
        const double var_x18 = exp(var_x17);
        const double var_x19 = var_x0 + var_x18 * var_x2;
        const double var_x20 = -1.0 + var_x18;
        const double var_x21 = 1 / var_x20;
        const double var_x22 = var_x21 * var_chaste_interface__ICaL_f_gate__f;
        const double var_x23 = var_x19 * var_x22;
        const double var_x24 = 0.00043885777754150548 * var_x23;
        const double var_x25 = var_x22 * var_chaste_interface__cell__V;
        const double var_x26 = var_x19 * var_x8;
        const double var_x27 = var_x18 * var_chaste_interface__cell__V;
        const double var_x28 = var_x27 / pow(var_x20, 2);
        const double var_x29 = var_x28 * var_chaste_interface__ICaL_f_gate__f;
        const double var_x30 = -0.75 * NV_Ith_S(mParameters, 7);
        const double var_x31 = 0.75 * var_chaste_interface__Na_buffer__Na_SL;
        const double var_x32 = var_x30 + var_x1 * var_x31;
        const double var_x33 = var_x32 * var_x5;
        const double var_x34 = 1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL;
        const double var_x35 = var_x34 * var_chaste_interface__ICaL_d_gate__d;
        const double var_x36 = 1.2190493820597373e-6 * var_x35;
        const double var_x37 = var_x30 + var_x10 * var_x31;
        const double var_x38 = var_x13 * var_x37;
        const double var_x39 = var_x22 * var_x35;
        const double var_x40 = var_x30 + var_x18 * var_x31;
        const double var_x41 = 2.4380987641194746e-6 * var_x40;
        const double var_x42 = var_x27 * var_x39;
        const double var_x43 = var_x35 * var_chaste_interface__ICaL_f_gate__f;
        const double var_x44 = ((var_x16) ? (var_x33 * var_x36 + var_x36 * var_x38) : (var_x39 * var_x41 + 6.8453022064191344e-8 * var_x42 * var_chaste_interface__Na_buffer__Na_SL - 9.1270696085588464e-8 * var_x28 * var_x40 * var_x43));
        const double var_x45 = 0.75 * var_chaste_interface__Na_buffer__Na_jct;
        const double var_x46 = var_x30 + var_x1 * var_x45;
        const double var_x47 = var_x46 * var_x5;
        const double var_x48 = 1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct;
        const double var_x49 = var_x48 * var_chaste_interface__ICaL_d_gate__d;
        const double var_x50 = 1.0971444438537636e-5 * var_x49;
        const double var_x51 = var_x30 + var_x10 * var_x45;
        const double var_x52 = var_x13 * var_x51;
        const double var_x53 = var_x22 * var_x49;
        const double var_x54 = var_x30 + var_x18 * var_x45;
        const double var_x55 = 2.1942888877075271e-5 * var_x54;
        const double var_x56 = var_x27 * var_x53;
        const double var_x57 = ((var_x16) ? (var_x47 * var_x50 + var_x50 * var_x52) : (var_x53 * var_x55 + 6.160771985777221e-7 * var_x56 * var_chaste_interface__Na_buffer__Na_jct - 8.2143626477029613e-7 * var_x29 * var_x49 * var_x54));
        const double var_x58 = -0.34100000000000003 * NV_Ith_S(mParameters, 5);
        const double var_x59 = 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_SL;
        const double var_x60 = var_x58 + var_x1 * var_x59;
        const double var_x61 = var_x5 * NV_Ith_S(mParameters, 8);
        const double var_x62 = var_x60 * var_x61;
        const double var_x63 = 325.07983521593002 * var_x35;
        const double var_x64 = var_x58 + var_x10 * var_x59;
        const double var_x65 = var_x13 * NV_Ith_S(mParameters, 8);
        const double var_x66 = var_x64 * var_x65;
        const double var_x67 = var_x15 < 1.3356415961992688e-6;
        const double var_x68 = exp(0.074870384603595908 * var_chaste_interface__cell__V);
        const double var_x69 = -1.0 + var_x68;
        const double var_x70 = NV_Ith_S(mParameters, 8) / var_x69;
        const double var_x71 = var_x43 * var_x70;
        const double var_x72 = var_x58 + var_x59 * var_x68;
        const double var_x73 = 650.15967043186004 * var_x72;
        const double var_x74 = var_x68 * var_chaste_interface__cell__V;
        const double var_x75 = var_x71 * var_x74;
        const double var_x76 = var_x74 * NV_Ith_S(mParameters, 8) / pow(var_x69, 2);
        const double var_x77 = ((var_x67) ? (var_x62 * var_x63 + var_x63 * var_x66) : (var_x71 * var_x73 + 16.599097261432359 * var_x75 * var_chaste_interface__Ca_buffer__Ca_SL - 48.677704578980517 * var_x43 * var_x72 * var_x76));
        const double var_x78 = 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_jct;
        const double var_x79 = var_x58 + var_x1 * var_x78;
        const double var_x80 = var_x61 * var_x79;
        const double var_x81 = 2925.7185169433697 * var_x49;
        const double var_x82 = var_x58 + var_x10 * var_x78;
        const double var_x83 = var_x65 * var_x82;
        const double var_x84 = var_x70 * var_chaste_interface__ICaL_f_gate__f;
        const double var_x85 = var_x49 * var_x84;
        const double var_x86 = var_x58 + var_x68 * var_x78;
        const double var_x87 = 5851.4370338867393 * var_x86;
        const double var_x88 = var_x74 * var_x85;
        const double var_x89 = ((var_x67) ? (var_x80 * var_x81 + var_x81 * var_x83) : (var_x85 * var_x87 + 149.39187535289122 * var_x88 * var_chaste_interface__Ca_buffer__Ca_jct - 438.09934121082466 * var_x49 * var_x76 * var_x86 * var_chaste_interface__ICaL_f_gate__f));
        const double var_x90 = 1 / var_chaste_interface__Ca_buffer__Ca_jct;
        const double var_x91 = 1.0 + 0.10000000000000001 * var_x90;
        const double var_x92 = 1 / var_chaste_interface__Ca_buffer__Ca_SL;
        const double var_x93 = 1.0 + 0.10000000000000001 * var_x92;
        const double var_x94 = -var_chaste_interface__Itos_Y_gate__Y_tos;
        const double var_x95 = (var_x94 - 0.5 * var_chaste_interface__Itos_R_gate__R_tos) * NV_Ith_S(mParameters, 16);
        const double var_x96 = NV_Ith_S(mParameters, 12) * var_chaste_interface__Itof_Y_gate__Y_tof;
        const double var_x97 = exp(-7.0000000000000009 - 1.6666666666666667 * log10(var_chaste_interface__Ca_buffer__Ca_jct));
        const double var_x98 = 1.0 + var_x97;
        const double var_x99 = 0.057000000000000002 + 0.19 / var_x98;
        const double var_x100 = pow(var_chaste_interface__IKs_Xs_gate__Xs, 2) * NV_Ith_S(mParameters, 15);
        const double var_x101 = var_x100 * var_x99;
        const double var_x102 = exp(-7.0000000000000009 - 1.6666666666666667 * log10(var_chaste_interface__Ca_buffer__Ca_SL));
        const double var_x103 = 1.0 + var_x102;
        const double var_x104 = 0.057000000000000002 + 0.19 / var_x103;
        const double var_x105 = var_x100 * var_x104;
        const double var_x106 = sqrt(NV_Ith_S(mParameters, 6));
        const double var_x107 = var_x106 * NV_Ith_S(mParameters, 14) * var_chaste_interface__IKr_Xr_gate__Xr;
        const double var_x108 = exp(1.4732142857142858 + 0.044642857142857144 * var_chaste_interface__cell__V);
        const double var_x109 = 1.0 + var_x108;
        const double var_x110 = 0.43033148291193518 / var_x109;
        const double var_x111 = pow(var_chaste_interface__INa_m_gate__m, 3);
        const double var_x112 = var_x111 * NV_Ith_S(mParameters, 9) * var_chaste_interface__INa_j_gate__j;
        const double var_x113 = var_x112 * var_chaste_interface__INa_h_gate__h;
        const double var_x114 = log(NV_Ith_S(mParameters, 6) / NV_Ith_S(mParameters, 4));
        const double var_x115 = exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__cell__V - 6.3710104138705121 * var_x114);
        const double var_x116 = 1.0 + var_x115;
        const double var_x117 = 1 / var_x116;
        const double var_x118 = exp(-2.4444678999999998 + 13.738409458505679 * var_x114 - 0.51429999999999998 * var_chaste_interface__cell__V);
        const double var_x119 = 1.0 + var_x118;
        const double var_x120 = 1 / var_x119;
        const double var_x121 = exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__cell__V - 1.6495173713060971 * var_x114);
        const double var_x122 = exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__cell__V - 2.1455746601345056 * var_x114);
        const double var_x123 = var_x121 + 0.49124000000000001 * var_x122;
        const double var_x124 = var_x120 * var_x123;
        const double var_x125 = var_x106 * NV_Ith_S(mParameters, 13) / (var_x124 + 1.02 * var_x117);
        const double var_x126 = exp(-0.024332874996168669 * var_chaste_interface__cell__V);
        const double var_x127 = pow(NV_Ith_S(mParameters, 7), 3.0);
        const double var_x128 = var_x127 * var_chaste_interface__Ca_buffer__Ca_jct;
        const double var_x129 = var_x126 * var_x128;
        const double var_x130 = exp(0.013102317305629283 * var_chaste_interface__cell__V);
        const double var_x131 = pow(var_chaste_interface__Na_buffer__Na_jct, 3.0);
        const double var_x132 = var_x131 * NV_Ith_S(mParameters, 5);
        const double var_x133 = var_x130 * var_x132;
        const double var_x134 = 1.0 + 0.27000000000000002 * var_x126;
        const double var_x135 = NV_Ith_S(mParameters, 17) / var_x134;
        const double var_x136 = 1.0 + 1.6777215999999998e-11 / pow(var_chaste_interface__Ca_buffer__Ca_jct, 3);
        const double var_x137 = 1 / var_x136;
        const double var_x138 = (1.0 + 278.55153203342621 * var_chaste_interface__Ca_buffer__Ca_jct) * var_chaste_interface__Ca_buffer__Ca_jct;
        const double var_x139 = 1.0 + 0.00053869674493876331 * var_x131;
        const double var_x140 = 0.0035899999999999999 * var_x127;
        const double var_x141 = 1 / (var_x128 + var_x132 + 669921.875 * var_x138 + 1.3 * var_x131 + var_x139 * var_x140);
        const double var_x142 = var_x137 * var_x141;
        const double var_x143 = var_x135 * var_x142;
        const double var_x144 = var_x143 * (0.024332874996168669 * var_x129 + 0.013102317305629283 * var_x133);
        const double var_x145 = var_x127 * var_chaste_interface__Ca_buffer__Ca_SL;
        const double var_x146 = var_x126 * var_x145;
        const double var_x147 = pow(var_chaste_interface__Na_buffer__Na_SL, 3.0);
        const double var_x148 = var_x147 * NV_Ith_S(mParameters, 5);
        const double var_x149 = var_x130 * var_x148;
        const double var_x150 = 1.0 + 1.6777215999999998e-11 / pow(var_chaste_interface__Ca_buffer__Ca_SL, 3);
        const double var_x151 = 1 / var_x150;
        const double var_x152 = (1.0 + 278.55153203342621 * var_chaste_interface__Ca_buffer__Ca_SL) * var_chaste_interface__Ca_buffer__Ca_SL;
        const double var_x153 = 1.0 + 0.00053869674493876331 * var_x147;
        const double var_x154 = 1 / (var_x145 + var_x148 + 669921.875 * var_x152 + 1.3 * var_x147 + var_x140 * var_x153);
        const double var_x155 = var_x151 * var_x154;
        const double var_x156 = var_x135 * var_x155;
        const double var_x157 = var_x156 * (0.024332874996168669 * var_x146 + 0.013102317305629283 * var_x149);
        const double var_x158 = 1 / var_chaste_interface__Na_buffer__Na_jct;
        const double var_x159 = pow(var_x158, 4.0);
        const double var_x160 = exp(-0.0037435192301797956 * var_chaste_interface__cell__V);
        const double var_x161 = exp(0.01485884101040119 * NV_Ith_S(mParameters, 7));
        const double var_x162 = exp(-var_x17);
        const double var_x163 = 1.0 + 0.1245 * var_x160 + 0.036499999999999998 * var_x162 * (-0.14285714285714285 + 0.14285714285714285 * var_x161);
        const double var_x164 = NV_Ith_S(mParameters, 6) / (1.5 + NV_Ith_S(mParameters, 6));
        const double var_x165 = var_x164 * (0.00046606814415738453 * var_x160 + 0.037435192301797954 * var_x162 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x161)) / pow(var_x163, 2);
        const double var_x166 = var_x165 / (1.0 + 14641.0 * var_x159);
        const double var_x167 = 1 / var_chaste_interface__Na_buffer__Na_SL;
        const double var_x168 = pow(var_x167, 4.0);
        const double var_x169 = var_x165 / (1.0 + 14641.0 * var_x168);
        const double var_x170 = 26.712831923985377 * var_x114;
        const double var_x171 = -var_x170 + var_chaste_interface__cell__V;
        const double var_x172 = var_x115 / pow(var_x116, 2);
        const double var_x173 = var_x106 * var_x171;
        const double var_x174 = var_x133 - var_x129;
        const double var_x175 = var_x126 * NV_Ith_S(mParameters, 17) / pow(var_x134, 2);
        const double var_x176 = var_x142 * var_x174 * var_x175;
        const double var_x177 = var_x149 - var_x146;
        const double var_x178 = var_x155 * var_x175 * var_x177;
        const double var_x179 = -26.712831923985377 * log(var_x158 * NV_Ith_S(mParameters, 7)) + var_chaste_interface__cell__V;
        const double var_x180 = 0.11 * var_x179;
        const double var_x181 = -26.712831923985377 * log(var_x167 * NV_Ith_S(mParameters, 7)) + var_chaste_interface__cell__V;
        const double var_x182 = 0.89000000000000001 * var_x181;
        const double var_x183 = NV_Ith_S(mParameters, 9) * var_chaste_interface__INa_h_gate__h;
        const double var_x184 = var_x111 * var_x183;
        const double var_x185 = var_x183 * pow(var_chaste_interface__INa_m_gate__m, 2) * var_chaste_interface__INa_j_gate__j;
        const double var_x186 = var_x179 * var_x185;
        const double var_x187 = var_x181 * var_x185;
        const double var_x188 = 1 / (0.018329999999999999 * var_chaste_interface__Na_buffer__Nai + NV_Ith_S(mParameters, 4));
        const double var_x189 = -26.712831923985377 * log(var_x188 * (0.018329999999999999 * NV_Ith_S(mParameters, 7) + NV_Ith_S(mParameters, 6))) + var_chaste_interface__cell__V;
        const double var_x190 = var_x189 * NV_Ith_S(mParameters, 15) * var_chaste_interface__IKs_Xs_gate__Xs;
        const double var_x191 = var_x170 - var_chaste_interface__cell__V;
        const double var_x192 = NV_Ith_S(mParameters, 16) * var_chaste_interface__Itos_X_gate__X_tos;
        const double var_x193 = 0.5 + 187175.96150898977 * var_chaste_interface__cell__V;
        const double var_x194 = 5.8615670249999994e-11 * var_x48;
        const double var_x195 = var_x194 * var_x46;
        const double var_x196 = var_x194 * var_x51;
        const double var_x197 = var_x13 * var_x196;
        const double var_x198 = var_x25 * var_x55;
        const double var_x199 = ((var_x16) ? (-var_x197 + var_x193 * (var_x197 + var_x195 * var_x5)) : (var_x198 * var_x48));
        const double var_x200 = 1.172313405e-9 * var_x7;
        const double var_x201 = var_x11 * var_x200;
        const double var_x202 = var_x13 * var_x201;
        const double var_x203 = 6.5128522499999997e-12 * var_x34;
        const double var_x204 = var_x203 * var_x32;
        const double var_x205 = var_x203 * var_x37;
        const double var_x206 = var_x13 * var_x205;
        const double var_x207 = var_x25 * var_x41;
        const double var_x208 = ((var_x16) ? (-var_x206 + var_x193 * (var_x206 + var_x204 * var_x5)) : (var_x207 * var_x34));
        const double var_x209 = 0.5 + 374351.92301797954 * var_chaste_interface__cell__V;
        const double var_x210 = 0.00086838029999999997 * var_x34;
        const double var_x211 = var_x210 * var_x64;
        const double var_x212 = var_x211 * var_x65;
        const double var_x213 = var_x84 * var_chaste_interface__cell__V;
        const double var_x214 = ((var_x67) ? (-var_x212 + var_x209 * (var_x212 + var_x210 * var_x62)) : (var_x213 * var_x34 * var_x73));
        const double var_x215 = 0.0078154226999999996 * var_x48;
        const double var_x216 = var_x215 * var_x82;
        const double var_x217 = var_x216 * var_x65;
        const double var_x218 = ((var_x67) ? (-var_x217 + var_x209 * (var_x217 + var_x215 * var_x80)) : (var_x213 * var_x48 * var_x87));
        const double var_x219 = var_x4 * var_chaste_interface__ICaL_d_gate__d;
        const double var_x220 = var_x12 * var_chaste_interface__ICaL_d_gate__d;
        const double var_x221 = var_x196 * var_x220;
        const double var_x222 = var_x21 * var_chaste_interface__cell__V;
        const double var_x223 = ((var_x16) ? (-var_x221 + var_x193 * (var_x221 + var_x195 * var_x219)) : (var_x222 * var_x49 * var_x55));
        const double var_x224 = var_x201 * var_x220;
        const double var_x225 = var_x205 * var_x220;
        const double var_x226 = ((var_x16) ? (-var_x225 + var_x193 * (var_x225 + var_x204 * var_x219)) : (var_x222 * var_x35 * var_x41));
        const double var_x227 = var_x219 * NV_Ith_S(mParameters, 8);
        const double var_x228 = var_x220 * NV_Ith_S(mParameters, 8);
        const double var_x229 = var_x211 * var_x228;
        const double var_x230 = var_x70 * var_chaste_interface__cell__V;
        const double var_x231 = ((var_x67) ? (-var_x229 + var_x209 * (var_x229 + var_x210 * var_x227 * var_x60)) : (var_x230 * var_x35 * var_x73));
        const double var_x232 = var_x216 * var_x228;
        const double var_x233 = ((var_x67) ? (-var_x232 + var_x209 * (var_x232 + var_x215 * var_x227 * var_x79)) : (var_x230 * var_x49 * var_x87));
        const double var_x234 = 1.1723134050000001e-10 * var_chaste_interface__ICaL_d_gate__d;
        const double var_x235 = var_x14 * var_x234;
        const double var_x236 = var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__cell__V;
        const double var_x237 = var_x23 * var_x236;
        const double var_x238 = 6.5128522499999997e-12 * var_chaste_interface__ICaL_d_gate__d;
        const double var_x239 = var_x238 * var_x38;
        const double var_x240 = ((var_x16) ? (var_x239 + var_x193 * (-var_x239 - var_x238 * var_x33)) : (-var_x207 * var_chaste_interface__ICaL_d_gate__d));
        const double var_x241 = 0.00086838029999999997 * var_chaste_interface__ICaL_d_gate__d;
        const double var_x242 = var_x241 * var_x66;
        const double var_x243 = var_x236 * var_x84;
        const double var_x244 = ((var_x67) ? (var_x242 + var_x209 * (-var_x242 - var_x241 * var_x62)) : (-var_x243 * var_x73));
        const double var_x245 = 5.8615670249999994e-11 * var_chaste_interface__ICaL_d_gate__d;
        const double var_x246 = var_x245 * var_x52;
        const double var_x247 = ((var_x16) ? (var_x246 + var_x193 * (-var_x246 - var_x245 * var_x47)) : (-var_x198 * var_chaste_interface__ICaL_d_gate__d));
        const double var_x248 = 1.0550820645e-9 * var_chaste_interface__ICaL_d_gate__d;
        const double var_x249 = var_x14 * var_x248;
        const double var_x250 = 0.0078154226999999996 * var_chaste_interface__ICaL_d_gate__d;
        const double var_x251 = var_x250 * var_x83;
        const double var_x252 = ((var_x67) ? (var_x251 + var_x209 * (-var_x251 - var_x250 * var_x80)) : (-var_x243 * var_x87));
        const double var_x253 = 4.8846391874999992e-12 * var_x35;
        const double var_x254 = var_x1 * var_x5;
        const double var_x255 = var_x10 * var_x13;
        const double var_x256 = var_x253 * var_x255;
        const double var_x257 = ((var_x16) ? (-var_x256 + var_x193 * (var_x256 + var_x253 * var_x254)) : (1.8285740730896059e-6 * var_x42));
        const double var_x258 = 0.0070610028624670546 * var_x167;
        const double var_x259 = 23.774420412346984 * var_x113 * var_x167;
        const double var_x260 = pow(var_chaste_interface__Na_buffer__Na_SL, 2.0);
        const double var_x261 = 3.0 * NV_Ith_S(mParameters, 5);
        const double var_x262 = 5.8017639429904805e-6 * var_x127;
        const double var_x263 = -3.9000000000000004 * var_x260 - var_x260 * var_x261 - var_x260 * var_x262;
        const double var_x264 = 5.3588338192419823e-9 * var_x127;
        const double var_x265 = var_x135 * var_x177;
        const double var_x266 = var_x151 * var_x265 / pow((var_x152 + 1.9405247813411081e-6 * var_x147 + 1.4927113702623908e-6 * var_x145 + 1.4927113702623908e-6 * var_x148 + var_x153 * var_x264), 2);
        const double var_x267 = 1.9830866390704556e-12 * var_x266;
        const double var_x268 = var_x164 / var_x163;
        const double var_x269 = var_x167 * var_x168 * var_x268 / pow((6.8301345536507063e-5 + var_x168), 2);
        const double var_x270 = var_x130 * NV_Ith_S(mParameters, 5);
        const double var_x271 = var_x156 * var_x260 * var_x270;
        const double var_x272 = 4.3961752687499992e-11 * var_x49;
        const double var_x273 = var_x255 * var_x272;
        const double var_x274 = ((var_x16) ? (-var_x273 + var_x193 * (var_x273 + var_x254 * var_x272)) : (1.6457166657806454e-5 * var_x56));
        const double var_x275 = 0.00087270821895660234 * var_x158;
        const double var_x276 = 2.9384115116383915 * var_x113 * var_x158;
        const double var_x277 = pow(var_chaste_interface__Na_buffer__Na_jct, 2.0);
        const double var_x278 = -3.9000000000000004 * var_x277 - var_x261 * var_x277 - var_x262 * var_x277;
        const double var_x279 = var_x135 * var_x174;
        const double var_x280 = var_x137 * var_x279 / pow((var_x138 + 1.9405247813411081e-6 * var_x131 + 1.4927113702623908e-6 * var_x128 + 1.4927113702623908e-6 * var_x132 + var_x139 * var_x264), 2);
        const double var_x281 = 2.4510059584016866e-13 * var_x280;
        const double var_x282 = var_x158 * var_x159 * var_x268 / pow((6.8301345536507063e-5 + var_x159), 2);
        const double var_x283 = var_x143 * var_x270 * var_x277;
        const double var_x284 = 0.00029611768230000001 * var_x35;
        const double var_x285 = var_x1 * var_x61;
        const double var_x286 = var_x10 * var_x65;
        const double var_x287 = var_x284 * var_x286;
        const double var_x288 = ((var_x67) ? (-var_x287 + var_x209 * (var_x287 + var_x284 * var_x285)) : (221.70444761726426 * var_x75));
        const double var_x289 = 0.0029872559248113983 * var_x92;
        const double var_x290 = -6.7428768305632261 - 0.109625 * var_chaste_interface__cell__V;
        const double var_x291 = pow(var_x92, 1.6000000000000001);
        const double var_x292 = 5.0104537825247566e-7 * var_x291 * var_x92 / pow((1.0 + 5.2281977629563632e-6 * var_x291), 2);
        const double var_x293 = var_x126 * var_x127;
        const double var_x294 = var_x156 * var_x293;
        const double var_x295 = var_x154 * var_x265 / (pow(var_x150, 2) * pow(var_chaste_interface__Ca_buffer__Ca_SL, 4));
        const double var_x296 = -669921.875 - var_x127;
        const double var_x297 = var_x296 - 373215529.24791086 * var_chaste_interface__Ca_buffer__Ca_SL;
        const double var_x298 = var_x100 * var_x189 / log(10);
        const double var_x299 = 0.0026650591407000003 * var_x49;
        const double var_x300 = var_x286 * var_x299;
        const double var_x301 = ((var_x67) ? (-var_x300 + var_x209 * (var_x300 + var_x285 * var_x299)) : (1995.3400285553785 * var_x88));
        const double var_x302 = 0.00036921140643736384 * var_x90;
        const double var_x303 = pow(var_chaste_interface__Ca_buffer__Ca_jct, 2);
        const double var_x304 = pow(var_x90, 1.6000000000000001);
        const double var_x305 = 6.1926956862665531e-8 * var_x304 * var_x90 / pow((1.0 + 5.2281977629563632e-6 * var_x304), 2);
        const double var_x306 = var_x143 * var_x293;
        const double var_x307 = var_x296 - 373215529.24791086 * var_chaste_interface__Ca_buffer__Ca_jct;
        const double var_x308 = var_x141 * var_x279 / (pow(var_x136, 2) * pow(var_chaste_interface__Ca_buffer__Ca_jct, 4));
        const double var_x309 = 34.0 * var_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin;
        const double var_x310 = 100.0 * var_chaste_interface__cytosolic_Ca_buffer__Ca_SRB;
        const double var_x311 = 32.700000000000003 * var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC;
        const double var_x312 = 2.3700000000000001 * var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg;
        const double var_x313 = 2.3700000000000001 * var_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg;
        const double var_x314 = 13.800000000000001 * var_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin;
        const double var_x315 = 13.800000000000001 * var_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin;
        const double var_x316 = pow(var_chaste_interface__Ca_buffer__Cai, 0.78699999999999992);
        const double var_x317 = pow(var_chaste_interface__Ca_buffer__Ca_SR, 1.7869999999999999);
        const double var_x318 = 0.38742512113256738 * var_x317;
        const double var_x319 = pow(var_chaste_interface__Ca_buffer__Cai, 1.7869999999999999);
        const double var_x320 = 2814485.1633595936 * var_x319;
        const double var_x321 = NV_Ith_S(mParameters, 2) / (1.0 + var_x318 + var_x320);
        const double var_x322 = var_x316 * var_x321;
        const double var_x323 = (var_x320 - var_x318) * NV_Ith_S(mParameters, 2) / pow((3.5530476870814998e-7 + var_x319 + 1.3765399305573384e-7 * var_x317), 2);
        const double var_x324 = var_x316 * var_x323;
        const double var_x325 = pow(var_chaste_interface__Ca_buffer__Ca_SR, 0.78699999999999992);
        const double var_x326 = var_x321 * var_x325;
        const double var_x327 = var_x323 * var_x325;
        const double var_x328 = 32.700000000000003 * var_chaste_interface__Ca_buffer__Cai;
        const double var_x329 = 2.3700000000000001 * var_chaste_interface__Ca_buffer__Cai;
        const double var_x330 = 34.0 * var_chaste_interface__Ca_buffer__Cai;
        const double var_x331 = 13.800000000000001 * var_chaste_interface__Ca_buffer__Cai;
        const double var_x332 = 100.0 * var_chaste_interface__Ca_buffer__Cai;
        const double var_x333 = exp(-11.764705882352942 + 0.14705882352941177 * NV_Ith_S(mParameters, 11) - 0.14705882352941177 * var_chaste_interface__cell__V);
        const double var_x334 = var_chaste_interface__cell__V < -40.0;
        const double var_x335 = ((var_x334) ? (0.13500000000000001 * var_x333) : (0));
        const double var_x336 = var_x335;
        const double var_x337 = exp(0.34999999999999998 * var_chaste_interface__cell__V - 0.34999999999999998 * NV_Ith_S(mParameters, 11));
        const double var_x338 = exp(0.079000000000000001 * var_chaste_interface__cell__V - 0.079000000000000001 * NV_Ith_S(mParameters, 11));
        const double var_x339 = exp(-0.96036036036036043 + 0.0900900900900901 * NV_Ith_S(mParameters, 11) - 0.0900900900900901 * var_chaste_interface__cell__V);
        const double var_x340 = 1.0 + var_x339;
        const double var_x341 = ((var_x334) ? (310000.0 * var_x337 + 3.5600000000000001 * var_x338) : (7.6923076923076916 / var_x340));
        const double var_x342 = var_x341;
        const double var_x343 = ((var_x334) ? (-0.019852941176470591 * var_x333) : (0));
        const double var_x344 = var_x335 + var_x341;
        const double var_x345 = 0.01 * NV_Ith_S(mParameters, 10);
        const double var_x346 = 1.0 - var_x345;
        const double var_x347 = var_x346 / var_x344;
        const double var_x348 = ((var_x334) ? (0.28123999999999999 * var_x338 + 108500.0 * var_x337) : (0.693000693000693 * var_x339 / pow(var_x340, 2)));
        const double var_x349 = exp(-5.5312920000000005 + 0.13780000000000001 * NV_Ith_S(mParameters, 11) - 0.13780000000000001 * var_chaste_interface__cell__V);
        const double var_x350 = 1.0 + var_x349;
        const double var_x351 = exp(0.01052 * NV_Ith_S(mParameters, 11) - 0.01052 * var_chaste_interface__cell__V);
        const double var_x352 = var_x351 / var_x350;
        const double var_x353 = -0.10000000000000001 * var_chaste_interface__cell__V;
        const double var_x354 = exp(-3.2000000000000002 + var_x353 + 0.10000000000000001 * NV_Ith_S(mParameters, 11));
        const double var_x355 = 1.0 + var_x354;
        const double var_x356 = exp(2.5349999999999999e-7 * NV_Ith_S(mParameters, 11) - 2.5349999999999999e-7 * var_chaste_interface__cell__V);
        const double var_x357 = var_x356 / var_x355;
        const double var_x358 = ((var_x334) ? (0.1212 * var_x352) : (0.29999999999999999 * var_x357));
        const double var_x359 = var_x358;
        const double var_x360 = 37.780000000000001 + var_chaste_interface__cell__V;
        const double var_x361 = exp(0.24440000000000001 * var_chaste_interface__cell__V - 0.24440000000000001 * NV_Ith_S(mParameters, 11));
        const double var_x362 = exp(0.043909999999999998 * NV_Ith_S(mParameters, 11) - 0.043909999999999998 * var_chaste_interface__cell__V);
        const double var_x363 = -127140.0 * var_x361 - 3.4740000000000003e-5 * var_x362;
        const double var_x364 = exp(24.640530000000002 + 0.311 * var_chaste_interface__cell__V - 0.311 * NV_Ith_S(mParameters, 11));
        const double var_x365 = 1.0 + var_x364;
        const double var_x366 = 1 / var_x365;
        const double var_x367 = var_x363 * var_x366;
        const double var_x368 = ((var_x334) ? (var_x360 * var_x367) : (0));
        const double var_x369 = var_x368;
        const double var_x370 = ((var_x334) ? (var_x367 + var_x360 * var_x366 * (1.5254334000000001e-6 * var_x362 - 31073.016 * var_x361) - 0.311 * var_x360 * var_x363 * var_x364 / pow(var_x365, 2)) : (0));
        const double var_x371 = var_x358 + var_x368;
        const double var_x372 = var_x346 / var_x371;
        const double var_x373 = ((var_x334) ? (-0.001275024 * var_x352 + 0.016701360000000002 * var_x349 * var_x351 / pow(var_x350, 2)) : (-7.6049999999999996e-8 * var_x357 + 0.029999999999999999 * var_x354 * var_x356 / pow(var_x355, 2)));
        const double var_x374 = exp(-0.090909090909090912 * var_chaste_interface__cell__V);
        const double var_x375 = 0.080000000000000002 * var_x374;
        const double var_x376 = 1 / (1.0 - exp(-1.0000000000287557e-7));
        const double var_x377 = 3.200000000092018e-7 * var_x376;
        const double var_x378 = 1 / (1.0 - exp(1.0000000000287557e-7));
        const double var_x379 = 47.130000000000003 + var_chaste_interface__cell__V;
        const double var_x380 = fabs(var_x379) < 1.0000000000287557e-6;
        const double var_x381 = exp(-4.7130000000000001 + var_x353);
        const double var_x382 = 1.0 - var_x381;
        const double var_x383 = 0.32000000000000001 / var_x382;
        const double var_x384 = ((var_x380) ? (var_x377 - 499999.99998562218 * (47.129999000000005 + var_chaste_interface__cell__V) * (-var_x377 - 3.200000000092018e-7 * var_x378)) : (var_x379 * var_x383));
        const double var_x385 = var_x375 + var_x384;
        const double var_x386 = 1 / var_x385;
        const double var_x387 = ((var_x380) ? (0.16 * var_x376 + 0.16 * var_x378) : (var_x383 - 0.032000000000000001 * var_x379 * var_x381 / pow(var_x382, 2)));
        const double var_x388 = 0.0072727272727272727 * var_x374;
        const double var_x389 = var_x384;
        const double var_x390 = exp(-6.666666666666667 - 0.13333333333333333 * var_chaste_interface__cell__V);
        const double var_x391 = 1.0 + var_x390;
        const double var_x392 = 1 / (-1.0 + exp(1.000000000001e-7));
        const double var_x393 = 1 / (-1.0 + exp(-1.000000000001e-7));
        const double var_x394 = exp(-0.86099999999999999 - 0.123 * var_chaste_interface__cell__V);
        const double var_x395 = 1.0 - var_x394;
        const double var_x396 = 0.0013799999999999999 / var_x395;
        const double var_x397 = 7.0 + var_chaste_interface__cell__V;
        const double var_x398 = var_x396 - 0.00016973999999999998 * var_x394 * var_x397 / pow(var_x395, 2);
        const double var_x399 = 10.0 + var_chaste_interface__cell__V;
        const double var_x400 = fabs(var_x399) < 6.8965517241448282e-7;
        const double var_x401 = 1 / (1.0 - exp(1.0000000000011388e-7));
        const double var_x402 = 1 / (1.0 - exp(-1.0000000000011388e-7));
        const double var_x403 = exp(1.45 + 0.14499999999999999 * var_chaste_interface__cell__V);
        const double var_x404 = -1.0 + var_x403;
        const double var_x405 = 0.00060999999999999997 / var_x404;
        const double var_x406 = var_x405 - 8.8449999999999995e-5 * var_x399 * var_x403 / pow(var_x404, 2);
        const double var_x407 = fabs(var_x397) < 8.1300813008222672e-7;
        const double var_x408 = 4.2068965517283451e-10 * var_x393;
        const double var_x409 = var_x396 * var_x397;
        const double var_x410 = 1.1219512195134727e-9 * var_x402;
        const double var_x411 = var_x399 * var_x405;
        const double var_x412 = ((var_x400) ? (var_x409 - var_x408 + 724999.99999927497 * (10.000000689655172 + var_chaste_interface__cell__V) * (var_x408 + 4.2068965517283451e-10 * var_x392)) : ((var_x407) ? (var_x410 + var_x411 - 614999.99999929965 * (6.9999991869918698 + var_chaste_interface__cell__V) * (-var_x410 - 1.1219512195134727e-9 * var_x401)) : (var_x409 + var_x411)));
        const double var_x413 = exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__cell__V);
        const double var_x414 = 1.0 + var_x413;
        const double var_x415 = 1 / (-1.0 + exp(9.9999999999880736e-8));
        const double var_x416 = 1 / (-1.0 + exp(-9.9999999999880736e-8));
        const double var_x417 = 1 / (1.0 - exp(2.1542940320207204e-7));
        const double var_x418 = 1 / (1.0 - exp(-2.1542940320207204e-7));
        const double var_x419 = 30.0 + var_chaste_interface__cell__V;
        const double var_x420 = fabs(var_x419) < 1.455604075689676e-6;
        const double var_x421 = exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__cell__V);
        const double var_x422 = -1.0 + var_x421;
        const double var_x423 = 0.00013100000000000001 / var_x422;
        const double var_x424 = exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__cell__V);
        const double var_x425 = 1.0 - var_x424;
        const double var_x426 = 7.1899999999999999e-5 / var_x425;
        const double var_x427 = 1.0465793304208771e-10 * var_x417;
        const double var_x428 = 1.9068413391534758e-10 * var_x416;
        const double var_x429 = ((var_x420) ? (-var_x427 - var_x428 + 343500.00000040967 * (30.000001455604075 + var_chaste_interface__cell__V) * (var_x427 + var_x428 + 1.0465793304208771e-10 * var_x418 + 1.9068413391534758e-10 * var_x415)) : (var_x419 * var_x423 + var_x419 * var_x426));
        const double var_x430 = 0.066666666666666666 * var_chaste_interface__cell__V;
        const double var_x431 = exp(0.20000000000000001 + var_x430);
        const double var_x432 = 1.0 + var_x431;
        const double var_x433 = 1 / var_x432;
        const double var_x434 = 1 / (0.5 + 9.0 * var_x433);
        const double var_x435 = exp(-0.20000000000000001 - var_x430);
        const double var_x436 = 1.0 + var_x435;
        const double var_x437 = 0.066666666666666666 * var_x435 / pow(var_x436, 2);
        const double var_x438 = 1 / var_x436;
        const double var_x439 = 0.10000000000000001 * var_chaste_interface__cell__V;
        const double var_x440 = exp(6.0 + var_x439);
        const double var_x441 = 1.0 + var_x440;
        const double var_x442 = 1 / var_x441;
        const double var_x443 = 1 / (30.0 + 3000.0 * var_x442);
        const double var_x444 = exp(3.3500000000000001 + var_x439);
        const double var_x445 = 1.0 + var_x444;
        const double var_x446 = var_x444 / pow(var_x445, 2);
        const double var_x447 = 0.10000000000000001 * var_x446;
        const double var_x448 = 1 / var_x445;
        const double var_x449 = var_x448;
        const double var_x450 = var_x440 / pow(var_x441, 2);
        const double var_x451 = 1 / (220.0 + 2800.0 * var_x442);
        const double var_x452 = exp(-0.0011111111111111111 * pow(var_chaste_interface__cell__V, 2));
        const double var_x453 = 1 / (1.5 + 3.5 * var_x452);
        const double var_x454 = 1 / (20.0 + 20.0 * var_x448);
        const double var_x455 = exp(-2.4166666666666665 - 0.16666666666666666 * var_chaste_interface__cell__V);
        const double var_x456 = 1.0 + var_x455;
        const double var_x457 = exp(-9.9999999998249642e-8);
        const double var_x458 = (1.0 - var_x457) / (1.0 + var_x457);
        const double var_x459 = 47619047.619881123 * var_x458;
        const double var_x460 = exp(1.000000000005626e-7);
        const double var_x461 = (1.0 - var_x460) / (1.0 + var_x460);
        const double var_x462 = (14.4999994 + var_chaste_interface__cell__V) * (-var_x459 - 47619047.618779711 * var_x461);
        const double var_x463 = 14.5 + var_chaste_interface__cell__V;
        const double var_x464 = fabs(var_x463) < 5.9999999999643672e-7;
        const double var_x465 = 1.0 - var_x455;
        const double var_x466 = 1 / var_x465;
        const double var_x467 = 0.035000000000000003 * var_x456 * var_x466;
        const double var_x468 = 0.0058333333333333336 * var_x455 * var_x463;
        const double var_x469 = ((var_x464) ? (1 / (var_x459 - 833333.3333382823 * var_x462)) : (var_x463 * var_x467));
        const double var_x470 = 0.019699999999999999 * exp(-0.23877882250000002 * pow((1 + 0.068965517241379309 * var_chaste_interface__cell__V), 2));
        const double var_x471 = exp(2.5 - 0.050000000000000003 * var_chaste_interface__cell__V);
        const double var_x472 = 1.0 + var_x471;
        const double var_x473 = exp(9.7388888888888889 + 0.27777777777777779 * var_chaste_interface__cell__V);
        const double var_x474 = 1.0 + var_x473;
        const double var_x475 = 1 / var_chaste_interface__Ca_buffer__Ca_SR;
        const double var_x476 = pow(var_x475, 2.5);
        const double var_x477 = 1.0 + 0.13584112963311223 * var_x476;
        const double var_x478 = 1 / var_x477;
        const double var_x479 = 7.0 * var_x478;
        const double var_x480 = -7.5 + var_x479;
        const double var_x481 = var_x480 * var_chaste_interface__Ca_buffer__Ca_jct;
        const double var_x482 = 1 / (15.0 - 14.0 * var_x478);
        const double var_x483 = 10.0 * var_x303 * var_x482;
        const double var_x484 = -var_x483;
        const double var_x485 = var_chaste_interface__Ca_buffer__Ca_jct * var_chaste_interface__Jrel_SR__R;
        const double var_x486 = var_x475 * var_x476 / pow(var_x477, 2);
        const double var_x487 = 2.3772197685794643 * var_x486;
        const double var_x488 = 0.21130842387373014 * var_x303 * var_x486 / pow((1 - 0.93333333333333335 * var_x478), 2);
        const double var_x489 = var_x488 * var_chaste_interface__Jrel_SR__R;
        const double var_x490 = 20.0 * var_x482;
        const double var_x491 = var_x485 * var_x490;
        const double var_x492 = 7.5 - var_x479;
        const double var_x493 = var_x487 * var_chaste_interface__Ca_buffer__Ca_jct * var_chaste_interface__Jrel_SR__O;
        const double var_x494 = 1.0 - var_chaste_interface__Jrel_SR__I - var_chaste_interface__Jrel_SR__O - var_chaste_interface__Jrel_SR__R;
        const double var_x495 = 0.00064370784861055767 * M_PI;
        const double var_x496 = var_x495 * NV_Ith_S(mParameters, 3);
        const double var_x497 = M_PI * NV_Ith_S(mParameters, 3);
        const double var_x498 = var_x112 * var_x497;
        const double var_x499 = 0.00057289998526339635 * var_x181;
        const double var_x500 = var_x184 * var_x497;
        const double var_x501 = 0.0001 * var_chaste_interface__Na_buffer__Na_SL_buf;
        const double var_x502 = 5.9492599172113663e-12 * var_x266;
        const double var_x503 = 0.0001 * var_chaste_interface__Na_buffer__Na_SL;
        const double var_x504 = 0.02524344504355128 * M_PI;
        const double var_x505 = var_x504 * NV_Ith_S(mParameters, 3);
        const double var_x506 = 0.0027767789547906408 * var_x179;
        const double var_x507 = 0.0001 * var_chaste_interface__Na_buffer__Na_jct_buf;
        const double var_x508 = 7.3530178752050587e-13 * var_x280;
        const double var_x509 = 0.0001 * var_chaste_interface__Na_buffer__Na_jct;
        const double var_x510 = 0.076376893524206985 * NV_Ith_S(mParameters, 3);
        const double var_x511 = 100.0 * var_chaste_interface__Ca_buffer__Ca_Calsequestrin;
        const double var_x512 = 18.571428571428569 * NV_Ith_S(mParameters, 0);
        const double var_x513 = var_chaste_interface__Jrel_SR__O * NV_Ith_S(mParameters, 1);
        const double var_x514 = 100.0 * var_chaste_interface__Ca_buffer__Ca_SR;
        const double var_x515 = 0.00032185392430527884 * M_PI;
        const double var_x516 = 3.9661732781409111e-12 * var_x266;
        const double var_x517 = 100.0 * var_chaste_interface__Ca_buffer__Ca_SLB_SL;
        const double var_x518 = 100.0 * var_chaste_interface__Ca_buffer__Ca_SLHigh_SL;
        const double var_x519 = 100.0 * var_chaste_interface__Ca_buffer__Ca_SL;
        const double var_x520 = 0.01262172252177564 * M_PI;
        const double var_x521 = 4.9020119168033731e-13 * var_x280;
        const double var_x522 = 1274.5098039215686 * NV_Ith_S(mParameters, 0);
        const double var_x523 = 68.627450980392155 * var_x513;
        const double var_x524 = 100.0 * var_chaste_interface__Ca_buffer__Ca_SLB_jct;
        const double var_x525 = 100.0 * var_chaste_interface__Ca_buffer__Ca_SLHigh_jct;
        const double var_x526 = 100.0 * var_chaste_interface__Ca_buffer__Ca_jct;
        const double var_x527 = -var_x519;
        const double var_x528 = -var_x526;
        const double var_x529 = -var_x329;
        const double var_x530 = -var_x331;
        const double var_x531 = 100.0 * var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_Cytosol;
        const double var_x532 = -var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_Cytosol - 0.030769230769230767 * var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_SL - 0.00078461538461538469 * var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_jct;
        const double var_x533 = 0.078461538461538471 * var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_jct;
        const double var_x534 = 3.0769230769230771 * var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_SL;
        const double var_x535 = var_x531 + var_x533 + var_x534;
        const double var_x536 = 100.0 * var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_SL;
        const double var_x537 = 100.0 * var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_jct;
        const double var_x538 = 100.0 * var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_Cytosol;
        const double var_x539 = -var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_Cytosol - 0.030769230769230767 * var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_SL - 0.00078461538461538469 * var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_jct;
        const double var_x540 = 0.078461538461538471 * var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_jct;
        const double var_x541 = 3.0769230769230771 * var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_SL;
        const double var_x542 = var_x538 + var_x540 + var_x541;
        const double var_x543 = 100.0 * var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_SL;
        const double var_x544 = 100.0 * var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_jct;
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (-0.0095482999999999991 - var_x44 - var_x57 - var_x77 - var_x89 - ((var_x16) ? (var_x14 * var_x9 + var_x6 * var_x9) : (var_x24 * var_x8 - 1.6428725295405924e-5 * var_x26 * var_x29 + 1.2321543971554444e-5 * var_x18 * var_x25 * var_x8 * NV_Ith_S(mParameters, 4))) - 0.11 * var_x101 - 0.11 * var_x144 - 0.89000000000000001 * var_x105 - 0.89000000000000001 * var_x157 - 1.0 * var_x113 - 0.01205875 / var_x91 - 0.00072268638738620954 * var_x176 - 0.0058471898615793322 * var_x178 - 0.097566250000000007 / var_x93 - 0.21009999999999998 * var_x166 - 1.6999 * var_x169 + var_x95 * var_chaste_interface__Itos_X_gate__X_tos - var_x107 * var_x110 - var_x96 * var_chaste_interface__Itof_X_gate__X_tof - 0.4389381125701739 * var_x117 * var_x125 + 0.10468673984798647 * var_x125 * var_x171 * var_x172 + 0.019211226915711394 * var_x107 * var_x108 * var_x171 / pow(var_x109, 2) - 0.42189361069797565 * var_x117 * var_x173 * (0.24326999999999999 * var_x172 - var_x120 * (0.061749999999999999 * var_x121 + 0.039456396800000001 * var_x122) - 0.51429999999999998 * var_x118 * var_x123 / pow(var_x119, 2)) * NV_Ith_S(mParameters, 13) / pow((var_x117 + 0.98039215686274506 * var_x124), 2));
        IJth(rJacobian, 2, 0) = (var_x336 + var_x342) * (var_x343 * var_x347 + var_x335 * var_x346 * (-var_x343 - var_x348) / pow(var_x344, 2)) + (var_x343 + var_x348) * (var_x345 - var_chaste_interface__INa_h_gate__h + var_x335 * var_x347);
        IJth(rJacobian, 3, 0) = (var_x359 + var_x369) * (var_x370 * var_x372 + var_x346 * var_x368 * (-var_x370 - var_x373) / pow(var_x371, 2)) + (var_x370 + var_x373) * (var_x345 - var_chaste_interface__INa_j_gate__j + var_x368 * var_x372);
        IJth(rJacobian, 4, 0) = (var_x375 + var_x389) * (var_x386 * var_x387 + var_x384 * (var_x388 - var_x387) / pow(var_x385, 2)) + (-var_x388 + var_x387) * (-var_chaste_interface__INa_m_gate__m + var_x384 * var_x386);
        IJth(rJacobian, 5, 0) = (-var_chaste_interface__IKr_Xr_gate__Xr + 1 / var_x391) * ((var_x400) ? (var_x398 + 0.00030499999999999999 * var_x392 + 0.00030499999999999999 * var_x393) : ((var_x407) ? (var_x406 + 0.00068999999999999997 * var_x401 + 0.00068999999999999997 * var_x402) : (var_x398 + var_x406))) + 0.13333333333333333 * var_x390 * var_x412 / pow(var_x391, 2);
        IJth(rJacobian, 6, 0) = (-var_chaste_interface__IKs_Xs_gate__Xs + 1 / var_x414) * ((var_x420) ? (6.5500000000000006e-5 * var_x415 + 6.5500000000000006e-5 * var_x416 + 3.595e-5 * var_x417 + 3.595e-5 * var_x418) : (var_x423 + var_x426 - 8.9997000000000013e-6 * var_x419 * var_x421 / pow(var_x422, 2) - 1.0641199999999999e-5 * var_x419 * var_x424 / pow(var_x425, 2))) + 0.059880239520958084 * var_x413 * var_x429 / pow(var_x414, 2);
        IJth(rJacobian, 7, 0) = var_x434 * var_x437 + 0.0074074074074074077 * var_x431 * (var_x438 - var_chaste_interface__Itos_X_gate__X_tos) / (pow(var_x432, 2) * pow((0.055555555555555552 + var_x433), 2));
        IJth(rJacobian, 8, 0) = -var_x443 * var_x447 + 3.3333333333333335e-5 * var_x450 * (var_x449 + var_x94) / pow((0.01 + var_x442), 2);
        IJth(rJacobian, 9, 0) = -var_x447 * var_x451 + 3.5714285714285717e-5 * var_x450 * (var_x449 - var_chaste_interface__Itos_R_gate__R_tos) / pow((0.07857142857142857 + var_x442), 2);
        IJth(rJacobian, 10, 0) = var_x437 * var_x453 + 0.00063492063492063492 * var_x452 * (var_x438 - var_chaste_interface__Itof_X_gate__X_tof) * var_chaste_interface__cell__V / pow((0.42857142857142855 + var_x452), 2);
        IJth(rJacobian, 11, 0) = -var_x447 * var_x454 + 0.0050000000000000001 * var_x446 * (var_x449 - var_chaste_interface__Itof_Y_gate__Y_tof) / pow((1 + var_x448), 2);
        IJth(rJacobian, 12, 0) = (-var_chaste_interface__ICaL_d_gate__d + 1 / var_x456) * ((var_x464) ? (4.4099999998456186e-16 * (-39682539683469.938 * var_x458 - 39682539682552.094 * var_x461) / pow((var_x458 - 0.017499999999797618 * var_x462), 2)) : (var_x467 - var_x466 * var_x468 - var_x456 * var_x468 / pow(var_x465, 2))) + 0.16666666666666666 * var_x455 * var_x469 / pow(var_x456, 2);
        IJth(rJacobian, 13, 0) = (0.02 + var_x470) * (0.029999999999999999 * var_x471 / pow(var_x472, 2) - 0.27777777777777779 * var_x473 / pow(var_x474, 2)) + var_x470 * (-0.032935010000000001 - 0.0022713799999999999 * var_chaste_interface__cell__V) * (-var_chaste_interface__ICaL_f_gate__f + 1 / var_x474 + 0.59999999999999998 / var_x472);
        IJth(rJacobian, 19, 0) = -var_x496 * (0.00026433000000000001 + var_x44 + 0.89000000000000001 * var_x113 + 2.6699999999999999 * var_x157 + 0.017541569584737998 * var_x178 + 5.0996999999999995 * var_x169);
        IJth(rJacobian, 20, 0) = -var_x505 * (3.2670000000000004e-5 + var_x57 + 0.11 * var_x113 + 0.33000000000000002 * var_x144 + 0.63029999999999997 * var_x166 + 0.0021680591621586289 * var_x176);
        IJth(rJacobian, 25, 0) = -var_x515 * (0.00022365699999999999 + var_x77 - 1.78 * var_x157 - 0.011694379723158664 * var_x178);
        IJth(rJacobian, 26, 0) = -var_x520 * (2.7642999999999999e-5 + var_x89 - 0.22 * var_x144 - 0.0014453727747724191 * var_x176);
        IJth(rJacobian, 1, 1) = -7.2523935948689155 + var_x309 + var_x310 + var_x311 + var_x312 + var_x313 + var_x314 + var_x315 + 6.3492962168146398e-7 * var_x324 - 5029484.9869235931 * var_x322;
        IJth(rJacobian, 24, 1) = 93404721.185723871 * var_x322 - 1.1791550116941473e-5 * var_x324;
        IJth(rJacobian, 25, 1) = 5.6417918332397381;
        IJth(rJacobian, 32, 1) = 2.2890000000000006 - var_x311;
        IJth(rJacobian, 33, 1) = 0.33180000000000004 - var_x312 - var_x313;
        IJth(rJacobian, 35, 1) = 0.81600000000000006 - var_x309;
        IJth(rJacobian, 36, 1) = 1.9320000000000004 - var_x314 - var_x315;
        IJth(rJacobian, 38, 1) = 1.71 - var_x310;
        IJth(rJacobian, 39, 1) = var_x532 * (2.5 - var_x531);
        IJth(rJacobian, 42, 1) = var_x539 * (2.5 - var_x538);
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x112 * var_x180 - var_x112 * var_x182);
        IJth(rJacobian, 2, 2) = -var_x336 - var_x342;
        IJth(rJacobian, 19, 2) = -var_x498 * var_x499;
        IJth(rJacobian, 20, 2) = -var_x498 * var_x506;
        IJth(rJacobian, 0, 3) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x180 * var_x184 - var_x182 * var_x184);
        IJth(rJacobian, 3, 3) = -var_x359 - var_x369;
        IJth(rJacobian, 19, 3) = -var_x499 * var_x500;
        IJth(rJacobian, 20, 3) = -var_x500 * var_x506;
        IJth(rJacobian, 0, 4) = mSetVoltageDerivativeToZero ? 0.0 : (-0.33000000000000002 * var_x186 - 2.6699999999999999 * var_x187);
        IJth(rJacobian, 4, 4) = -var_x375 - var_x389;
        IJth(rJacobian, 19, 4) = -0.0017186999557901889 * var_x187 * var_x497;
        IJth(rJacobian, 20, 4) = -0.0083303368643719219 * var_x186 * var_x497;
        IJth(rJacobian, 0, 5) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x110 * var_x173 * NV_Ith_S(mParameters, 14));
        IJth(rJacobian, 5, 5) = -var_x412;
        IJth(rJacobian, 0, 6) = mSetVoltageDerivativeToZero ? 0.0 : (-0.22 * var_x190 * var_x99 - 1.78 * var_x104 * var_x190);
        IJth(rJacobian, 6, 6) = -var_x429;
        IJth(rJacobian, 0, 7) = mSetVoltageDerivativeToZero ? 0.0 : (var_x171 * var_x95);
        IJth(rJacobian, 7, 7) = -var_x434;
        IJth(rJacobian, 0, 8) = mSetVoltageDerivativeToZero ? 0.0 : (var_x191 * var_x192);
        IJth(rJacobian, 8, 8) = -var_x443;
        IJth(rJacobian, 0, 9) = mSetVoltageDerivativeToZero ? 0.0 : (var_x192 * (13.356415961992688 * var_x114 - 0.5 * var_chaste_interface__cell__V));
        IJth(rJacobian, 9, 9) = -var_x451;
        IJth(rJacobian, 0, 10) = mSetVoltageDerivativeToZero ? 0.0 : (var_x191 * var_x96);
        IJth(rJacobian, 10, 10) = -var_x453;
        IJth(rJacobian, 0, 11) = mSetVoltageDerivativeToZero ? 0.0 : (var_x191 * NV_Ith_S(mParameters, 12) * var_chaste_interface__Itof_X_gate__X_tof);
        IJth(rJacobian, 11, 11) = -var_x454;
        IJth(rJacobian, 0, 12) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x199 - var_x208 - var_x214 - var_x218 - ((var_x16) ? (-var_x202 + var_x193 * (var_x202 + var_x200 * var_x6)) : (var_x24 * var_x7 * var_chaste_interface__cell__V)));
        IJth(rJacobian, 12, 12) = -var_x469;
        IJth(rJacobian, 19, 12) = -var_x208 * var_x496;
        IJth(rJacobian, 20, 12) = -var_x199 * var_x505;
        IJth(rJacobian, 25, 12) = -var_x214 * var_x515;
        IJth(rJacobian, 26, 12) = -var_x218 * var_x520;
        IJth(rJacobian, 0, 13) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x223 - var_x226 - var_x231 - var_x233 - ((var_x16) ? (-var_x224 + var_x193 * (var_x224 + var_x200 * var_x219 * var_x3)) : (0.00043885777754150548 * var_x222 * var_x26)));
        IJth(rJacobian, 13, 13) = -0.02 - var_x470;
        IJth(rJacobian, 19, 13) = -var_x226 * var_x496;
        IJth(rJacobian, 20, 13) = -var_x223 * var_x505;
        IJth(rJacobian, 25, 13) = -var_x231 * var_x515;
        IJth(rJacobian, 26, 13) = -var_x233 * var_x520;
        IJth(rJacobian, 0, 14) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x240 - var_x244 - ((var_x16) ? (var_x235 + var_x193 * (-var_x235 - var_x234 * var_x6)) : (-4.388577775415055e-5 * var_x237)));
        IJth(rJacobian, 14, 14) = -0.011900000000000001 - 1.7 * var_chaste_interface__Ca_buffer__Ca_SL;
        IJth(rJacobian, 19, 14) = -var_x240 * var_x496;
        IJth(rJacobian, 25, 14) = -var_x244 * var_x515;
        IJth(rJacobian, 0, 15) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x247 - var_x252 - ((var_x16) ? (var_x249 + var_x193 * (-var_x249 - var_x248 * var_x6)) : (-0.00039497199978735494 * var_x237)));
        IJth(rJacobian, 15, 15) = -0.011900000000000001 - 1.7 * var_chaste_interface__Ca_buffer__Ca_jct;
        IJth(rJacobian, 20, 15) = -var_x247 * var_x505;
        IJth(rJacobian, 26, 15) = -var_x252 * var_x520;
        IJth(rJacobian, 16, 16) = -0.0050000000000000001 + var_x481 + var_x484;
        IJth(rJacobian, 17, 16) = var_x484;
        IJth(rJacobian, 18, 16) = var_x483;
        IJth(rJacobian, 16, 17) = -0.0050000000000000001;
        IJth(rJacobian, 17, 17) = -0.065000000000000002 + var_x484;
        IJth(rJacobian, 18, 17) = 0.0050000000000000001;
        IJth(rJacobian, 16, 18) = 0.055;
        IJth(rJacobian, 17, 18) = var_x484 + var_x492 * var_chaste_interface__Ca_buffer__Ca_jct;
        IJth(rJacobian, 18, 18) = -0.059999999999999998 + var_x481;
        IJth(rJacobian, 24, 18) = (-var_chaste_interface__Ca_buffer__Ca_SR + var_chaste_interface__Ca_buffer__Ca_jct) * NV_Ith_S(mParameters, 1);
        IJth(rJacobian, 26, 18) = (68.627450980392155 * var_chaste_interface__Ca_buffer__Ca_SR - 68.627450980392155 * var_chaste_interface__Ca_buffer__Ca_jct) * NV_Ith_S(mParameters, 1);
        IJth(rJacobian, 0, 19) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x257 - var_x258 - var_x259 - 2.6699999999999999 * var_x271 - 0.00046442182911003347 * var_x269 - var_x263 * var_x267);
        IJth(rJacobian, 19, 19) = (-2.5101556644976917 + var_x501 - var_x495 * (var_x257 + var_x258 + var_x259 + 8.0099999999999998 * var_x271 + 0.0013932654873301004 * var_x269 + var_x263 * var_x502)) * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 20, 19) = 1.0879068612142859 * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 21, 19) = 0.000165 - var_x501;
        IJth(rJacobian, 23, 19) = var_x510;
        IJth(rJacobian, 25, 19) = -var_x515 * (-5.3399999999999999 * var_x271 - var_x263 * var_x516);
        IJth(rJacobian, 0, 20) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x274 - var_x275 - var_x276 - 0.33000000000000002 * var_x283 - 5.7400450788880541e-5 * var_x282 - var_x278 * var_x281);
        IJth(rJacobian, 19, 20) = 0.02774162496096429 * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 20, 20) = (-1.0886629612142857 + var_x507 - var_x504 * (var_x274 + var_x275 + var_x276 + 0.98999999999999999 * var_x283 + 0.00017220135236664162 * var_x282 + var_x278 * var_x508)) * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 22, 20) = 0.0007561 - var_x507;
        IJth(rJacobian, 26, 20) = -var_x520 * (-0.66000000000000003 * var_x283 - var_x278 * var_x521);
        IJth(rJacobian, 19, 21) = (0.001 + var_x503) * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 21, 21) = -0.001 - var_x503;
        IJth(rJacobian, 20, 22) = (0.001 + var_x509) * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 22, 22) = -0.001 - var_x509;
        IJth(rJacobian, 0, 23) = mSetVoltageDerivativeToZero ? 0.0 : (-0.43578512615832021 * var_x105 * var_x188 - 0.053861083008331714 * var_x101 * var_x188);
        IJth(rJacobian, 19, 23) = 2.4822490395367272 * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 23, 23) = -var_x510;
        IJth(rJacobian, 1, 24) = 0.69232869146389786 * var_x326 + 8.7400597733819945e-14 * var_x327;
        IJth(rJacobian, 16, 24) = -var_x489 + var_x485 * var_x487;
        IJth(rJacobian, 17, 24) = -var_x493 + var_x488 * var_x494;
        IJth(rJacobian, 18, 24) = var_x489 + var_x493;
        IJth(rJacobian, 24, 24) = -260.0 + var_x511 - var_x512 - var_x513 - 1.6231539579137989e-12 * var_x327 - 12.857532841472388 * var_x326;
        IJth(rJacobian, 26, 24) = var_x522 + var_x523;
        IJth(rJacobian, 31, 24) = 260.0 - var_x511;
        IJth(rJacobian, 0, 25) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x288 - var_x289 - var_x292 + 0.89000000000000001 * var_x294 - 4.4795166719999994e-11 * var_x295 - var_x267 * var_x297 + 0.08900000000000001 * var_x290 / (pow(var_x93, 2) * pow(var_chaste_interface__Ca_buffer__Ca_SL, 2)) - 0.28183333333333332 * var_x102 * var_x298 * var_x92 / pow(var_x103, 2));
        IJth(rJacobian, 1, 25) = 0.17359359486891501;
        IJth(rJacobian, 14, 25) = 1.7 - 1.7 * var_chaste_interface__ICaL_fCa_gate__fCaB_SL;
        IJth(rJacobian, 19, 25) = -var_x496 * (1.3438550016e-10 * var_x295 - 2.6699999999999999 * var_x294 + var_x297 * var_x502);
        IJth(rJacobian, 25, 25) = -171.99023312516786 + var_x517 + var_x518 - var_x515 * (var_x288 + var_x289 + var_x292 + 1.78 * var_x294 - 8.9590333439999989e-11 * var_x295 - var_x297 * var_x516);
        IJth(rJacobian, 26, 25) = 48.958482036396518;
        IJth(rJacobian, 27, 25) = 121.55000000000001 - var_x517;
        IJth(rJacobian, 29, 25) = 43.550000000000004 - var_x518;
        IJth(rJacobian, 40, 25) = var_x532 * (2.5024999999999999 - var_x536);
        IJth(rJacobian, 43, 25) = var_x539 * (2.5024999999999999 - var_x543);
        IJth(rJacobian, 0, 26) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x301 - var_x302 - var_x305 + 0.11 * var_x306 - 5.5364812799999996e-12 * var_x308 - var_x281 * var_x307 + 0.011000000000000001 * var_x290 / (var_x303 * pow(var_x91, 2)) - 0.034833333333333334 * var_x298 * var_x90 * var_x97 / pow(var_x98, 2));
        IJth(rJacobian, 15, 26) = 1.7 - 1.7 * var_chaste_interface__ICaL_fCa_gate__fCaB_jct;
        IJth(rJacobian, 16, 26) = -var_x491 + var_x480 * var_chaste_interface__Jrel_SR__R;
        IJth(rJacobian, 17, 26) = var_x492 * var_chaste_interface__Jrel_SR__O + var_x490 * var_x494 * var_chaste_interface__Ca_buffer__Ca_jct;
        IJth(rJacobian, 18, 26) = var_x491 + var_x480 * var_chaste_interface__Jrel_SR__O;
        IJth(rJacobian, 20, 26) = -var_x505 * (1.6609443839999999e-11 * var_x308 - 0.33000000000000002 * var_x306 + var_x307 * var_x508);
        IJth(rJacobian, 24, 26) = var_x512 + var_x513;
        IJth(rJacobian, 25, 26) = 1.2484412919281114;
        IJth(rJacobian, 26, 26) = -128.61534478149457 + var_x524 + var_x525 - var_x522 - var_x523 - var_x520 * (var_x301 + var_x302 + var_x305 + 0.22 * var_x306 - 1.1072962559999999e-11 * var_x308 - var_x307 * var_x521);
        IJth(rJacobian, 28, 26) = 58.627450980392155 - var_x524;
        IJth(rJacobian, 30, 26) = 21.029411764705884 - var_x525;
        IJth(rJacobian, 41, 26) = var_x532 * (2.5490196078431375 - var_x537);
        IJth(rJacobian, 44, 26) = var_x539 * (2.5490196078431375 - var_x544);
        IJth(rJacobian, 25, 27) = 1.3 + var_x519;
        IJth(rJacobian, 27, 27) = -1.3 + var_x527;
        IJth(rJacobian, 26, 28) = 1.3 + var_x526;
        IJth(rJacobian, 28, 28) = -1.3 + var_x528;
        IJth(rJacobian, 25, 29) = 0.029999999999999999 + var_x519;
        IJth(rJacobian, 29, 29) = -0.029999999999999999 + var_x527;
        IJth(rJacobian, 26, 30) = 0.029999999999999999 + var_x526;
        IJth(rJacobian, 30, 30) = -0.029999999999999999 + var_x528;
        IJth(rJacobian, 24, 31) = 65.0 + var_x514;
        IJth(rJacobian, 31, 31) = -65.0 - var_x514;
        IJth(rJacobian, 1, 32) = 0.019599999999999999 + var_x328;
        IJth(rJacobian, 32, 32) = -0.019599999999999999 - var_x328;
        IJth(rJacobian, 1, 33) = 0.003032 + var_x329;
        IJth(rJacobian, 33, 33) = -3.1999999999999999e-5 + var_x529;
        IJth(rJacobian, 34, 33) = -0.0030000000000000001;
        IJth(rJacobian, 1, 34) = 0.0063300000000000006 + var_x329;
        IJth(rJacobian, 33, 34) = var_x529;
        IJth(rJacobian, 34, 34) = -0.0063300000000000006;
        IJth(rJacobian, 1, 35) = 0.23799999999999999 + var_x330;
        IJth(rJacobian, 35, 35) = -0.23799999999999999 - var_x330;
        IJth(rJacobian, 1, 36) = 0.016159999999999997 + var_x331;
        IJth(rJacobian, 36, 36) = -0.00046000000000000001 + var_x530;
        IJth(rJacobian, 37, 36) = -0.015699999999999999;
        IJth(rJacobian, 1, 37) = 0.015757 + var_x331;
        IJth(rJacobian, 36, 37) = var_x530;
        IJth(rJacobian, 37, 37) = -0.015757;
        IJth(rJacobian, 1, 38) = 0.059999999999999998 + var_x332;
        IJth(rJacobian, 38, 38) = -0.059999999999999998 - var_x332;
        IJth(rJacobian, 39, 39) = -0.059999999999999998 + var_x535 * var_chaste_interface__Ca_buffer__Cai + (-2.5 + var_x531) * var_chaste_interface__Ca_buffer__Cai;
        IJth(rJacobian, 40, 39) = (-2.5024999999999999 + var_x536) * var_chaste_interface__Ca_buffer__Ca_SL;
        IJth(rJacobian, 41, 39) = (-2.5490196078431375 + var_x537) * var_chaste_interface__Ca_buffer__Ca_jct;
        IJth(rJacobian, 39, 40) = (-0.076923076923076927 + 3.0769230769230771 * var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_Cytosol) * var_chaste_interface__Ca_buffer__Cai;
        IJth(rJacobian, 40, 40) = -0.059999999999999998 + var_x535 * var_chaste_interface__Ca_buffer__Ca_SL + (-0.076999999999999999 + var_x534) * var_chaste_interface__Ca_buffer__Ca_SL;
        IJth(rJacobian, 41, 40) = (-0.078431372549019607 + 3.0769230769230771 * var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_jct) * var_chaste_interface__Ca_buffer__Ca_jct;
        IJth(rJacobian, 39, 41) = (-0.0019615384615384616 + 0.078461538461538471 * var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_Cytosol) * var_chaste_interface__Ca_buffer__Cai;
        IJth(rJacobian, 40, 41) = (-0.0019635 + 0.078461538461538471 * var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Indo1_SL) * var_chaste_interface__Ca_buffer__Ca_SL;
        IJth(rJacobian, 41, 41) = -0.059999999999999998 + var_x535 * var_chaste_interface__Ca_buffer__Ca_jct + (-0.002 + var_x533) * var_chaste_interface__Ca_buffer__Ca_jct;
        IJth(rJacobian, 42, 42) = -0.11 + var_x542 * var_chaste_interface__Ca_buffer__Cai + (-2.5 + var_x538) * var_chaste_interface__Ca_buffer__Cai;
        IJth(rJacobian, 43, 42) = (-2.5024999999999999 + var_x543) * var_chaste_interface__Ca_buffer__Ca_SL;
        IJth(rJacobian, 44, 42) = (-2.5490196078431375 + var_x544) * var_chaste_interface__Ca_buffer__Ca_jct;
        IJth(rJacobian, 42, 43) = (-0.076923076923076927 + 3.0769230769230771 * var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_Cytosol) * var_chaste_interface__Ca_buffer__Cai;
        IJth(rJacobian, 43, 43) = -0.11 + var_x542 * var_chaste_interface__Ca_buffer__Ca_SL + (-0.076999999999999999 + var_x541) * var_chaste_interface__Ca_buffer__Ca_SL;
        IJth(rJacobian, 44, 43) = (-0.078431372549019607 + 3.0769230769230771 * var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_jct) * var_chaste_interface__Ca_buffer__Ca_jct;
        IJth(rJacobian, 42, 44) = (-0.0019615384615384616 + 0.078461538461538471 * var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_Cytosol) * var_chaste_interface__Ca_buffer__Cai;
        IJth(rJacobian, 43, 44) = (-0.0019635 + 0.078461538461538471 * var_chaste_interface__indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_SL) * var_chaste_interface__Ca_buffer__Ca_SL;
        IJth(rJacobian, 44, 44) = -0.11 + var_x542 * var_chaste_interface__Ca_buffer__Ca_jct + (-0.002 + var_x540) * var_chaste_interface__Ca_buffer__Ca_jct;
    }

    N_Vector Cellshannon_wang_puglisi_weber_bers_2004FromCellMLCvode::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -85.721630473733
        double var_chaste_interface__INa_h_gate__h = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.98714602875678
        double var_chaste_interface__INa_j_gate__j = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.991826348770428
        double var_chaste_interface__INa_m_gate__m = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.0013702407736465
        double var_chaste_interface__IKr_Xr_gate__Xr = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.00846906175020028
        double var_chaste_interface__IKs_Xs_gate__Xs = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.00613557812033723
        double var_chaste_interface__Itos_X_gate__X_tos = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.00401072468238921
        double var_chaste_interface__Itos_Y_gate__Y_tos = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.31555225368514
        double var_chaste_interface__Itos_R_gate__R_tos = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.402577243036347
        double var_chaste_interface__Itof_X_gate__X_tof = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.00401068798369438
        double var_chaste_interface__Itof_Y_gate__Y_tof = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.994632857675454
        double var_chaste_interface__ICaL_d_gate__d = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 6.99526086177479e-06
        double var_chaste_interface__ICaL_f_gate__f = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 1.00067601563206
        double var_chaste_interface__ICaL_fCa_gate__fCaB_SL = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.0150193299768419
        double var_chaste_interface__ICaL_fCa_gate__fCaB_jct = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.0244048782575591
        double var_chaste_interface__Jrel_SR__O = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 7.1199533741995e-07
        double var_chaste_interface__Na_buffer__Na_SL = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 8.87161932058707
        double var_chaste_interface__Na_buffer__Na_jct = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 8.87031835089116
        double var_chaste_interface__Na_buffer__Nai = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 8.87200572571131
        double var_chaste_interface__Ca_buffer__Ca_SR = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 0.547125831028543
        double var_chaste_interface__Ca_buffer__Ca_SL = NV_Ith_S(rY, 25);
        // Units: millimolar; Initial value: 0.000104971310105451
        double var_chaste_interface__Ca_buffer__Ca_jct = NV_Ith_S(rY, 26);
        // Units: millimolar; Initial value: 0.000174045152623969
        
        // Mathematics
        const double var_ICaL_fCa_gate__fCa_SL = 1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL; // dimensionless
        const double var_IKs__Fx_Ks_SL = 0.89000000000000001; // dimensionless
        const double var_IKs__Fx_Ks_jct = 0.11; // dimensionless
        const double var_IKs__pCa_SL = 3.0 - log10(var_chaste_interface__Ca_buffer__Ca_SL); // dimensionless
        const double var_IKs__G_Ks_SL = (0.057000000000000002 + 0.19 / (1.0 + exp(-12.0 + 1.6666666666666667 * var_IKs__pCa_SL))) * NV_Ith_S(mParameters, 15); // milliS_per_microF
        const double var_IKs__pCa_jct = 3.0 - log10(var_chaste_interface__Ca_buffer__Ca_jct); // dimensionless
        const double var_IKs__G_Ks_jct = (0.057000000000000002 + 0.19 / (1.0 + exp(-12.0 + 1.6666666666666667 * var_IKs__pCa_jct))) * NV_Ith_S(mParameters, 15); // milliS_per_microF
        const double var_IKs__pKNa = 0.018329999999999999; // dimensionless
        const double var_INa__Fx_Na_SL = 0.89000000000000001; // dimensionless
        const double var_INa__Fx_Na_jct = 0.11; // dimensionless
        const double var_INaCa__Fx_NCX_SL = 0.89000000000000001; // dimensionless
        const double var_INaCa__Fx_NCX_jct = 0.11; // dimensionless
        const double var_INaCa__HNa = 3.0; // dimensionless
        const double var_INaCa__K_mCai = 0.0035899999999999999; // millimolar
        const double var_INaCa__K_mCao = 1.3; // millimolar
        const double var_INaCa__K_mNai = 12.289999999999999; // millimolar
        const double var_INaCa__K_mNao = 87.5; // millimolar
        const double var_INaCa__Kd_act = 0.00025599999999999999; // millimolar
        const double var_INaCa__Ka_SL = 1 / (1.0 + pow(var_INaCa__Kd_act, 3) / pow(var_chaste_interface__Ca_buffer__Ca_SL, 3)); // dimensionless
        const double var_INaCa__Ka_jct = 1 / (1.0 + pow(var_INaCa__Kd_act, 3) / pow(var_chaste_interface__Ca_buffer__Ca_jct, 3)); // dimensionless
        const double var_INaCa__Q10_NCX = 1.5700000000000001; // dimensionless
        const double var_INaCa__eta = 0.34999999999999998; // dimensionless
        const double var_INaCa__ksat = 0.27000000000000002; // dimensionless
        const double var_INa__openProb = pow(var_chaste_interface__INa_m_gate__m, 3) * var_chaste_interface__INa_h_gate__h * var_chaste_interface__INa_j_gate__j; // dimensionless
        const double var_Jrel_SR__j_rel_SR = (-var_chaste_interface__Ca_buffer__Ca_jct + var_chaste_interface__Ca_buffer__Ca_SR) * var_chaste_interface__Jrel_SR__O * NV_Ith_S(mParameters, 1); // millimolar_per_millisecond
        const double var_ICaL_f_gate__tau_f = 1 / (0.02 + 0.019699999999999999 * exp(-0.23877882250000002 * pow((1 + 0.068965517241379309 * var_chaste_interface__cell__V), 2))); // millisecond
        const double var_IKr_Rr_gate__Rr = 1 / (1.0 + exp(1.4732142857142858 + 0.044642857142857144 * var_chaste_interface__cell__V)); // dimensionless
        const double var_INa_h_gate__alpha_h = ((var_chaste_interface__cell__V < -40.0) ? (0.13500000000000001 * exp(-11.764705882352942 + 0.14705882352941177 * NV_Ith_S(mParameters, 11) - 0.14705882352941177 * var_chaste_interface__cell__V)) : (0)); // per_millisecond
        const double var_INa_h_gate__beta_h = ((var_chaste_interface__cell__V < -40.0) ? (310000.0 * exp(0.34999999999999998 * var_chaste_interface__cell__V - 0.34999999999999998 * NV_Ith_S(mParameters, 11)) + 3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__cell__V - 0.079000000000000001 * NV_Ith_S(mParameters, 11))) : (7.6923076923076916 / (1.0 + exp(-0.96036036036036043 + 0.0900900900900901 * NV_Ith_S(mParameters, 11) - 0.0900900900900901 * var_chaste_interface__cell__V)))); // per_millisecond
        const double var_INa_h_gate__tau_h = 1 / (var_INa_h_gate__alpha_h + var_INa_h_gate__beta_h); // millisecond
        const double var_INa_j_gate__alpha_j = ((var_chaste_interface__cell__V < -40.0) ? ((37.780000000000001 + var_chaste_interface__cell__V) * (-127140.0 * exp(0.24440000000000001 * var_chaste_interface__cell__V - 0.24440000000000001 * NV_Ith_S(mParameters, 11)) - 3.4740000000000003e-5 * exp(0.043909999999999998 * NV_Ith_S(mParameters, 11) - 0.043909999999999998 * var_chaste_interface__cell__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__cell__V - 0.311 * NV_Ith_S(mParameters, 11)))) : (0)); // per_millisecond
        const double var_INa_j_gate__beta_j = ((var_chaste_interface__cell__V < -40.0) ? (0.1212 * exp(0.01052 * NV_Ith_S(mParameters, 11) - 0.01052 * var_chaste_interface__cell__V) / (1.0 + exp(-5.5312920000000005 + 0.13780000000000001 * NV_Ith_S(mParameters, 11) - 0.13780000000000001 * var_chaste_interface__cell__V))) : (0.29999999999999999 * exp(2.5349999999999999e-7 * NV_Ith_S(mParameters, 11) - 2.5349999999999999e-7 * var_chaste_interface__cell__V) / (1.0 + exp(-3.2000000000000002 + 0.10000000000000001 * NV_Ith_S(mParameters, 11) - 0.10000000000000001 * var_chaste_interface__cell__V)))); // per_millisecond
        const double var_INa_j_gate__tau_j = 1 / (var_INa_j_gate__alpha_j + var_INa_j_gate__beta_j); // millisecond
        const double var_cell__i_Stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_ICaL__i_CaL_Ca_SL = ((fabs(var_chaste_interface__cell__V) < 1.3356415961992688e-6) ? (374351.92301797954 * (1.3356415961992688e-6 + var_chaste_interface__cell__V) * (0.00086838029999999997 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_SL * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 8) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(9.9999999999999995e-8)) + 0.00086838029999999997 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_SL * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 8) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) - 0.00086838029999999997 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_SL * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 8) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) : (650.15967043186004 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_SL * exp(0.074870384603595908 * var_chaste_interface__cell__V)) * NV_Ith_S(mParameters, 8) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f * var_chaste_interface__cell__V / (-1.0 + exp(0.074870384603595908 * var_chaste_interface__cell__V)))); // microA_per_microF
        const double var_ICaL__i_CaL_Ca_jct = ((fabs(var_chaste_interface__cell__V) < 1.3356415961992688e-6) ? (374351.92301797954 * (1.3356415961992688e-6 + var_chaste_interface__cell__V) * (0.0078154226999999996 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_jct * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 8) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(9.9999999999999995e-8)) + 0.0078154226999999996 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_jct * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 8) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) - 0.0078154226999999996 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_jct * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 8) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) : (5851.4370338867393 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + 0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_jct * exp(0.074870384603595908 * var_chaste_interface__cell__V)) * NV_Ith_S(mParameters, 8) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f * var_chaste_interface__cell__V / (-1.0 + exp(0.074870384603595908 * var_chaste_interface__cell__V)))); // microA_per_microF
        const double var_model_parameters__F = 96486.699999999997; // coulomb_per_mole
        const double var_ICaL__i_CaL_K = ((fabs(var_chaste_interface__cell__V) < 2.6712831923985376e-6) ? (187175.96150898977 * (2.6712831923985376e-6 + var_chaste_interface__cell__V) * (1.172313405e-9 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * NV_Ith_S(mParameters, 4) * exp(9.9999999999999995e-8)) * (1.0 - 0.10000000000000001 * var_chaste_interface__ICaL_fCa_gate__fCaB_SL - 0.90000000000000002 * var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(9.9999999999999995e-8)) + 1.172313405e-9 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * NV_Ith_S(mParameters, 4) * exp(-9.9999999999999995e-8)) * (1.0 - 0.10000000000000001 * var_chaste_interface__ICaL_fCa_gate__fCaB_SL - 0.90000000000000002 * var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) - 1.172313405e-9 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * NV_Ith_S(mParameters, 4) * exp(-9.9999999999999995e-8)) * (1.0 - 0.10000000000000001 * var_chaste_interface__ICaL_fCa_gate__fCaB_SL - 0.90000000000000002 * var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) : (0.00043885777754150548 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * NV_Ith_S(mParameters, 4) * exp(0.037435192301797954 * var_chaste_interface__cell__V)) * (1.0 - 0.10000000000000001 * var_chaste_interface__ICaL_fCa_gate__fCaB_SL - 0.90000000000000002 * var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f * var_chaste_interface__cell__V / (-1.0 + exp(0.037435192301797954 * var_chaste_interface__cell__V)))); // microA_per_microF
        const double var_IK1__G_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 6)) * NV_Ith_S(mParameters, 13); // milliS_per_microF
        const double var_IKr__G_IKr = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 6)) * NV_Ith_S(mParameters, 14); // milliS_per_microF
        const double var_ICaL__i_CaL_Na_SL = ((fabs(var_chaste_interface__cell__V) < 2.6712831923985376e-6) ? (187175.96150898977 * (2.6712831923985376e-6 + var_chaste_interface__cell__V) * (6.5128522499999997e-12 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * (-0.75 * NV_Ith_S(mParameters, 7) + 0.75 * var_chaste_interface__Na_buffer__Na_SL * exp(9.9999999999999995e-8)) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(9.9999999999999995e-8)) + 6.5128522499999997e-12 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * (-0.75 * NV_Ith_S(mParameters, 7) + 0.75 * var_chaste_interface__Na_buffer__Na_SL * exp(-9.9999999999999995e-8)) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) - 6.5128522499999997e-12 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * (-0.75 * NV_Ith_S(mParameters, 7) + 0.75 * var_chaste_interface__Na_buffer__Na_SL * exp(-9.9999999999999995e-8)) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) : (2.4380987641194746e-6 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL) * (-0.75 * NV_Ith_S(mParameters, 7) + 0.75 * var_chaste_interface__Na_buffer__Na_SL * exp(0.037435192301797954 * var_chaste_interface__cell__V)) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f * var_chaste_interface__cell__V / (-1.0 + exp(0.037435192301797954 * var_chaste_interface__cell__V)))); // microA_per_microF
        const double var_ICaL__i_CaL_Na_jct = ((fabs(var_chaste_interface__cell__V) < 2.6712831923985376e-6) ? (187175.96150898977 * (2.6712831923985376e-6 + var_chaste_interface__cell__V) * (5.8615670249999994e-11 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * (-0.75 * NV_Ith_S(mParameters, 7) + 0.75 * var_chaste_interface__Na_buffer__Na_jct * exp(9.9999999999999995e-8)) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(9.9999999999999995e-8)) + 5.8615670249999994e-11 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * (-0.75 * NV_Ith_S(mParameters, 7) + 0.75 * var_chaste_interface__Na_buffer__Na_jct * exp(-9.9999999999999995e-8)) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) - 5.8615670249999994e-11 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * (-0.75 * NV_Ith_S(mParameters, 7) + 0.75 * var_chaste_interface__Na_buffer__Na_jct * exp(-9.9999999999999995e-8)) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f / (-1.0 + exp(-9.9999999999999995e-8))) : (2.1942888877075271e-5 * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct) * (-0.75 * NV_Ith_S(mParameters, 7) + 0.75 * var_chaste_interface__Na_buffer__Na_jct * exp(0.037435192301797954 * var_chaste_interface__cell__V)) * var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f * var_chaste_interface__cell__V / (-1.0 + exp(0.037435192301797954 * var_chaste_interface__cell__V)))); // microA_per_microF
        const double var_ICaL__i_CaL = var_ICaL__i_CaL_Ca_SL + var_ICaL__i_CaL_Ca_jct + var_ICaL__i_CaL_K + var_ICaL__i_CaL_Na_SL + var_ICaL__i_CaL_Na_jct; // microA_per_microF
        const double var_ICaL__i_CaL_converted = HeartConfig::Instance()->GetCapacitance() * var_ICaL__i_CaL; // uA_per_cm2
        const double var_model_parameters__R = 8314.2999999999993; // joule_per_kilomole_kelvin
        const double var_model_parameters__T = 310.0; // kelvin
        const double var_IKs__E_Ks = var_model_parameters__R * var_model_parameters__T * log((var_IKs__pKNa * NV_Ith_S(mParameters, 7) + NV_Ith_S(mParameters, 6)) / (var_IKs__pKNa * var_chaste_interface__Na_buffer__Nai + NV_Ith_S(mParameters, 4))) / var_model_parameters__F; // millivolt
        const double var_IKs__i_Ks_SL = pow(var_chaste_interface__IKs_Xs_gate__Xs, 2) * (-var_IKs__E_Ks + var_chaste_interface__cell__V) * var_IKs__Fx_Ks_SL * var_IKs__G_Ks_SL; // microA_per_microF
        const double var_IKs__i_Ks_jct = pow(var_chaste_interface__IKs_Xs_gate__Xs, 2) * (-var_IKs__E_Ks + var_chaste_interface__cell__V) * var_IKs__Fx_Ks_jct * var_IKs__G_Ks_jct; // microA_per_microF
        const double var_IKs__i_Ks = var_IKs__i_Ks_SL + var_IKs__i_Ks_jct; // microA_per_microF
        const double var_IKs__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_IKs__i_Ks; // uA_per_cm2
        const double var_INaCa__Q_NCX = pow(var_INaCa__Q10_NCX, (-31.0 + 0.10000000000000001 * var_model_parameters__T)); // dimensionless
        const double var_INaCa__temp_SL = (pow(var_chaste_interface__Na_buffer__Na_SL, var_INaCa__HNa) * NV_Ith_S(mParameters, 5) * exp(var_INaCa__eta * var_chaste_interface__cell__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) - pow(NV_Ith_S(mParameters, 7), var_INaCa__HNa) * var_chaste_interface__Ca_buffer__Ca_SL * exp((-1.0 + var_INaCa__eta) * var_chaste_interface__cell__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))) / (1.0 + var_INaCa__ksat * exp((-1.0 + var_INaCa__eta) * var_chaste_interface__cell__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))); // millimolar4
        const double var_INaCa__i_NaCa_SL = var_INaCa__Fx_NCX_SL * var_INaCa__Ka_SL * var_INaCa__Q_NCX * NV_Ith_S(mParameters, 17) * var_INaCa__temp_SL / (pow(var_chaste_interface__Na_buffer__Na_SL, var_INaCa__HNa) * var_INaCa__K_mCao + pow(var_chaste_interface__Na_buffer__Na_SL, var_INaCa__HNa) * NV_Ith_S(mParameters, 5) + pow(NV_Ith_S(mParameters, 7), var_INaCa__HNa) * var_chaste_interface__Ca_buffer__Ca_SL + pow(var_INaCa__K_mNao, var_INaCa__HNa) * (1.0 + var_chaste_interface__Ca_buffer__Ca_SL / var_INaCa__K_mCai) * var_chaste_interface__Ca_buffer__Ca_SL + pow(NV_Ith_S(mParameters, 7), var_INaCa__HNa) * (1.0 + pow((var_chaste_interface__Na_buffer__Na_SL / var_INaCa__K_mNai), var_INaCa__HNa)) * var_INaCa__K_mCai); // microA_per_microF
        const double var_INaCa__temp_jct = (pow(var_chaste_interface__Na_buffer__Na_jct, var_INaCa__HNa) * NV_Ith_S(mParameters, 5) * exp(var_INaCa__eta * var_chaste_interface__cell__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) - pow(NV_Ith_S(mParameters, 7), var_INaCa__HNa) * var_chaste_interface__Ca_buffer__Ca_jct * exp((-1.0 + var_INaCa__eta) * var_chaste_interface__cell__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))) / (1.0 + var_INaCa__ksat * exp((-1.0 + var_INaCa__eta) * var_chaste_interface__cell__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))); // millimolar4
        const double var_INaCa__i_NaCa_jct = var_INaCa__Fx_NCX_jct * var_INaCa__Ka_jct * var_INaCa__Q_NCX * NV_Ith_S(mParameters, 17) * var_INaCa__temp_jct / (pow(var_chaste_interface__Na_buffer__Na_jct, var_INaCa__HNa) * var_INaCa__K_mCao + pow(var_chaste_interface__Na_buffer__Na_jct, var_INaCa__HNa) * NV_Ith_S(mParameters, 5) + pow(NV_Ith_S(mParameters, 7), var_INaCa__HNa) * var_chaste_interface__Ca_buffer__Ca_jct + pow(var_INaCa__K_mNao, var_INaCa__HNa) * (1.0 + var_chaste_interface__Ca_buffer__Ca_jct / var_INaCa__K_mCai) * var_chaste_interface__Ca_buffer__Ca_jct + pow(NV_Ith_S(mParameters, 7), var_INaCa__HNa) * (1.0 + pow((var_chaste_interface__Na_buffer__Na_jct / var_INaCa__K_mNai), var_INaCa__HNa)) * var_INaCa__K_mCai); // microA_per_microF
        const double var_INaCa__i_NaCa = var_INaCa__i_NaCa_SL + var_INaCa__i_NaCa_jct; // microA_per_microF
        const double var_INaCa__i_NaCa_converted = HeartConfig::Instance()->GetCapacitance() * var_INaCa__i_NaCa; // uA_per_cm2
        const double var_reversal_potentials__E_K = var_model_parameters__R * var_model_parameters__T * log(NV_Ith_S(mParameters, 6) / NV_Ith_S(mParameters, 4)) / var_model_parameters__F; // millivolt
        const double var_IK1_K1_gate__alpha_K1 = 1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__cell__V - 0.23849999999999999 * var_reversal_potentials__E_K)); // per_millisecond
        const double var_IK1_K1_gate__beta_K1 = (exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__cell__V - 0.061749999999999999 * var_reversal_potentials__E_K) + 0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__cell__V - 0.080320000000000003 * var_reversal_potentials__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_reversal_potentials__E_K - 0.51429999999999998 * var_chaste_interface__cell__V)); // per_millisecond
        const double var_IK1_K1_gate__K1_infinity = var_IK1_K1_gate__alpha_K1 / (var_IK1_K1_gate__alpha_K1 + var_IK1_K1_gate__beta_K1); // dimensionless
        const double var_IK1__i_K1 = (-var_reversal_potentials__E_K + var_chaste_interface__cell__V) * var_IK1__G_K1 * var_IK1_K1_gate__K1_infinity; // microA_per_microF
        const double var_IK1__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_IK1__i_K1; // uA_per_cm2
        const double var_IKr__i_Kr = (-var_reversal_potentials__E_K + var_chaste_interface__cell__V) * var_IKr__G_IKr * var_IKr_Rr_gate__Rr * var_chaste_interface__IKr_Xr_gate__Xr; // microA_per_microF
        const double var_IKr__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_IKr__i_Kr; // uA_per_cm2
        const double var_Itof__i_tof = (-var_reversal_potentials__E_K + var_chaste_interface__cell__V) * NV_Ith_S(mParameters, 12) * var_chaste_interface__Itof_X_gate__X_tof * var_chaste_interface__Itof_Y_gate__Y_tof; // microA_per_microF
        const double var_Itof__i_tof_converted = HeartConfig::Instance()->GetCapacitance() * var_Itof__i_tof; // uA_per_cm2
        const double var_Itos__i_tos = (-var_reversal_potentials__E_K + var_chaste_interface__cell__V) * (0.5 * var_chaste_interface__Itos_R_gate__R_tos + var_chaste_interface__Itos_Y_gate__Y_tos) * NV_Ith_S(mParameters, 16) * var_chaste_interface__Itos_X_gate__X_tos; // microA_per_microF
        const double var_Itos__i_tos_converted = HeartConfig::Instance()->GetCapacitance() * var_Itos__i_tos; // uA_per_cm2
        const double var_reversal_potentials__E_Na_SL = var_model_parameters__R * var_model_parameters__T * log(NV_Ith_S(mParameters, 7) / var_chaste_interface__Na_buffer__Na_SL) / var_model_parameters__F; // millivolt
        const double var_INa__i_Na_SL = (-var_reversal_potentials__E_Na_SL + var_chaste_interface__cell__V) * var_INa__Fx_Na_SL * NV_Ith_S(mParameters, 9) * var_INa__openProb; // microA_per_microF
        const double var_reversal_potentials__E_Na_jct = var_model_parameters__R * var_model_parameters__T * log(NV_Ith_S(mParameters, 7) / var_chaste_interface__Na_buffer__Na_jct) / var_model_parameters__F; // millivolt
        const double var_INa__i_Na_jct = (-var_reversal_potentials__E_Na_jct + var_chaste_interface__cell__V) * var_INa__Fx_Na_jct * NV_Ith_S(mParameters, 9) * var_INa__openProb; // microA_per_microF
        const double var_INa__i_Na = var_INa__i_Na_SL + var_INa__i_Na_jct; // microA_per_microF
        const double var_INa__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_INa__i_Na; // uA_per_cm2

        N_Vector dqs = N_VNew_Serial(15);
        NV_Ith_S(dqs, 0) = var_Jrel_SR__j_rel_SR;
        NV_Ith_S(dqs, 1) = var_ICaL__i_CaL_converted;
        NV_Ith_S(dqs, 2) = var_ICaL_fCa_gate__fCa_SL;
        NV_Ith_S(dqs, 3) = var_ICaL_f_gate__tau_f;
        NV_Ith_S(dqs, 4) = var_INa__i_Na_converted;
        NV_Ith_S(dqs, 5) = var_INa_h_gate__tau_h;
        NV_Ith_S(dqs, 6) = var_INa_j_gate__tau_j;
        NV_Ith_S(dqs, 7) = var_Itof__i_tof_converted;
        NV_Ith_S(dqs, 8) = var_IK1__i_K1_converted;
        NV_Ith_S(dqs, 9) = var_IKr__i_Kr_converted;
        NV_Ith_S(dqs, 10) = var_IKs__i_Ks_converted;
        NV_Ith_S(dqs, 11) = var_Itos__i_tos_converted;
        NV_Ith_S(dqs, 12) = var_INaCa__i_NaCa_converted;
        NV_Ith_S(dqs, 13) = var_cell__i_Stim_converted;
        NV_Ith_S(dqs, 14) = var_chaste_interface__environment__time;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellshannon_wang_puglisi_weber_bers_2004FromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "shannon_wang_puglisi_weber_bers_2004_model_updated";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-85.721630473733);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.6504944644883e-05);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.98714602875678);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.991826348770428);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0013702407736465);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("IKr_Xr_gate__Xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00846906175020028);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("IKs_Xs_gate__Xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00613557812033723);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("Itos_X_gate__X_tos");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00401072468238921);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("Itos_Y_gate__Y_tos");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.31555225368514);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("Itos_R_gate__R_tos");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.402577243036347);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("Itof_X_gate__X_tof");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00401068798369438);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("Itof_Y_gate__Y_tof");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.994632857675454);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(6.99526086177479e-06);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.00067601563206);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("ICaL_fCa_gate__fCaB_SL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0150193299768419);

    // NV_Ith_S(rY, 15):
    this->mVariableNames.push_back("ICaL_fCa_gate__fCaB_jct");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0244048782575591);

    // NV_Ith_S(rY, 16):
    this->mVariableNames.push_back("Jrel_SR__R");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.890917121306535);

    // NV_Ith_S(rY, 17):
    this->mVariableNames.push_back("Jrel_SR__I");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.71752603681652e-08);

    // NV_Ith_S(rY, 18):
    this->mVariableNames.push_back("Jrel_SR__O");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(7.1199533741995e-07);

    // NV_Ith_S(rY, 19):
    this->mVariableNames.push_back("Na_buffer__Na_SL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.87161932058707);

    // NV_Ith_S(rY, 20):
    this->mVariableNames.push_back("Na_buffer__Na_jct");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.87031835089116);

    // NV_Ith_S(rY, 21):
    this->mVariableNames.push_back("Na_buffer__Na_SL_buf");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.77606800956492);

    // NV_Ith_S(rY, 22):
    this->mVariableNames.push_back("Na_buffer__Na_jct_buf");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(3.55668431730337);

    // NV_Ith_S(rY, 23):
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.87200572571131);

    // NV_Ith_S(rY, 24):
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.547125831028543);

    // NV_Ith_S(rY, 25):
    this->mVariableNames.push_back("Ca_buffer__Ca_SL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000104971310105451);

    // NV_Ith_S(rY, 26):
    this->mVariableNames.push_back("Ca_buffer__Ca_jct");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000174045152623969);

    // NV_Ith_S(rY, 27):
    this->mVariableNames.push_back("Ca_buffer__Ca_SLB_SL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.00973710481246467);

    // NV_Ith_S(rY, 28):
    this->mVariableNames.push_back("Ca_buffer__Ca_SLB_jct");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.00774564218017916);

    // NV_Ith_S(rY, 29):
    this->mVariableNames.push_back("Ca_buffer__Ca_SLHigh_SL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.113168405274355);

    // NV_Ith_S(rY, 30):
    this->mVariableNames.push_back("Ca_buffer__Ca_SLHigh_jct");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0772568134367606);

    // NV_Ith_S(rY, 31):
    this->mVariableNames.push_back("Ca_buffer__Ca_Calsequestrin");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.18828527890062);

    // NV_Ith_S(rY, 32):
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_TroponinC");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.00886665040283094);

    // NV_Ith_S(rY, 33):
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.117873278193472);

    // NV_Ith_S(rY, 34):
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0103906683506505);

    // NV_Ith_S(rY, 35):
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_Calmodulin");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000293073957804278);

    // NV_Ith_S(rY, 36):
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_Myosin");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.00195899238146509);

    // NV_Ith_S(rY, 37):
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Mg_Myosin");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.137523520981802);

    // NV_Ith_S(rY, 38):
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_SRB");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.00215728901718264);

    // NV_Ith_S(rY, 39):
    this->mVariableNames.push_back("indo_fluo_Ca_buffer_not_connected__Ca_Indo1_Cytosol");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 40):
    this->mVariableNames.push_back("indo_fluo_Ca_buffer_not_connected__Ca_Indo1_SL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 41):
    this->mVariableNames.push_back("indo_fluo_Ca_buffer_not_connected__Ca_Indo1_jct");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 42):
    this->mVariableNames.push_back("indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_Cytosol");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 43):
    this->mVariableNames.push_back("indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_SL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 44):
    this->mVariableNames.push_back("indo_fluo_Ca_buffer_not_connected__Ca_Fluo3_jct");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_leak_current_max");
    this->mParameterUnits.push_back("per_millisecond");

    // mParameters[1]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("per_millisecond");

    // mParameters[2]:
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("millimolar_per_millisecond");

    // mParameters[3]:
    this->mParameterNames.push_back("concentration_clamp_onoff");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[4]:
    this->mParameterNames.push_back("cytosolic_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[5]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[6]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[7]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("litre_per_farad_millisecond");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_reduced_inactivation");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_shift_inactivation");
    this->mParameterUnits.push_back("millivolt");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_fast_transient_outward_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[13]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[14]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[15]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[16]:
    this->mParameterNames.push_back("membrane_slow_transient_outward_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[17]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("microA_per_microF");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_millisecond");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_fCa_gate");
    this->mDerivedQuantityUnits.push_back("dimensionless");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_f_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_h_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_j_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_fast_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [11]:
    this->mDerivedQuantityNames.push_back("membrane_slow_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [12]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [13]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [14]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellshannon_wang_puglisi_weber_bers_2004FromCellMLCvode)

#endif // CHASTE_CVODE
