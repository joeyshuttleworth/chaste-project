#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version 0.6.3
//!
//! Model: luo_rudy_1991
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: AnalyticCvode)
//! on 2021-03-29 17:21:03
//!
//! <autogenerated>

#include "luo_rudy_1991Cvode.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"



    boost::shared_ptr<RegularStimulus> Cellluo_rudy_1991FromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__stim_amplitude = -25.5; // microA_per_cm2
        const double var_chaste_interface__membrane__stim_duration = 2.0; // millisecond
        const double var_chaste_interface__membrane__stim_end = 100000000000.0; // millisecond
        const double var_chaste_interface__membrane__stim_period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__stim_start = 100.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude),
                var_chaste_interface__membrane__stim_duration,
                var_chaste_interface__membrane__stim_period,
                var_chaste_interface__membrane__stim_start, var_chaste_interface__membrane__stim_end
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }

    double Cellluo_rudy_1991FromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Cellluo_rudy_1991FromCellMLCvode::Cellluo_rudy_1991FromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                8,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellluo_rudy_1991FromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 145.0; // (var_ionic_concentrations__Ki) [millimolar]
        NV_Ith_S(this->mParameters, 1) = 18.0; // (var_ionic_concentrations__Nai) [millimolar]
        NV_Ith_S(this->mParameters, 2) = 5.4000000000000004; // (var_ionic_concentrations__Ko) [millimolar]
        NV_Ith_S(this->mParameters, 3) = 140.0; // (var_ionic_concentrations__Nao) [millimolar]
        NV_Ith_S(this->mParameters, 4) = 0.089999999999999997; // (var_slow_inward_current__P_si) [milliS_per_cm2]
        NV_Ith_S(this->mParameters, 5) = 1.0; // (var_membrane__C) [microF_per_cm2]
        NV_Ith_S(this->mParameters, 6) = 0.28199999999999997; // (var_time_dependent_potassium_current__g_K_max) [milliS_per_cm2]
        NV_Ith_S(this->mParameters, 7) = 23.0; // (var_fast_sodium_current__g_Na) [milliS_per_cm2]
        NV_Ith_S(this->mParameters, 8) = 0; // (var_fast_sodium_current__perc_reduced_inact_for_IpNa) [dimensionless]
        NV_Ith_S(this->mParameters, 9) = 0; // (var_fast_sodium_current__shift_INa_inact) [millivolt]
        NV_Ith_S(this->mParameters, 10) = 0.60470000000000002; // (var_time_independent_potassium_current__g_K1_max) [milliS_per_cm2]
        NV_Ith_S(this->mParameters, 11) = 0.039210000000000002; // (var_background_current__g_b) [milliS_per_cm2]
        NV_Ith_S(this->mParameters, 12) = 0.0183; // (var_plateau_potassium_current__g_Kp) [milliS_per_cm2]
    }

    Cellluo_rudy_1991FromCellMLCvode::~Cellluo_rudy_1991FromCellMLCvode()
    {
    }

    
    double Cellluo_rudy_1991FromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -83.853
        double var_chaste_interface__intracellular_calcium_concentration__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0002
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00187018
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9804713
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.98767124
        double var_chaste_interface__slow_inward_current_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.00316354
        double var_chaste_interface__slow_inward_current_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.99427859
        double var_chaste_interface__time_dependent_potassium_current_X_gate__X = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.16647703
        
        const double var_background_current__E_b = -59.869999999999997; // millivolt
        const double var_membrane__F = 96484.600000000006; // coulomb_per_mole
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 3) / NV_Ith_S(mParameters, 1)) / var_membrane__F; // millivolt
        const double var_background_current__i_b = (-var_background_current__E_b + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 11); // microA_per_cm2
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // microA_per_cm2
        const double var_plateau_potassium_current__Kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_slow_inward_current__E_si = 7.7000000000000002 - 13.028700000000001 * log(var_chaste_interface__intracellular_calcium_concentration__Cai); // millivolt
        const double var_slow_inward_current__i_si = (-var_slow_inward_current__E_si + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 4) * var_chaste_interface__slow_inward_current_d_gate__d * var_chaste_interface__slow_inward_current_f_gate__f; // microA_per_cm2
        const double var_time_dependent_potassium_current__PR_NaK = 0.018329999999999999; // dimensionless
        const double var_time_dependent_potassium_current__E_K = var_membrane__R * var_membrane__T * log((NV_Ith_S(mParameters, 3) * var_time_dependent_potassium_current__PR_NaK + NV_Ith_S(mParameters, 2)) / (NV_Ith_S(mParameters, 1) * var_time_dependent_potassium_current__PR_NaK + NV_Ith_S(mParameters, 0))) / var_membrane__F; // millivolt
        const double var_time_dependent_potassium_current__g_K = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 2)) * NV_Ith_S(mParameters, 6); // milliS_per_cm2
        const double var_time_dependent_potassium_current_Xi_gate__B = 0.040000000000000001; // per_millivolt
        const double var_time_dependent_potassium_current_Xi_gate__A = 2.8370000000000002 * var_time_dependent_potassium_current_Xi_gate__B; // dimensionless
        const double var_time_dependent_potassium_current_Xi_gate__v0 = -77.0; // millivolt
        const double var_time_dependent_potassium_current_Xi_gate__U = (-var_time_dependent_potassium_current_Xi_gate__v0 + var_chaste_interface__membrane__V) * var_time_dependent_potassium_current_Xi_gate__B; // dimensionless
        const double var_time_dependent_potassium_current_Xi_gate__temp_Xi = (((var_time_dependent_potassium_current_Xi_gate__U >= -9.9999999999999995e-8) && (var_time_dependent_potassium_current_Xi_gate__U <= 9.9999999999999995e-8)) ? ((1.0 + 0.5 * var_time_dependent_potassium_current_Xi_gate__U) * var_time_dependent_potassium_current_Xi_gate__A) : ((-1.0 + exp(var_time_dependent_potassium_current_Xi_gate__U)) * var_time_dependent_potassium_current_Xi_gate__A / var_time_dependent_potassium_current_Xi_gate__U)); // dimensionless
        const double var_time_dependent_potassium_current_Xi_gate__Xi = ((var_chaste_interface__membrane__V > -100.0) ? (var_time_dependent_potassium_current_Xi_gate__temp_Xi / exp(1.4000000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V)) : (1.0)); // dimensionless
        const double var_time_dependent_potassium_current__i_K = (-var_time_dependent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_dependent_potassium_current__g_K * var_chaste_interface__time_dependent_potassium_current_X_gate__X * var_time_dependent_potassium_current_Xi_gate__Xi; // microA_per_cm2
        const double var_time_independent_potassium_current__E_K1 = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 2) / NV_Ith_S(mParameters, 0)) / var_membrane__F; // millivolt
        const double var_plateau_potassium_current__E_Kp = var_time_independent_potassium_current__E_K1; // millivolt
        const double var_plateau_potassium_current__i_Kp = (-var_plateau_potassium_current__E_Kp + var_chaste_interface__membrane__V) * var_plateau_potassium_current__Kp * NV_Ith_S(mParameters, 12); // microA_per_cm2
        const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 2)) * NV_Ith_S(mParameters, 10); // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K1)); // per_millisecond
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = (exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K1) + 0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K1)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K1 - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K1 + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_cm2
        const double var_chaste_interface__i_ionic = var_background_current__i_b + var_fast_sodium_current__i_Na + var_plateau_potassium_current__i_Kp + var_slow_inward_current__i_si + var_time_dependent_potassium_current__i_K + var_time_independent_potassium_current__i_K1; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellluo_rudy_1991FromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -83.853
        double var_chaste_interface__intracellular_calcium_concentration__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0002
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00187018
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9804713
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.98767124
        double var_chaste_interface__slow_inward_current_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.00316354
        double var_chaste_interface__slow_inward_current_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.99427859
        double var_chaste_interface__time_dependent_potassium_current_X_gate__X = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.16647703

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double var_fast_sodium_current_m_gate__B = -0.10000000000000001; // per_millivolt
        const double var_fast_sodium_current_m_gate__A = -0.32000000000000001 / var_fast_sodium_current_m_gate__B; // per_millisecond
        const double var_fast_sodium_current_m_gate__v0 = -47.130000000000003; // millivolt
        const double var_fast_sodium_current_h_gate__alpha_h = ((var_chaste_interface__membrane__V < -40.0) ? (0.13500000000000001 * exp(-11.764705882352942 + 0.14705882352941177 * NV_Ith_S(mParameters, 9) - 0.14705882352941177 * var_chaste_interface__membrane__V)) : (0)); // per_millisecond
        const double var_fast_sodium_current_h_gate__beta_h = ((var_chaste_interface__membrane__V < -40.0) ? (310000.0 * exp(0.34999999999999998 * var_chaste_interface__membrane__V - 0.34999999999999998 * NV_Ith_S(mParameters, 9)) + 3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__membrane__V - 0.079000000000000001 * NV_Ith_S(mParameters, 9))) : (7.6923076923076916 / (1.0 + exp(-0.96036036036036043 + 0.0900900900900901 * NV_Ith_S(mParameters, 9) - 0.0900900900900901 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_fast_sodium_current_h_gate__h_inf = 0.01 * NV_Ith_S(mParameters, 8) + (1.0 - 0.01 * NV_Ith_S(mParameters, 8)) * var_fast_sodium_current_h_gate__alpha_h / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h); // dimensionless
        const double var_fast_sodium_current_h_gate__tau_h = 1 / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h); // millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_h_gate__h = (-var_chaste_interface__fast_sodium_current_h_gate__h + var_fast_sodium_current_h_gate__h_inf) / var_fast_sodium_current_h_gate__tau_h; // 1 / millisecond
        const double var_fast_sodium_current_j_gate__alpha_j = ((var_chaste_interface__membrane__V < -40.0) ? ((37.780000000000001 + var_chaste_interface__membrane__V) * (-127140.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V - 0.24440000000000001 * NV_Ith_S(mParameters, 9)) - 3.4740000000000003e-5 * exp(0.043909999999999998 * NV_Ith_S(mParameters, 9) - 0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V - 0.311 * NV_Ith_S(mParameters, 9)))) : (0)); // per_millisecond
        const double var_fast_sodium_current_j_gate__beta_j = ((var_chaste_interface__membrane__V < -40.0) ? (0.1212 * exp(0.01052 * NV_Ith_S(mParameters, 9) - 0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 + 0.13780000000000001 * NV_Ith_S(mParameters, 9) - 0.13780000000000001 * var_chaste_interface__membrane__V))) : (0.29999999999999999 * exp(2.5349999999999999e-7 * NV_Ith_S(mParameters, 9) - 2.5349999999999999e-7 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 + 0.10000000000000001 * NV_Ith_S(mParameters, 9) - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_fast_sodium_current_j_gate__j_inf = 0.01 * NV_Ith_S(mParameters, 8) + (1.0 - 0.01 * NV_Ith_S(mParameters, 8)) * var_fast_sodium_current_j_gate__alpha_j / (var_fast_sodium_current_j_gate__alpha_j + var_fast_sodium_current_j_gate__beta_j); // dimensionless
        const double var_fast_sodium_current_j_gate__tau_j = 1 / (var_fast_sodium_current_j_gate__alpha_j + var_fast_sodium_current_j_gate__beta_j); // millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_j_gate__j = (-var_chaste_interface__fast_sodium_current_j_gate__j + var_fast_sodium_current_j_gate__j_inf) / var_fast_sodium_current_j_gate__tau_j; // 1 / millisecond
        const double var_fast_sodium_current_m_gate__U = (-var_fast_sodium_current_m_gate__v0 + var_chaste_interface__membrane__V) * var_fast_sodium_current_m_gate__B; // dimensionless
        const double var_fast_sodium_current_m_gate__alpha_m = (((var_fast_sodium_current_m_gate__U >= -9.9999999999999995e-8) && (var_fast_sodium_current_m_gate__U <= 9.9999999999999995e-8)) ? ((1.0 - 0.5 * var_fast_sodium_current_m_gate__U) * var_fast_sodium_current_m_gate__A) : (var_fast_sodium_current_m_gate__A * var_fast_sodium_current_m_gate__U / (-1.0 + exp(var_fast_sodium_current_m_gate__U)))); // per_millisecond
        const double var_fast_sodium_current_m_gate__beta_m = 0.080000000000000002 * exp(-0.090909090909090912 * var_chaste_interface__membrane__V); // per_millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_m_gate__m = (1.0 - var_chaste_interface__fast_sodium_current_m_gate__m) * var_fast_sodium_current_m_gate__alpha_m - var_fast_sodium_current_m_gate__beta_m * var_chaste_interface__fast_sodium_current_m_gate__m; // 1 / millisecond
        const double var_slow_inward_current__E_si = 7.7000000000000002 - 13.028700000000001 * log(var_chaste_interface__intracellular_calcium_concentration__Cai); // millivolt
        const double var_slow_inward_current_d_gate__alpha_d = 0.095000000000000001 * exp(0.050000000000000003 - 0.01 * var_chaste_interface__membrane__V) / (1.0 + exp(0.35999999999999999 - 0.071999999999999995 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_slow_inward_current_d_gate__beta_d = 0.070000000000000007 * exp(-0.748 - 0.017000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(2.2000000000000002 + 0.050000000000000003 * var_chaste_interface__membrane__V)); // per_millisecond
        const double d_dt_chaste_interface_var_slow_inward_current_d_gate__d = (1.0 - var_chaste_interface__slow_inward_current_d_gate__d) * var_slow_inward_current_d_gate__alpha_d - var_slow_inward_current_d_gate__beta_d * var_chaste_interface__slow_inward_current_d_gate__d; // 1 / millisecond
        const double var_slow_inward_current_f_gate__alpha_f = 0.012 * exp(-0.224 - 0.0080000000000000002 * var_chaste_interface__membrane__V) / (1.0 + exp(4.2000000000000002 + 0.14999999999999999 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_slow_inward_current_f_gate__beta_f = 0.0064999999999999997 * exp(-0.59999999999999998 - 0.02 * var_chaste_interface__membrane__V) / (1.0 + exp(-6.0 - 0.20000000000000001 * var_chaste_interface__membrane__V)); // per_millisecond
        const double d_dt_chaste_interface_var_slow_inward_current_f_gate__f = (1.0 - var_chaste_interface__slow_inward_current_f_gate__f) * var_slow_inward_current_f_gate__alpha_f - var_slow_inward_current_f_gate__beta_f * var_chaste_interface__slow_inward_current_f_gate__f; // 1 / millisecond
        const double var_slow_inward_current__i_si = (-var_slow_inward_current__E_si + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 4) * var_chaste_interface__slow_inward_current_d_gate__d * var_chaste_interface__slow_inward_current_f_gate__f; // microA_per_cm2
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Cai = 7.0000000000000007e-6 - 0.070000000000000007 * var_chaste_interface__intracellular_calcium_concentration__Cai - 0.0001 * var_slow_inward_current__i_si; // millimolar / millisecond
        const double var_time_dependent_potassium_current_X_gate__alpha_X = 0.00050000000000000001 * exp(4.1500000000000004 + 0.083000000000000004 * var_chaste_interface__membrane__V) / (1.0 + exp(2.8500000000000001 + 0.057000000000000002 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_time_dependent_potassium_current_X_gate__beta_X = 0.0012999999999999999 * exp(-1.2 - 0.059999999999999998 * var_chaste_interface__membrane__V) / (1.0 + exp(-0.80000000000000004 - 0.040000000000000001 * var_chaste_interface__membrane__V)); // per_millisecond
        const double d_dt_chaste_interface_var_time_dependent_potassium_current_X_gate__X = (1.0 - var_chaste_interface__time_dependent_potassium_current_X_gate__X) * var_time_dependent_potassium_current_X_gate__alpha_X - var_chaste_interface__time_dependent_potassium_current_X_gate__X * var_time_dependent_potassium_current_X_gate__beta_X; // 1 / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__V = 0.0;
        }
        else
        {
            const double var_background_current__E_b = -59.869999999999997; // millivolt
            const double var_membrane__F = 96484.600000000006; // coulomb_per_mole
            const double var_membrane__I_stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // microA_per_cm2
            const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
            const double var_membrane__T = 310.0; // kelvin
            const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 3) / NV_Ith_S(mParameters, 1)) / var_membrane__F; // millivolt
            const double var_background_current__i_b = (-var_background_current__E_b + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 11); // microA_per_cm2
            const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // microA_per_cm2
            const double var_plateau_potassium_current__Kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // dimensionless
            const double var_time_dependent_potassium_current__PR_NaK = 0.018329999999999999; // dimensionless
            const double var_time_dependent_potassium_current__E_K = var_membrane__R * var_membrane__T * log((NV_Ith_S(mParameters, 3) * var_time_dependent_potassium_current__PR_NaK + NV_Ith_S(mParameters, 2)) / (NV_Ith_S(mParameters, 1) * var_time_dependent_potassium_current__PR_NaK + NV_Ith_S(mParameters, 0))) / var_membrane__F; // millivolt
            const double var_time_dependent_potassium_current__g_K = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 2)) * NV_Ith_S(mParameters, 6); // milliS_per_cm2
            const double var_time_dependent_potassium_current_Xi_gate__B = 0.040000000000000001; // per_millivolt
            const double var_time_dependent_potassium_current_Xi_gate__A = 2.8370000000000002 * var_time_dependent_potassium_current_Xi_gate__B; // dimensionless
            const double var_time_dependent_potassium_current_Xi_gate__v0 = -77.0; // millivolt
            const double var_time_dependent_potassium_current_Xi_gate__U = (-var_time_dependent_potassium_current_Xi_gate__v0 + var_chaste_interface__membrane__V) * var_time_dependent_potassium_current_Xi_gate__B; // dimensionless
            const double var_time_dependent_potassium_current_Xi_gate__temp_Xi = (((var_time_dependent_potassium_current_Xi_gate__U >= -9.9999999999999995e-8) && (var_time_dependent_potassium_current_Xi_gate__U <= 9.9999999999999995e-8)) ? ((1.0 + 0.5 * var_time_dependent_potassium_current_Xi_gate__U) * var_time_dependent_potassium_current_Xi_gate__A) : ((-1.0 + exp(var_time_dependent_potassium_current_Xi_gate__U)) * var_time_dependent_potassium_current_Xi_gate__A / var_time_dependent_potassium_current_Xi_gate__U)); // dimensionless
            const double var_time_dependent_potassium_current_Xi_gate__Xi = ((var_chaste_interface__membrane__V > -100.0) ? (var_time_dependent_potassium_current_Xi_gate__temp_Xi / exp(1.4000000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V)) : (1.0)); // dimensionless
            const double var_time_dependent_potassium_current__i_K = (-var_time_dependent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_dependent_potassium_current__g_K * var_chaste_interface__time_dependent_potassium_current_X_gate__X * var_time_dependent_potassium_current_Xi_gate__Xi; // microA_per_cm2
            const double var_time_independent_potassium_current__E_K1 = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 2) / NV_Ith_S(mParameters, 0)) / var_membrane__F; // millivolt
            const double var_plateau_potassium_current__E_Kp = var_time_independent_potassium_current__E_K1; // millivolt
            const double var_plateau_potassium_current__i_Kp = (-var_plateau_potassium_current__E_Kp + var_chaste_interface__membrane__V) * var_plateau_potassium_current__Kp * NV_Ith_S(mParameters, 12); // microA_per_cm2
            const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 2)) * NV_Ith_S(mParameters, 10); // milliS_per_cm2
            const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K1)); // per_millisecond
            const double var_time_independent_potassium_current_K1_gate__beta_K1 = (exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K1) + 0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K1)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K1 - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_millisecond
            const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
            const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K1 + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_cm2
            d_dt_chaste_interface_var_membrane__V = -(var_background_current__i_b + var_fast_sodium_current__i_Na + var_membrane__I_stim + var_plateau_potassium_current__i_Kp + var_slow_inward_current__i_si + var_time_dependent_potassium_current__i_K + var_time_independent_potassium_current__i_K1) / NV_Ith_S(mParameters, 5); // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_membrane__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_intracellular_calcium_concentration__Cai;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_fast_sodium_current_m_gate__m;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_fast_sodium_current_h_gate__h;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_fast_sodium_current_j_gate__j;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_slow_inward_current_d_gate__d;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_slow_inward_current_f_gate__f;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_time_dependent_potassium_current_X_gate__X;
    }

    void Cellluo_rudy_1991FromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -83.853
        double var_chaste_interface__intracellular_calcium_concentration__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0002
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00187018
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9804713
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.98767124
        double var_chaste_interface__slow_inward_current_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.00316354
        double var_chaste_interface__slow_inward_current_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.99427859
        double var_chaste_interface__time_dependent_potassium_current_X_gate__X = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.16647703
        const double var_x0 = exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V);
        const double var_x1 = 1.0 + var_x0;
        const double var_x2 = NV_Ith_S(mParameters, 4) * var_chaste_interface__slow_inward_current_f_gate__f;
        const double var_x3 = var_x2 * var_chaste_interface__slow_inward_current_d_gate__d;
        const double var_x4 = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3);
        const double var_x5 = var_x4 * NV_Ith_S(mParameters, 7) * var_chaste_interface__fast_sodium_current_j_gate__j;
        const double var_x6 = 0.040000000000000001 * var_chaste_interface__membrane__V;
        const double var_x7 = 1 / exp(1.4000000000000001 + var_x6);
        const double var_x8 = var_x7 * (0.28823920000000003 + 0.0022696000000000001 * var_chaste_interface__membrane__V);
        const double var_x9 = (var_chaste_interface__membrane__V >= -77.000002499999994) && (var_chaste_interface__membrane__V <= -76.999997500000006);
        const double var_x10 = 3.0800000000000001 + var_x6;
        const double var_x11 = exp(var_x10);
        const double var_x12 = -1.0 + var_x11;
        const double var_x13 = var_x7 / var_x10;
        const double var_x14 = var_x12 * var_x13;
        const double var_x15 = var_chaste_interface__membrane__V > -100.0;
        const double var_x16 = ((var_x9) ? (var_x8) : ((var_x15) ? (0.11348000000000001 * var_x14) : (1.0)));
        const double var_x17 = sqrt(NV_Ith_S(mParameters, 2));
        const double var_x18 = 0.43033148291193518 * var_x17 * NV_Ith_S(mParameters, 6) * var_chaste_interface__time_dependent_potassium_current_X_gate__X;
        const double var_x19 = log(NV_Ith_S(mParameters, 2) / NV_Ith_S(mParameters, 0));
        const double var_x20 = -26.712449447891164 * var_x19 + var_chaste_interface__membrane__V;
        const double var_x21 = exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 6.3709191933220426 * var_x19);
        const double var_x22 = 1.0 + var_x21;
        const double var_x23 = 1 / var_x22;
        const double var_x24 = exp(-2.4444678999999998 + 13.738212751050426 * var_x19 - 0.51429999999999998 * var_chaste_interface__membrane__V);
        const double var_x25 = 1.0 + var_x24;
        const double var_x26 = 1 / var_x25;
        const double var_x27 = exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 1.6494937534072793 * var_x19);
        const double var_x28 = exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 2.1455439396546185 * var_x19);
        const double var_x29 = var_x27 + 0.49124000000000001 * var_x28;
        const double var_x30 = var_x26 * var_x29;
        const double var_x31 = 1 / (var_x30 + 1.02 * var_x23);
        const double var_x32 = var_x17 * var_x23 * NV_Ith_S(mParameters, 10);
        const double var_x33 = -26.712449447891164 * log((0.018329999999999999 * NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 2)) / (0.018329999999999999 * NV_Ith_S(mParameters, 1) + NV_Ith_S(mParameters, 0))) + var_chaste_interface__membrane__V;
        const double var_x34 = var_x21 / pow(var_x22, 2);
        const double var_x35 = 1 / NV_Ith_S(mParameters, 5);
        const double var_x36 = var_x35;
        const double var_x37 = var_x3 / var_chaste_interface__intracellular_calcium_concentration__Cai;
        const double var_x38 = -26.712449447891164 * log(NV_Ith_S(mParameters, 3) / NV_Ith_S(mParameters, 1)) + var_chaste_interface__membrane__V;
        const double var_x39 = NV_Ith_S(mParameters, 7) * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x40 = var_x36 * var_x38;
        const double var_x41 = log(var_chaste_interface__intracellular_calcium_concentration__Cai);
        const double var_x42 = var_x36 * (-7.7000000000000002 + 13.028700000000001 * var_x41 + var_chaste_interface__membrane__V);
        const double var_x43 = NV_Ith_S(mParameters, 4) * var_chaste_interface__slow_inward_current_d_gate__d;
        const double var_x44 = 0.00077000000000000007 - 0.0001 * var_chaste_interface__membrane__V - 0.00130287 * var_x41;
        const double var_x45 = (var_chaste_interface__membrane__V >= -47.130001) && (var_chaste_interface__membrane__V <= -47.129999000000005);
        const double var_x46 = -0.10000000000000001 * var_chaste_interface__membrane__V;
        const double var_x47 = -4.7130000000000001 + var_x46;
        const double var_x48 = exp(var_x47);
        const double var_x49 = -1.0 + var_x48;
        const double var_x50 = 1 / var_x49;
        const double var_x51 = exp(-0.090909090909090912 * var_chaste_interface__membrane__V);
        const double var_x52 = exp(-11.764705882352942 + 0.14705882352941177 * NV_Ith_S(mParameters, 9) - 0.14705882352941177 * var_chaste_interface__membrane__V);
        const double var_x53 = var_chaste_interface__membrane__V < -40.0;
        const double var_x54 = ((var_x53) ? (0.13500000000000001 * var_x52) : (0));
        const double var_x55 = var_x54;
        const double var_x56 = exp(0.34999999999999998 * var_chaste_interface__membrane__V - 0.34999999999999998 * NV_Ith_S(mParameters, 9));
        const double var_x57 = exp(0.079000000000000001 * var_chaste_interface__membrane__V - 0.079000000000000001 * NV_Ith_S(mParameters, 9));
        const double var_x58 = exp(-0.96036036036036043 + 0.0900900900900901 * NV_Ith_S(mParameters, 9) - 0.0900900900900901 * var_chaste_interface__membrane__V);
        const double var_x59 = 1.0 + var_x58;
        const double var_x60 = ((var_x53) ? (310000.0 * var_x56 + 3.5600000000000001 * var_x57) : (7.6923076923076916 / var_x59));
        const double var_x61 = var_x60;
        const double var_x62 = ((var_x53) ? (-0.019852941176470591 * var_x52) : (0));
        const double var_x63 = var_x54 + var_x60;
        const double var_x64 = 0.01 * NV_Ith_S(mParameters, 8);
        const double var_x65 = 1.0 - var_x64;
        const double var_x66 = var_x65 / var_x63;
        const double var_x67 = ((var_x53) ? (0.28123999999999999 * var_x57 + 108500.0 * var_x56) : (0.693000693000693 * var_x58 / pow(var_x59, 2)));
        const double var_x68 = exp(-5.5312920000000005 + 0.13780000000000001 * NV_Ith_S(mParameters, 9) - 0.13780000000000001 * var_chaste_interface__membrane__V);
        const double var_x69 = 1.0 + var_x68;
        const double var_x70 = exp(0.01052 * NV_Ith_S(mParameters, 9) - 0.01052 * var_chaste_interface__membrane__V);
        const double var_x71 = var_x70 / var_x69;
        const double var_x72 = exp(-3.2000000000000002 + var_x46 + 0.10000000000000001 * NV_Ith_S(mParameters, 9));
        const double var_x73 = 1.0 + var_x72;
        const double var_x74 = exp(2.5349999999999999e-7 * NV_Ith_S(mParameters, 9) - 2.5349999999999999e-7 * var_chaste_interface__membrane__V);
        const double var_x75 = var_x74 / var_x73;
        const double var_x76 = ((var_x53) ? (0.1212 * var_x71) : (0.29999999999999999 * var_x75));
        const double var_x77 = var_x76;
        const double var_x78 = 37.780000000000001 + var_chaste_interface__membrane__V;
        const double var_x79 = exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V - 0.311 * NV_Ith_S(mParameters, 9));
        const double var_x80 = 1.0 + var_x79;
        const double var_x81 = 1 / var_x80;
        const double var_x82 = exp(0.24440000000000001 * var_chaste_interface__membrane__V - 0.24440000000000001 * NV_Ith_S(mParameters, 9));
        const double var_x83 = exp(0.043909999999999998 * NV_Ith_S(mParameters, 9) - 0.043909999999999998 * var_chaste_interface__membrane__V);
        const double var_x84 = -127140.0 * var_x82 - 3.4740000000000003e-5 * var_x83;
        const double var_x85 = var_x81 * var_x84;
        const double var_x86 = ((var_x53) ? (var_x78 * var_x85) : (0));
        const double var_x87 = var_x86;
        const double var_x88 = ((var_x53) ? (var_x85 + var_x78 * var_x81 * (1.5254334000000001e-6 * var_x83 - 31073.016 * var_x82) - 0.311 * var_x78 * var_x79 * var_x84 / pow(var_x80, 2)) : (0));
        const double var_x89 = var_x76 + var_x86;
        const double var_x90 = var_x65 / var_x89;
        const double var_x91 = ((var_x53) ? (-0.001275024 * var_x71 + 0.016701360000000002 * var_x68 * var_x70 / pow(var_x69, 2)) : (-7.6049999999999996e-8 * var_x75 + 0.029999999999999999 * var_x72 * var_x74 / pow(var_x73, 2)));
        const double var_x92 = exp(2.2000000000000002 + 0.050000000000000003 * var_chaste_interface__membrane__V);
        const double var_x93 = 1.0 + var_x92;
        const double var_x94 = exp(-0.748 - 0.017000000000000001 * var_chaste_interface__membrane__V);
        const double var_x95 = var_x94 / var_x93;
        const double var_x96 = 1.0 - var_chaste_interface__slow_inward_current_d_gate__d;
        const double var_x97 = exp(0.35999999999999999 - 0.071999999999999995 * var_chaste_interface__membrane__V);
        const double var_x98 = 1.0 + var_x97;
        const double var_x99 = exp(0.050000000000000003 - 0.01 * var_chaste_interface__membrane__V);
        const double var_x100 = var_x99 / var_x98;
        const double var_x101 = exp(-6.0 - 0.20000000000000001 * var_chaste_interface__membrane__V);
        const double var_x102 = 1.0 + var_x101;
        const double var_x103 = exp(-0.59999999999999998 - 0.02 * var_chaste_interface__membrane__V);
        const double var_x104 = var_x103 / var_x102;
        const double var_x105 = 1.0 - var_chaste_interface__slow_inward_current_f_gate__f;
        const double var_x106 = exp(4.2000000000000002 + 0.14999999999999999 * var_chaste_interface__membrane__V);
        const double var_x107 = 1.0 + var_x106;
        const double var_x108 = exp(-0.224 - 0.0080000000000000002 * var_chaste_interface__membrane__V);
        const double var_x109 = var_x108 / var_x107;
        const double var_x110 = exp(-0.80000000000000004 - var_x6);
        const double var_x111 = 1.0 + var_x110;
        const double var_x112 = exp(-1.2 - 0.059999999999999998 * var_chaste_interface__membrane__V);
        const double var_x113 = var_x112 / var_x111;
        const double var_x114 = 1.0 - var_chaste_interface__time_dependent_potassium_current_X_gate__X;
        const double var_x115 = exp(2.8500000000000001 + 0.057000000000000002 * var_chaste_interface__membrane__V);
        const double var_x116 = 1.0 + var_x115;
        const double var_x117 = exp(4.1500000000000004 + 0.083000000000000004 * var_chaste_interface__membrane__V);
        const double var_x118 = var_x117 / var_x116;
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x36 * (var_x3 + var_x16 * var_x18 + var_x5 * var_chaste_interface__fast_sodium_current_h_gate__h + NV_Ith_S(mParameters, 12) / var_x1 + 0.4389381125701739 * var_x31 * var_x32 + var_x18 * var_x33 * ((var_x9) ? (0.0022696000000000001 * var_x7 - 0.040000000000000001 * var_x8) : ((var_x15) ? (-0.0045392000000000002 * var_x14 + 0.0045392000000000002 * var_x11 * var_x13 - 0.0004784955304435824 * var_x12 * var_x7 / pow((1 + 0.012987012987012988 * var_chaste_interface__membrane__V), 2)) : (0))) + 0.42189361069797565 * var_x20 * var_x32 * (0.24326999999999999 * var_x34 - var_x26 * (0.061749999999999999 * var_x27 + 0.039456396800000001 * var_x28) - 0.51429999999999998 * var_x24 * var_x29 / pow(var_x25, 2)) / pow((var_x23 + 0.98039215686274506 * var_x30), 2) + 0.16722408026755853 * var_x0 * var_x20 * NV_Ith_S(mParameters, 12) / pow(var_x1, 2) - 0.10468673984798647 * var_x17 * var_x20 * var_x31 * var_x34 * NV_Ith_S(mParameters, 10) + NV_Ith_S(mParameters, 11)));
        IJth(rJacobian, 1, 0) = -0.0001 * var_x3;
        IJth(rJacobian, 2, 0) = (1.0 - var_chaste_interface__fast_sodium_current_m_gate__m) * ((var_x45) ? (0.16) : (-0.32000000000000001 * var_x50 + 0.32000000000000001 * var_x47 * var_x48 / pow(var_x49, 2))) + 0.0072727272727272727 * var_x51 * var_chaste_interface__fast_sodium_current_m_gate__m;
        IJth(rJacobian, 3, 0) = (var_x55 + var_x61) * (var_x62 * var_x66 + var_x54 * var_x65 * (-var_x62 - var_x67) / pow(var_x63, 2)) + (var_x62 + var_x67) * (var_x64 - var_chaste_interface__fast_sodium_current_h_gate__h + var_x54 * var_x66);
        IJth(rJacobian, 4, 0) = (var_x77 + var_x87) * (var_x88 * var_x90 + var_x65 * var_x86 * (-var_x88 - var_x91) / pow(var_x89, 2)) + (var_x88 + var_x91) * (var_x64 - var_chaste_interface__fast_sodium_current_j_gate__j + var_x86 * var_x90);
        IJth(rJacobian, 5, 0) = 0.0011900000000000003 * var_x95 * var_chaste_interface__slow_inward_current_d_gate__d - 0.00095 * var_x100 * var_x96 + 0.0068399999999999997 * var_x96 * var_x97 * var_x99 / pow(var_x98, 2) + 0.0035000000000000005 * var_x92 * var_x94 * var_chaste_interface__slow_inward_current_d_gate__d / pow(var_x93, 2);
        IJth(rJacobian, 6, 0) = 0.00012999999999999999 * var_x104 * var_chaste_interface__slow_inward_current_f_gate__f - 9.6000000000000002e-5 * var_x105 * var_x109 - 0.0018 * var_x105 * var_x106 * var_x108 / pow(var_x107, 2) - 0.0012999999999999999 * var_x101 * var_x103 * var_chaste_interface__slow_inward_current_f_gate__f / pow(var_x102, 2);
        IJth(rJacobian, 7, 0) = 7.7999999999999999e-5 * var_x113 * var_chaste_interface__time_dependent_potassium_current_X_gate__X + 4.1500000000000006e-5 * var_x114 * var_x118 - 5.1999999999999997e-5 * var_x110 * var_x112 * var_chaste_interface__time_dependent_potassium_current_X_gate__X / pow(var_x111, 2) - 2.8500000000000002e-5 * var_x114 * var_x115 * var_x117 / pow(var_x116, 2);
        IJth(rJacobian, 0, 1) = mSetVoltageDerivativeToZero ? 0.0 : (-13.028700000000001 * var_x35 * var_x37);
        IJth(rJacobian, 1, 1) = -0.070000000000000007 - 0.00130287 * var_x37;
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-3.0 * var_x35 * var_x38 * var_x39 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 2) * var_chaste_interface__fast_sodium_current_j_gate__j);
        IJth(rJacobian, 2, 2) = -((var_x45) ? (10.7408 + 0.16 * var_chaste_interface__membrane__V) : (3.1999999999999997 * var_x47 * var_x50)) - 0.080000000000000002 * var_x51;
        IJth(rJacobian, 0, 3) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x40 * var_x5);
        IJth(rJacobian, 3, 3) = -var_x55 - var_x61;
        IJth(rJacobian, 0, 4) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x39 * var_x4 * var_x40);
        IJth(rJacobian, 4, 4) = -var_x77 - var_x87;
        IJth(rJacobian, 0, 5) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x2 * var_x42);
        IJth(rJacobian, 1, 5) = var_x2 * var_x44;
        IJth(rJacobian, 5, 5) = -0.070000000000000007 * var_x95 - 0.095000000000000001 * var_x100;
        IJth(rJacobian, 0, 6) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x42 * var_x43);
        IJth(rJacobian, 1, 6) = var_x43 * var_x44;
        IJth(rJacobian, 6, 6) = -0.012 * var_x109 - 0.0064999999999999997 * var_x104;
        IJth(rJacobian, 0, 7) = mSetVoltageDerivativeToZero ? 0.0 : (-0.43033148291193518 * var_x16 * var_x17 * var_x33 * var_x35 * NV_Ith_S(mParameters, 6));
        IJth(rJacobian, 7, 7) = -0.00050000000000000001 * var_x118 - 0.0012999999999999999 * var_x113;
    }

    N_Vector Cellluo_rudy_1991FromCellMLCvode::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -83.853
        double var_chaste_interface__intracellular_calcium_concentration__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0002
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00187018
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9804713
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.98767124
        double var_chaste_interface__slow_inward_current_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.00316354
        double var_chaste_interface__slow_inward_current_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.99427859
        double var_chaste_interface__time_dependent_potassium_current_X_gate__X = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.16647703
        
        // Mathematics
        const double var_background_current__E_b = -59.869999999999997; // millivolt
        const double var_membrane__F = 96484.600000000006; // coulomb_per_mole
        const double var_membrane__I_stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // microA_per_cm2
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 3) / NV_Ith_S(mParameters, 1)) / var_membrane__F; // millivolt
        const double var_background_current__i_b = (-var_background_current__E_b + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 11); // microA_per_cm2
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // microA_per_cm2
        const double var_fast_sodium_current_h_gate__alpha_h = ((var_chaste_interface__membrane__V < -40.0) ? (0.13500000000000001 * exp(-11.764705882352942 + 0.14705882352941177 * NV_Ith_S(mParameters, 9) - 0.14705882352941177 * var_chaste_interface__membrane__V)) : (0)); // per_millisecond
        const double var_fast_sodium_current_h_gate__beta_h = ((var_chaste_interface__membrane__V < -40.0) ? (310000.0 * exp(0.34999999999999998 * var_chaste_interface__membrane__V - 0.34999999999999998 * NV_Ith_S(mParameters, 9)) + 3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__membrane__V - 0.079000000000000001 * NV_Ith_S(mParameters, 9))) : (7.6923076923076916 / (1.0 + exp(-0.96036036036036043 + 0.0900900900900901 * NV_Ith_S(mParameters, 9) - 0.0900900900900901 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_fast_sodium_current_h_gate__tau_h = 1 / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h); // millisecond
        const double var_fast_sodium_current_j_gate__alpha_j = ((var_chaste_interface__membrane__V < -40.0) ? ((37.780000000000001 + var_chaste_interface__membrane__V) * (-127140.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V - 0.24440000000000001 * NV_Ith_S(mParameters, 9)) - 3.4740000000000003e-5 * exp(0.043909999999999998 * NV_Ith_S(mParameters, 9) - 0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V - 0.311 * NV_Ith_S(mParameters, 9)))) : (0)); // per_millisecond
        const double var_fast_sodium_current_j_gate__beta_j = ((var_chaste_interface__membrane__V < -40.0) ? (0.1212 * exp(0.01052 * NV_Ith_S(mParameters, 9) - 0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 + 0.13780000000000001 * NV_Ith_S(mParameters, 9) - 0.13780000000000001 * var_chaste_interface__membrane__V))) : (0.29999999999999999 * exp(2.5349999999999999e-7 * NV_Ith_S(mParameters, 9) - 2.5349999999999999e-7 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 + 0.10000000000000001 * NV_Ith_S(mParameters, 9) - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_fast_sodium_current_j_gate__tau_j = 1 / (var_fast_sodium_current_j_gate__alpha_j + var_fast_sodium_current_j_gate__beta_j); // millisecond
        const double var_plateau_potassium_current__Kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_slow_inward_current__E_si = 7.7000000000000002 - 13.028700000000001 * log(var_chaste_interface__intracellular_calcium_concentration__Cai); // millivolt
        const double var_slow_inward_current_f_gate__alpha_f = 0.012 * exp(-0.224 - 0.0080000000000000002 * var_chaste_interface__membrane__V) / (1.0 + exp(4.2000000000000002 + 0.14999999999999999 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_slow_inward_current_f_gate__beta_f = 0.0064999999999999997 * exp(-0.59999999999999998 - 0.02 * var_chaste_interface__membrane__V) / (1.0 + exp(-6.0 - 0.20000000000000001 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_slow_inward_current__i_si = (-var_slow_inward_current__E_si + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 4) * var_chaste_interface__slow_inward_current_d_gate__d * var_chaste_interface__slow_inward_current_f_gate__f; // microA_per_cm2
        const double var_slow_inward_current_f_gate__tau_f = 1 / (var_slow_inward_current_f_gate__alpha_f + var_slow_inward_current_f_gate__beta_f); // millisecond
        const double var_time_dependent_potassium_current__PR_NaK = 0.018329999999999999; // dimensionless
        const double var_time_dependent_potassium_current__E_K = var_membrane__R * var_membrane__T * log((NV_Ith_S(mParameters, 3) * var_time_dependent_potassium_current__PR_NaK + NV_Ith_S(mParameters, 2)) / (NV_Ith_S(mParameters, 1) * var_time_dependent_potassium_current__PR_NaK + NV_Ith_S(mParameters, 0))) / var_membrane__F; // millivolt
        const double var_time_dependent_potassium_current__g_K = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 2)) * NV_Ith_S(mParameters, 6); // milliS_per_cm2
        const double var_time_dependent_potassium_current_Xi_gate__B = 0.040000000000000001; // per_millivolt
        const double var_time_dependent_potassium_current_Xi_gate__A = 2.8370000000000002 * var_time_dependent_potassium_current_Xi_gate__B; // dimensionless
        const double var_time_dependent_potassium_current_Xi_gate__v0 = -77.0; // millivolt
        const double var_time_dependent_potassium_current_Xi_gate__U = (-var_time_dependent_potassium_current_Xi_gate__v0 + var_chaste_interface__membrane__V) * var_time_dependent_potassium_current_Xi_gate__B; // dimensionless
        const double var_time_dependent_potassium_current_Xi_gate__temp_Xi = (((var_time_dependent_potassium_current_Xi_gate__U >= -9.9999999999999995e-8) && (var_time_dependent_potassium_current_Xi_gate__U <= 9.9999999999999995e-8)) ? ((1.0 + 0.5 * var_time_dependent_potassium_current_Xi_gate__U) * var_time_dependent_potassium_current_Xi_gate__A) : ((-1.0 + exp(var_time_dependent_potassium_current_Xi_gate__U)) * var_time_dependent_potassium_current_Xi_gate__A / var_time_dependent_potassium_current_Xi_gate__U)); // dimensionless
        const double var_time_dependent_potassium_current_Xi_gate__Xi = ((var_chaste_interface__membrane__V > -100.0) ? (var_time_dependent_potassium_current_Xi_gate__temp_Xi / exp(1.4000000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V)) : (1.0)); // dimensionless
        const double var_time_dependent_potassium_current__i_K = (-var_time_dependent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_dependent_potassium_current__g_K * var_chaste_interface__time_dependent_potassium_current_X_gate__X * var_time_dependent_potassium_current_Xi_gate__Xi; // microA_per_cm2
        const double var_time_independent_potassium_current__E_K1 = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 2) / NV_Ith_S(mParameters, 0)) / var_membrane__F; // millivolt
        const double var_plateau_potassium_current__E_Kp = var_time_independent_potassium_current__E_K1; // millivolt
        const double var_plateau_potassium_current__i_Kp = (-var_plateau_potassium_current__E_Kp + var_chaste_interface__membrane__V) * var_plateau_potassium_current__Kp * NV_Ith_S(mParameters, 12); // microA_per_cm2
        const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 2)) * NV_Ith_S(mParameters, 10); // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K1)); // per_millisecond
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = (exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K1) + 0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K1)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K1 - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K1 + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_cm2

        N_Vector dqs = N_VNew_Serial(11);
        NV_Ith_S(dqs, 0) = var_slow_inward_current__i_si;
        NV_Ith_S(dqs, 1) = var_slow_inward_current_f_gate__tau_f;
        NV_Ith_S(dqs, 2) = var_time_dependent_potassium_current__i_K;
        NV_Ith_S(dqs, 3) = var_fast_sodium_current__i_Na;
        NV_Ith_S(dqs, 4) = var_fast_sodium_current_h_gate__tau_h;
        NV_Ith_S(dqs, 5) = var_fast_sodium_current_j_gate__tau_j;
        NV_Ith_S(dqs, 6) = var_time_independent_potassium_current__i_K1;
        NV_Ith_S(dqs, 7) = var_background_current__i_b;
        NV_Ith_S(dqs, 8) = var_plateau_potassium_current__i_Kp;
        NV_Ith_S(dqs, 9) = var_membrane__I_stim;
        NV_Ith_S(dqs, 10) = var_chaste_interface__environment__time;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellluo_rudy_1991FromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "luo_rudy_1991";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-83.853);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0002);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00187018);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9804713);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.98767124);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00316354);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99427859);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("time_dependent_potassium_current_X_gate__X");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.16647703);

    // mParameters[0]:
    this->mParameterNames.push_back("cytosolic_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[1]:
    this->mParameterNames.push_back("cytosolic_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[2]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[4]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // mParameters[5]:
    this->mParameterNames.push_back("membrane_capacitance");
    this->mParameterUnits.push_back("microF_per_cm2");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_reduced_inactivation");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_shift_inactivation");
    this->mParameterUnits.push_back("millivolt");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_leakage_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_plateau_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_cm2");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_f_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_cm2");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_h_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_j_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_leakage_current");
    this->mDerivedQuantityUnits.push_back("microA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_plateau_potassium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("microA_per_cm2");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellluo_rudy_1991FromCellMLCvode)

#endif // CHASTE_CVODE
