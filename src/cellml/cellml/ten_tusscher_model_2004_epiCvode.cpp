#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version 0.6.3
//!
//! Model: tentusscher_model_2004_epi
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: AnalyticCvode)
//! on 2021-03-29 17:39:20
//!
//! <autogenerated>

#include "ten_tusscher_model_2004_epiCvode.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"



    boost::shared_ptr<RegularStimulus> Cellten_tusscher_model_2004_epiFromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__stim_amplitude_converted = -52.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__membrane__stim_duration = 1.0; // millisecond
        const double var_chaste_interface__membrane__stim_period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__stim_start = 100.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude_converted),
                var_chaste_interface__membrane__stim_duration,
                var_chaste_interface__membrane__stim_period,
                var_chaste_interface__membrane__stim_start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }

    double Cellten_tusscher_model_2004_epiFromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Cellten_tusscher_model_2004_epiFromCellMLCvode::Cellten_tusscher_model_2004_epiFromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                17,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellten_tusscher_model_2004_epiFromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 8.0000000000000007e-5; // (var_calcium_dynamics__V_leak) [per_millisecond]
        NV_Ith_S(this->mParameters, 1) = 0.016463999999999999; // (var_calcium_dynamics__a_rel) [millimolar_per_millisecond]
        NV_Ith_S(this->mParameters, 2) = 0.00042499999999999998; // (var_calcium_dynamics__Vmax_up) [millimolar_per_millisecond]
        NV_Ith_S(this->mParameters, 3) = 1.0; // (var_sodium_dynamics__conc_clamp) [dimensionless]
        NV_Ith_S(this->mParameters, 4) = 2.0; // (var_calcium_dynamics__Ca_o) [millimolar]
        NV_Ith_S(this->mParameters, 5) = 5.4000000000000004; // (var_potassium_dynamics__K_o) [millimolar]
        NV_Ith_S(this->mParameters, 6) = 140.0; // (var_sodium_dynamics__Na_o) [millimolar]
        NV_Ith_S(this->mParameters, 7) = 0.000175; // (var_L_type_Ca_current__g_CaL) [litre_per_farad_second]
        NV_Ith_S(this->mParameters, 8) = 2.0; // (var_L_type_Ca_current_fCa_gate__tau_fCa) [millisecond]
        NV_Ith_S(this->mParameters, 9) = 0.00059199999999999997; // (var_calcium_background_current__g_bca) [nanoS_per_picoF]
        NV_Ith_S(this->mParameters, 10) = 0.00029; // (var_sodium_background_current__g_bna) [nanoS_per_picoF]
        NV_Ith_S(this->mParameters, 11) = 0.82499999999999996; // (var_calcium_pump_current__g_pCa) [picoA_per_picoF]
        NV_Ith_S(this->mParameters, 12) = 0.185; // (var_membrane__Cm) [microF]
        NV_Ith_S(this->mParameters, 13) = 14.837999999999999; // (var_fast_sodium_current__g_Na) [nanoS_per_picoF]
        NV_Ith_S(this->mParameters, 14) = 0; // (var_fast_sodium_current__perc_reduced_inact_for_IpNa) [dimensionless]
        NV_Ith_S(this->mParameters, 15) = 0; // (var_fast_sodium_current__shift_INa_inact) [millivolt]
        NV_Ith_S(this->mParameters, 16) = 5.4050000000000002; // (var_inward_rectifier_potassium_current__g_K1) [nanoS_per_picoF]
        NV_Ith_S(this->mParameters, 17) = 0.0146; // (var_potassium_pump_current__g_pK) [nanoS_per_picoF]
        NV_Ith_S(this->mParameters, 18) = 0.096000000000000002; // (var_rapid_time_dependent_potassium_current__g_Kr) [nanoS_per_picoF]
        NV_Ith_S(this->mParameters, 19) = 0.245; // (var_slow_time_dependent_potassium_current__g_Ks) [nanoS_per_picoF]
        NV_Ith_S(this->mParameters, 20) = 1000.0; // (var_sodium_calcium_exchanger_current__K_NaCa) [picoA_per_picoF]
        NV_Ith_S(this->mParameters, 21) = 1.3620000000000001; // (var_sodium_potassium_pump_current__P_NaK) [picoA_per_picoF]
        NV_Ith_S(this->mParameters, 22) = 0.29399999999999998; // (var_transient_outward_current__g_to) [nanoS_per_picoF]
    }

    Cellten_tusscher_model_2004_epiFromCellMLCvode::~Cellten_tusscher_model_2004_epiFromCellMLCvode()
    {
    }

    
    double Cellten_tusscher_model_2004_epiFromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -86.2
        double var_chaste_interface__calcium_dynamics__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0002
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.75
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.75
        double var_chaste_interface__L_type_Ca_current_d_gate__d = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__L_type_Ca_current_f_gate__f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__L_type_Ca_current_fCa_gate__fCa = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__sodium_dynamics__Na_i = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 11.6
        double var_chaste_interface__potassium_dynamics__K_i = NV_Ith_S(rY, 16);
        // Units: millimolar; Initial value: 138.3
        
        const double var_L_type_Ca_current__v0 = 0; // millivolt
        const double var_calcium_pump_current__K_pCa = 0.00050000000000000001; // millimolar
        const double var_calcium_pump_current__i_p_Ca = var_chaste_interface__calcium_dynamics__Ca_i * NV_Ith_S(mParameters, 11) / (var_chaste_interface__calcium_dynamics__Ca_i + var_calcium_pump_current__K_pCa); // picoA_per_picoF
        const double var_calcium_pump_current__i_p_Ca_converted = HeartConfig::Instance()->GetCapacitance() * var_calcium_pump_current__i_p_Ca; // uA_per_cm2
        const double var_membrane__F = 96485.341499999995; // coulomb_per_millimole
        const double var_membrane__R = 8314.4719999999998; // joule_per_mole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_L_type_Ca_current__B = 2.0 * var_membrane__F / (var_membrane__R * var_membrane__T); // per_millivolt
        const double var_L_type_Ca_current__A = 4.0 * pow(var_membrane__F, 2) * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + var_chaste_interface__calcium_dynamics__Ca_i * exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 7) * var_chaste_interface__L_type_Ca_current_d_gate__d * var_chaste_interface__L_type_Ca_current_fCa_gate__fCa * var_chaste_interface__L_type_Ca_current_f_gate__f / (var_L_type_Ca_current__B * var_membrane__R * var_membrane__T); // picoA_per_picoF
        const double var_L_type_Ca_current__U = (-var_L_type_Ca_current__v0 + var_chaste_interface__membrane__V) * var_L_type_Ca_current__B; // dimensionless
        const double var_L_type_Ca_current__i_CaL = (((var_L_type_Ca_current__U >= -9.9999999999999995e-8) && (var_L_type_Ca_current__U <= 9.9999999999999995e-8)) ? ((1.0 - 0.5 * var_L_type_Ca_current__U) * var_L_type_Ca_current__A) : (var_L_type_Ca_current__A * var_L_type_Ca_current__U / (-1.0 + exp(var_L_type_Ca_current__U)))); // picoA_per_picoF
        const double var_L_type_Ca_current__i_CaL_converted = HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_current__i_CaL; // uA_per_cm2
        const double var_reversal_potentials__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__calcium_dynamics__Ca_i) / var_membrane__F; // millivolt
        const double var_calcium_background_current__i_b_Ca = (-var_reversal_potentials__E_Ca + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9); // picoA_per_picoF
        const double var_calcium_background_current__i_b_Ca_converted = HeartConfig::Instance()->GetCapacitance() * var_calcium_background_current__i_b_Ca; // uA_per_cm2
        const double var_reversal_potentials__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__potassium_dynamics__K_i) / var_membrane__F; // millivolt
        const double var_inward_rectifier_potassium_current__alpha_K1 = 0.10000000000000001 / (1.0 + exp(-12.0 + 0.059999999999999998 * var_chaste_interface__membrane__V - 0.059999999999999998 * var_reversal_potentials__E_K)); // per_millisecond
        const double var_inward_rectifier_potassium_current__beta_K1 = (exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__V - 0.10000000000000001 * var_reversal_potentials__E_K) + 3.0 * exp(0.02 + 0.00020000000000000001 * var_chaste_interface__membrane__V - 0.00020000000000000001 * var_reversal_potentials__E_K)) / (1.0 + exp(0.5 * var_reversal_potentials__E_K - 0.5 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_inward_rectifier_potassium_current__xK1_inf = var_inward_rectifier_potassium_current__alpha_K1 / (var_inward_rectifier_potassium_current__alpha_K1 + var_inward_rectifier_potassium_current__beta_K1); // dimensionless
        const double var_inward_rectifier_potassium_current__i_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 5)) * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 16) * var_inward_rectifier_potassium_current__xK1_inf; // picoA_per_picoF
        const double var_inward_rectifier_potassium_current__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_inward_rectifier_potassium_current__i_K1; // uA_per_cm2
        const double var_potassium_pump_current__i_p_K = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 17) / (1.0 + exp(4.1806020066889626 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // picoA_per_picoF
        const double var_potassium_pump_current__i_p_K_converted = HeartConfig::Instance()->GetCapacitance() * var_potassium_pump_current__i_p_K; // uA_per_cm2
        const double var_rapid_time_dependent_potassium_current__i_Kr = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 5)) * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 18) * var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 * var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2; // picoA_per_picoF
        const double var_rapid_time_dependent_potassium_current__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_rapid_time_dependent_potassium_current__i_Kr; // uA_per_cm2
        const double var_reversal_potentials__P_kna = 0.029999999999999999; // dimensionless
        const double var_sodium_calcium_exchanger_current__K_sat = 0.10000000000000001; // dimensionless
        const double var_sodium_calcium_exchanger_current__Km_Ca = 1.3799999999999999; // millimolar
        const double var_sodium_calcium_exchanger_current__Km_Nai = 87.5; // millimolar
        const double var_sodium_calcium_exchanger_current__alpha = 2.5; // dimensionless
        const double var_sodium_calcium_exchanger_current__gamma = 0.34999999999999998; // dimensionless
        const double var_reversal_potentials__E_Ks = var_membrane__R * var_membrane__T * log((var_reversal_potentials__P_kna * NV_Ith_S(mParameters, 6) + NV_Ith_S(mParameters, 5)) / (var_reversal_potentials__P_kna * var_chaste_interface__sodium_dynamics__Na_i + var_chaste_interface__potassium_dynamics__K_i)) / var_membrane__F; // millivolt
        const double var_reversal_potentials__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__sodium_dynamics__Na_i) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_reversal_potentials__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 13) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // picoA_per_picoF
        const double var_fast_sodium_current__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na; // uA_per_cm2
        const double var_slow_time_dependent_potassium_current__i_Ks = pow(var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs, 2) * (-var_reversal_potentials__E_Ks + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 19); // picoA_per_picoF
        const double var_slow_time_dependent_potassium_current__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_slow_time_dependent_potassium_current__i_Ks; // uA_per_cm2
        const double var_sodium_background_current__i_b_Na = (-var_reversal_potentials__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 10); // picoA_per_picoF
        const double var_sodium_background_current__i_b_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_sodium_background_current__i_b_Na; // uA_per_cm2
        const double var_sodium_calcium_exchanger_current__i_NaCa = (pow(var_chaste_interface__sodium_dynamics__Na_i, 3) * NV_Ith_S(mParameters, 4) * exp(var_membrane__F * var_chaste_interface__membrane__V * var_sodium_calcium_exchanger_current__gamma / (var_membrane__R * var_membrane__T)) - pow(NV_Ith_S(mParameters, 6), 3) * var_chaste_interface__calcium_dynamics__Ca_i * var_sodium_calcium_exchanger_current__alpha * exp((-1.0 + var_sodium_calcium_exchanger_current__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 20) / ((1.0 + var_sodium_calcium_exchanger_current__K_sat * exp((-1.0 + var_sodium_calcium_exchanger_current__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * (pow(var_sodium_calcium_exchanger_current__Km_Nai, 3) + pow(NV_Ith_S(mParameters, 6), 3)) * (NV_Ith_S(mParameters, 4) + var_sodium_calcium_exchanger_current__Km_Ca)); // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__i_NaCa_converted = HeartConfig::Instance()->GetCapacitance() * var_sodium_calcium_exchanger_current__i_NaCa; // uA_per_cm2
        const double var_sodium_potassium_pump_current__K_mNa = 40.0; // millimolar
        const double var_sodium_potassium_pump_current__K_mk = 1.0; // millimolar
        const double var_sodium_potassium_pump_current__i_NaK = NV_Ith_S(mParameters, 5) * var_chaste_interface__sodium_dynamics__Na_i * NV_Ith_S(mParameters, 21) / ((NV_Ith_S(mParameters, 5) + var_sodium_potassium_pump_current__K_mk) * (var_chaste_interface__sodium_dynamics__Na_i + var_sodium_potassium_pump_current__K_mNa) * (1.0 + 0.035299999999999998 * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)))); // picoA_per_picoF
        const double var_sodium_potassium_pump_current__i_NaK_converted = HeartConfig::Instance()->GetCapacitance() * var_sodium_potassium_pump_current__i_NaK; // uA_per_cm2
        const double var_transient_outward_current__i_to = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 22) * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s; // picoA_per_picoF
        const double var_transient_outward_current__i_to_converted = HeartConfig::Instance()->GetCapacitance() * var_transient_outward_current__i_to; // uA_per_cm2
        const double var_chaste_interface__i_ionic = var_L_type_Ca_current__i_CaL_converted + var_calcium_background_current__i_b_Ca_converted + var_calcium_pump_current__i_p_Ca_converted + var_fast_sodium_current__i_Na_converted + var_inward_rectifier_potassium_current__i_K1_converted + var_potassium_pump_current__i_p_K_converted + var_rapid_time_dependent_potassium_current__i_Kr_converted + var_slow_time_dependent_potassium_current__i_Ks_converted + var_sodium_background_current__i_b_Na_converted + var_sodium_calcium_exchanger_current__i_NaCa_converted + var_sodium_potassium_pump_current__i_NaK_converted + var_transient_outward_current__i_to_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellten_tusscher_model_2004_epiFromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -86.2
        double var_chaste_interface__calcium_dynamics__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0002
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.75
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.75
        double var_chaste_interface__L_type_Ca_current_d_gate__d = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__L_type_Ca_current_f_gate__f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__L_type_Ca_current_fCa_gate__fCa = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__Ca_SR = NV_Ith_S(rY, 13);
        // Units: millimolar; Initial value: 0.2
        double var_chaste_interface__calcium_dynamics__g = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__sodium_dynamics__Na_i = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 11.6
        double var_chaste_interface__potassium_dynamics__K_i = NV_Ith_S(rY, 16);
        // Units: millimolar; Initial value: 138.3

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double var_L_type_Ca_current__v0 = 0; // millivolt
        const double var_calcium_dynamics__Buf_c = 0.14999999999999999; // millimolar
        const double var_calcium_dynamics__Buf_sr = 10.0; // millimolar
        const double var_L_type_Ca_current_fCa_gate__alpha_fCa = 1 / (1.0 + 8.034023767017109e+27 * pow(var_chaste_interface__calcium_dynamics__Ca_i, 8)); // dimensionless
        const double var_L_type_Ca_current_fCa_gate__beta_fCa = 0.10000000000000001 / (1.0 + exp(-5.0 + 10000.0 * var_chaste_interface__calcium_dynamics__Ca_i)); // dimensionless
        const double var_L_type_Ca_current_fCa_gate__gama_fCa = 0.20000000000000001 / (1.0 + exp(-0.9375 + 1250.0 * var_chaste_interface__calcium_dynamics__Ca_i)); // dimensionless
        const double var_L_type_Ca_current_fCa_gate__fCa_inf = 0.15753424657534248 + 0.68493150684931503 * var_L_type_Ca_current_fCa_gate__alpha_fCa + 0.68493150684931503 * var_L_type_Ca_current_fCa_gate__beta_fCa + 0.68493150684931503 * var_L_type_Ca_current_fCa_gate__gama_fCa; // dimensionless
        const double var_L_type_Ca_current_fCa_gate__d_fCa = (-var_chaste_interface__L_type_Ca_current_fCa_gate__fCa + var_L_type_Ca_current_fCa_gate__fCa_inf) / NV_Ith_S(mParameters, 8); // per_millisecond
        const double var_calcium_dynamics__K_buf_c = 0.001; // millimolar
        const double var_calcium_dynamics__Ca_i_bufc = 1 / (1.0 + var_calcium_dynamics__Buf_c * var_calcium_dynamics__K_buf_c / pow((var_chaste_interface__calcium_dynamics__Ca_i + var_calcium_dynamics__K_buf_c), 2)); // dimensionless
        const double var_calcium_dynamics__K_buf_sr = 0.29999999999999999; // millimolar
        const double var_calcium_dynamics__Ca_sr_bufsr = 1 / (1.0 + var_calcium_dynamics__Buf_sr * var_calcium_dynamics__K_buf_sr / pow((var_chaste_interface__calcium_dynamics__Ca_SR + var_calcium_dynamics__K_buf_sr), 2)); // dimensionless
        const double var_calcium_dynamics__K_up = 0.00025000000000000001; // millimolar
        const double var_calcium_dynamics__V_sr = 0.0010939999999999999; // micrometre3
        const double var_calcium_dynamics__b_rel = 0.25; // millimolar
        const double var_calcium_dynamics__c_rel = 0.0082319999999999997; // millimolar_per_millisecond
        const double var_calcium_dynamics__g_inf = ((var_chaste_interface__calcium_dynamics__Ca_i < 0.00035) ? (1 / (1.0 + 5.439910241481016e+20 * pow(var_chaste_interface__calcium_dynamics__Ca_i, 6))) : (1 / (1.0 + 1.9720198874049176e+55 * pow(var_chaste_interface__calcium_dynamics__Ca_i, 16)))); // dimensionless
        const double var_calcium_dynamics__i_leak = (-var_chaste_interface__calcium_dynamics__Ca_i + var_chaste_interface__calcium_dynamics__Ca_SR) * NV_Ith_S(mParameters, 0); // millimolar_per_millisecond
        const double var_calcium_dynamics__i_rel = (pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2) * NV_Ith_S(mParameters, 1) / (pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2) + pow(var_calcium_dynamics__b_rel, 2)) + var_calcium_dynamics__c_rel) * var_chaste_interface__L_type_Ca_current_d_gate__d * var_chaste_interface__calcium_dynamics__g; // millimolar_per_millisecond
        const double var_calcium_dynamics__i_up = NV_Ith_S(mParameters, 2) / (1.0 + pow(var_calcium_dynamics__K_up, 2) / pow(var_chaste_interface__calcium_dynamics__Ca_i, 2)); // millimolar_per_millisecond
        const double var_calcium_dynamics__tau_g = 2.0; // millisecond
        const double var_calcium_dynamics__d_g = (-var_chaste_interface__calcium_dynamics__g + var_calcium_dynamics__g_inf) / var_calcium_dynamics__tau_g; // per_millisecond
        const double var_calcium_pump_current__K_pCa = 0.00050000000000000001; // millimolar
        const double var_calcium_pump_current__i_p_Ca = var_chaste_interface__calcium_dynamics__Ca_i * NV_Ith_S(mParameters, 11) / (var_chaste_interface__calcium_dynamics__Ca_i + var_calcium_pump_current__K_pCa); // picoA_per_picoF
        const double var_membrane__F = 96485.341499999995; // coulomb_per_millimole
        const double var_membrane__R = 8314.4719999999998; // joule_per_mole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_L_type_Ca_current__B = 2.0 * var_membrane__F / (var_membrane__R * var_membrane__T); // per_millivolt
        const double d_dt_chaste_interface_var_L_type_Ca_current_fCa_gate__fCa = (((var_chaste_interface__membrane__V > -60.0) && (var_chaste_interface__L_type_Ca_current_fCa_gate__fCa < var_L_type_Ca_current_fCa_gate__fCa_inf)) ? (0) : (var_L_type_Ca_current_fCa_gate__d_fCa)); // 1 / millisecond
        const double d_dt_chaste_interface_var_calcium_dynamics__g = (((var_chaste_interface__membrane__V > -60.0) && (var_chaste_interface__calcium_dynamics__g < var_calcium_dynamics__g_inf)) ? (0) : (var_calcium_dynamics__d_g)); // 1 / millisecond
        const double var_L_type_Ca_current__A = 4.0 * pow(var_membrane__F, 2) * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + var_chaste_interface__calcium_dynamics__Ca_i * exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 7) * var_chaste_interface__L_type_Ca_current_d_gate__d * var_chaste_interface__L_type_Ca_current_fCa_gate__fCa * var_chaste_interface__L_type_Ca_current_f_gate__f / (var_L_type_Ca_current__B * var_membrane__R * var_membrane__T); // picoA_per_picoF
        const double var_L_type_Ca_current__U = (-var_L_type_Ca_current__v0 + var_chaste_interface__membrane__V) * var_L_type_Ca_current__B; // dimensionless
        const double var_L_type_Ca_current__i_CaL = (((var_L_type_Ca_current__U >= -9.9999999999999995e-8) && (var_L_type_Ca_current__U <= 9.9999999999999995e-8)) ? ((1.0 - 0.5 * var_L_type_Ca_current__U) * var_L_type_Ca_current__A) : (var_L_type_Ca_current__A * var_L_type_Ca_current__U / (-1.0 + exp(var_L_type_Ca_current__U)))); // picoA_per_picoF
        const double var_L_type_Ca_current_d_gate__alpha_d = 0.25 + 1.3999999999999999 / (1.0 + exp(-2.6923076923076925 - 0.076923076923076927 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_L_type_Ca_current_d_gate__beta_d = 1.3999999999999999 / (1.0 + exp(1.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_L_type_Ca_current_d_gate__d_inf = 1 / (1.0 + exp(-0.66666666666666663 - 0.13333333333333333 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_L_type_Ca_current_d_gate__gamma_d = 1 / (1.0 + exp(2.5 - 0.050000000000000003 * var_chaste_interface__membrane__V)); // millisecond
        const double var_L_type_Ca_current_d_gate__tau_d = var_L_type_Ca_current_d_gate__alpha_d * var_L_type_Ca_current_d_gate__beta_d + var_L_type_Ca_current_d_gate__gamma_d; // millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_current_d_gate__d = (-var_chaste_interface__L_type_Ca_current_d_gate__d + var_L_type_Ca_current_d_gate__d_inf) / var_L_type_Ca_current_d_gate__tau_d; // 1 / millisecond
        const double var_L_type_Ca_current_f_gate__f_inf = 1 / (1.0 + exp(2.8571428571428572 + 0.14285714285714285 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_L_type_Ca_current_f_gate__tau_f = 80.0 + 165.0 / (1.0 + exp(2.5 - 0.10000000000000001 * var_chaste_interface__membrane__V)) + 1125.0 * exp(-3.0375000000000001 * pow((1 + 0.037037037037037035 * var_chaste_interface__membrane__V), 2)); // millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_current_f_gate__f = (-var_chaste_interface__L_type_Ca_current_f_gate__f + var_L_type_Ca_current_f_gate__f_inf) / var_L_type_Ca_current_f_gate__tau_f; // 1 / millisecond
        const double var_fast_sodium_current_h_gate__alpha_h = ((var_chaste_interface__membrane__V < -40.0) ? (0.057000000000000002 * exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__membrane__V)) : (0)); // per_millisecond
        const double var_fast_sodium_current_h_gate__beta_h = ((var_chaste_interface__membrane__V < -40.0) ? (310000.0 * exp(0.34849999999999998 * var_chaste_interface__membrane__V) + 2.7000000000000002 * exp(0.079000000000000001 * var_chaste_interface__membrane__V)) : (5.9230769230769234 / (1.0 + exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_fast_sodium_current_h_gate__h_inf = 0.01 * NV_Ith_S(mParameters, 14) + (1.0 - 0.01 * NV_Ith_S(mParameters, 14)) / pow((1.0 + exp(9.6298788694481825 + 0.13458950201884254 * var_chaste_interface__membrane__V - 0.13458950201884254 * NV_Ith_S(mParameters, 15))), 2); // dimensionless
        const double var_fast_sodium_current_h_gate__tau_h = 1 / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h); // millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_h_gate__h = (-var_chaste_interface__fast_sodium_current_h_gate__h + var_fast_sodium_current_h_gate__h_inf) / var_fast_sodium_current_h_gate__tau_h; // 1 / millisecond
        const double var_fast_sodium_current_j_gate__alpha_j = ((var_chaste_interface__membrane__V < -40.0) ? ((37.780000000000001 + var_chaste_interface__membrane__V) * (-25428.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V) - 6.9480000000000002e-6 * exp(-0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V))) : (0)); // per_millisecond
        const double var_fast_sodium_current_j_gate__beta_j = ((var_chaste_interface__membrane__V < -40.0) ? (0.024240000000000001 * exp(-0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__membrane__V))) : (0.59999999999999998 * exp(0.057000000000000002 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_fast_sodium_current_j_gate__j_inf = 0.01 * NV_Ith_S(mParameters, 14) + (1.0 - 0.01 * NV_Ith_S(mParameters, 14)) / pow((1.0 + exp(9.6298788694481825 + 0.13458950201884254 * var_chaste_interface__membrane__V - 0.13458950201884254 * NV_Ith_S(mParameters, 15))), 2); // dimensionless
        const double var_fast_sodium_current_j_gate__tau_j = 1 / (var_fast_sodium_current_j_gate__alpha_j + var_fast_sodium_current_j_gate__beta_j); // millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_j_gate__j = (-var_chaste_interface__fast_sodium_current_j_gate__j + var_fast_sodium_current_j_gate__j_inf) / var_fast_sodium_current_j_gate__tau_j; // 1 / millisecond
        const double var_fast_sodium_current_m_gate__alpha_m = 1 / (1.0 + exp(-12.0 - 0.20000000000000001 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_fast_sodium_current_m_gate__beta_m = 0.10000000000000001 / (1.0 + exp(7.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)) + 0.10000000000000001 / (1.0 + exp(-0.25 + 0.0050000000000000001 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_fast_sodium_current_m_gate__m_inf = 1 / pow((1.0 + exp(-6.2967884828349945 - 0.11074197120708749 * var_chaste_interface__membrane__V)), 2); // dimensionless
        const double var_fast_sodium_current_m_gate__tau_m = var_fast_sodium_current_m_gate__alpha_m * var_fast_sodium_current_m_gate__beta_m; // millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_m_gate__m = (-var_chaste_interface__fast_sodium_current_m_gate__m + var_fast_sodium_current_m_gate__m_inf) / var_fast_sodium_current_m_gate__tau_m; // 1 / millisecond
        const double var_membrane__V_c = 0.016403999999999998; // micrometre3
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_SR = (-var_calcium_dynamics__i_leak - var_calcium_dynamics__i_rel + var_calcium_dynamics__i_up) * var_calcium_dynamics__Ca_sr_bufsr * var_membrane__V_c / var_calcium_dynamics__V_sr; // millimolar / millisecond
        const double var_membrane__i_Stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_membrane__i_Stim = var_membrane__i_Stim_converted / HeartConfig::Instance()->GetCapacitance(); // picoA_per_picoF
        const double var_rapid_time_dependent_potassium_current_Xr1_gate__alpha_xr1 = 450.0 / (1.0 + exp(-4.5 - 0.10000000000000001 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_rapid_time_dependent_potassium_current_Xr1_gate__beta_xr1 = 6.0 / (1.0 + exp(2.6086956521739131 + 0.086956521739130432 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_rapid_time_dependent_potassium_current_Xr1_gate__tau_xr1 = var_rapid_time_dependent_potassium_current_Xr1_gate__alpha_xr1 * var_rapid_time_dependent_potassium_current_Xr1_gate__beta_xr1; // millisecond
        const double var_rapid_time_dependent_potassium_current_Xr1_gate__xr1_inf = 1 / (1.0 + exp(-3.7142857142857144 - 0.14285714285714285 * var_chaste_interface__membrane__V)); // dimensionless
        const double d_dt_chaste_interface_var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = (-var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 + var_rapid_time_dependent_potassium_current_Xr1_gate__xr1_inf) / var_rapid_time_dependent_potassium_current_Xr1_gate__tau_xr1; // 1 / millisecond
        const double var_rapid_time_dependent_potassium_current_Xr2_gate__alpha_xr2 = 3.0 / (1.0 + exp(-3.0 - 0.050000000000000003 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_rapid_time_dependent_potassium_current_Xr2_gate__beta_xr2 = 1.1200000000000001 / (1.0 + exp(-3.0 + 0.050000000000000003 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_rapid_time_dependent_potassium_current_Xr2_gate__tau_xr2 = var_rapid_time_dependent_potassium_current_Xr2_gate__alpha_xr2 * var_rapid_time_dependent_potassium_current_Xr2_gate__beta_xr2; // millisecond
        const double var_rapid_time_dependent_potassium_current_Xr2_gate__xr2_inf = 1 / (1.0 + exp(3.6666666666666665 + 0.041666666666666664 * var_chaste_interface__membrane__V)); // dimensionless
        const double d_dt_chaste_interface_var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = (-var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 + var_rapid_time_dependent_potassium_current_Xr2_gate__xr2_inf) / var_rapid_time_dependent_potassium_current_Xr2_gate__tau_xr2; // 1 / millisecond
        const double var_reversal_potentials__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__calcium_dynamics__Ca_i) / var_membrane__F; // millivolt
        const double var_calcium_background_current__i_b_Ca = (-var_reversal_potentials__E_Ca + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9); // picoA_per_picoF
        const double var_reversal_potentials__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__potassium_dynamics__K_i) / var_membrane__F; // millivolt
        const double var_inward_rectifier_potassium_current__alpha_K1 = 0.10000000000000001 / (1.0 + exp(-12.0 + 0.059999999999999998 * var_chaste_interface__membrane__V - 0.059999999999999998 * var_reversal_potentials__E_K)); // per_millisecond
        const double var_inward_rectifier_potassium_current__beta_K1 = (exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__V - 0.10000000000000001 * var_reversal_potentials__E_K) + 3.0 * exp(0.02 + 0.00020000000000000001 * var_chaste_interface__membrane__V - 0.00020000000000000001 * var_reversal_potentials__E_K)) / (1.0 + exp(0.5 * var_reversal_potentials__E_K - 0.5 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_inward_rectifier_potassium_current__xK1_inf = var_inward_rectifier_potassium_current__alpha_K1 / (var_inward_rectifier_potassium_current__alpha_K1 + var_inward_rectifier_potassium_current__beta_K1); // dimensionless
        const double var_inward_rectifier_potassium_current__i_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 5)) * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 16) * var_inward_rectifier_potassium_current__xK1_inf; // picoA_per_picoF
        const double var_potassium_pump_current__i_p_K = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 17) / (1.0 + exp(4.1806020066889626 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // picoA_per_picoF
        const double var_rapid_time_dependent_potassium_current__i_Kr = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 5)) * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 18) * var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 * var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2; // picoA_per_picoF
        const double var_reversal_potentials__P_kna = 0.029999999999999999; // dimensionless
        const double var_slow_time_dependent_potassium_current_Xs_gate__alpha_xs = 1100.0 / sqrt(1.0 + exp(-1.6666666666666667 - 0.16666666666666666 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_slow_time_dependent_potassium_current_Xs_gate__beta_xs = 1 / (1.0 + exp(-3.0 + 0.050000000000000003 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_slow_time_dependent_potassium_current_Xs_gate__tau_xs = var_slow_time_dependent_potassium_current_Xs_gate__alpha_xs * var_slow_time_dependent_potassium_current_Xs_gate__beta_xs; // millisecond
        const double var_slow_time_dependent_potassium_current_Xs_gate__xs_inf = 1 / (1.0 + exp(-0.35714285714285715 - 0.071428571428571425 * var_chaste_interface__membrane__V)); // dimensionless
        const double d_dt_chaste_interface_var_slow_time_dependent_potassium_current_Xs_gate__Xs = (-var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs + var_slow_time_dependent_potassium_current_Xs_gate__xs_inf) / var_slow_time_dependent_potassium_current_Xs_gate__tau_xs; // 1 / millisecond
        const double var_sodium_calcium_exchanger_current__K_sat = 0.10000000000000001; // dimensionless
        const double var_sodium_calcium_exchanger_current__Km_Ca = 1.3799999999999999; // millimolar
        const double var_sodium_calcium_exchanger_current__Km_Nai = 87.5; // millimolar
        const double var_sodium_calcium_exchanger_current__alpha = 2.5; // dimensionless
        const double var_sodium_calcium_exchanger_current__gamma = 0.34999999999999998; // dimensionless
        const double var_reversal_potentials__E_Ks = var_membrane__R * var_membrane__T * log((var_reversal_potentials__P_kna * NV_Ith_S(mParameters, 6) + NV_Ith_S(mParameters, 5)) / (var_reversal_potentials__P_kna * var_chaste_interface__sodium_dynamics__Na_i + var_chaste_interface__potassium_dynamics__K_i)) / var_membrane__F; // millivolt
        const double var_reversal_potentials__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__sodium_dynamics__Na_i) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_reversal_potentials__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 13) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // picoA_per_picoF
        const double var_slow_time_dependent_potassium_current__i_Ks = pow(var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs, 2) * (-var_reversal_potentials__E_Ks + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 19); // picoA_per_picoF
        const double var_sodium_background_current__i_b_Na = (-var_reversal_potentials__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 10); // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__i_NaCa = (pow(var_chaste_interface__sodium_dynamics__Na_i, 3) * NV_Ith_S(mParameters, 4) * exp(var_membrane__F * var_chaste_interface__membrane__V * var_sodium_calcium_exchanger_current__gamma / (var_membrane__R * var_membrane__T)) - pow(NV_Ith_S(mParameters, 6), 3) * var_chaste_interface__calcium_dynamics__Ca_i * var_sodium_calcium_exchanger_current__alpha * exp((-1.0 + var_sodium_calcium_exchanger_current__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 20) / ((1.0 + var_sodium_calcium_exchanger_current__K_sat * exp((-1.0 + var_sodium_calcium_exchanger_current__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * (pow(var_sodium_calcium_exchanger_current__Km_Nai, 3) + pow(NV_Ith_S(mParameters, 6), 3)) * (NV_Ith_S(mParameters, 4) + var_sodium_calcium_exchanger_current__Km_Ca)); // picoA_per_picoF
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_i = (-var_calcium_dynamics__i_up - 0.5 * (-2.0 * var_sodium_calcium_exchanger_current__i_NaCa + var_L_type_Ca_current__i_CaL + var_calcium_background_current__i_b_Ca + var_calcium_pump_current__i_p_Ca) * NV_Ith_S(mParameters, 12) / (var_membrane__F * var_membrane__V_c) + var_calcium_dynamics__i_leak + var_calcium_dynamics__i_rel) * var_calcium_dynamics__Ca_i_bufc; // millimolar / millisecond
        const double var_sodium_potassium_pump_current__K_mNa = 40.0; // millimolar
        const double var_sodium_potassium_pump_current__K_mk = 1.0; // millimolar
        const double var_sodium_potassium_pump_current__i_NaK = NV_Ith_S(mParameters, 5) * var_chaste_interface__sodium_dynamics__Na_i * NV_Ith_S(mParameters, 21) / ((NV_Ith_S(mParameters, 5) + var_sodium_potassium_pump_current__K_mk) * (var_chaste_interface__sodium_dynamics__Na_i + var_sodium_potassium_pump_current__K_mNa) * (1.0 + 0.035299999999999998 * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)))); // picoA_per_picoF
        const double d_dt_chaste_interface_var_sodium_dynamics__Na_i = -(3.0 * var_sodium_calcium_exchanger_current__i_NaCa + 3.0 * var_sodium_potassium_pump_current__i_NaK + var_fast_sodium_current__i_Na + var_sodium_background_current__i_b_Na) * NV_Ith_S(mParameters, 12) * NV_Ith_S(mParameters, 3) / (var_membrane__F * var_membrane__V_c); // millimolar / millisecond
        const double var_transient_outward_current_r_gate__r_inf = 1 / (1.0 + exp(3.3333333333333335 - 0.16666666666666666 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_transient_outward_current_r_gate__tau_r = 0.80000000000000004 + 9.5 * exp(-0.88888888888888884 * pow((1 + 0.025000000000000001 * var_chaste_interface__membrane__V), 2)); // millisecond
        const double d_dt_chaste_interface_var_transient_outward_current_r_gate__r = (-var_chaste_interface__transient_outward_current_r_gate__r + var_transient_outward_current_r_gate__r_inf) / var_transient_outward_current_r_gate__tau_r; // 1 / millisecond
        const double var_transient_outward_current__i_to = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 22) * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s; // picoA_per_picoF
        const double d_dt_chaste_interface_var_potassium_dynamics__K_i = -(-2.0 * var_sodium_potassium_pump_current__i_NaK + var_inward_rectifier_potassium_current__i_K1 + var_membrane__i_Stim + var_potassium_pump_current__i_p_K + var_rapid_time_dependent_potassium_current__i_Kr + var_slow_time_dependent_potassium_current__i_Ks + var_transient_outward_current__i_to) * NV_Ith_S(mParameters, 12) * NV_Ith_S(mParameters, 3) / (var_membrane__F * var_membrane__V_c); // millimolar / millisecond
        const double var_transient_outward_current_s_gate__s_inf = 1 / (1.0 + exp(4.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_transient_outward_current_s_gate__tau_s = 3.0 + 5.0 / (1.0 + exp(-4.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)) + 85.0 * exp(-6.328125 * pow((1 + 0.022222222222222223 * var_chaste_interface__membrane__V), 2)); // millisecond
        const double d_dt_chaste_interface_var_transient_outward_current_s_gate__s = (-var_chaste_interface__transient_outward_current_s_gate__s + var_transient_outward_current_s_gate__s_inf) / var_transient_outward_current_s_gate__tau_s; // 1 / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__V = 0.0;
        }
        else
        {
            d_dt_chaste_interface_var_membrane__V = -var_L_type_Ca_current__i_CaL - var_calcium_background_current__i_b_Ca - var_calcium_pump_current__i_p_Ca - var_fast_sodium_current__i_Na - var_inward_rectifier_potassium_current__i_K1 - var_membrane__i_Stim - var_potassium_pump_current__i_p_K - var_rapid_time_dependent_potassium_current__i_Kr - var_slow_time_dependent_potassium_current__i_Ks - var_sodium_background_current__i_b_Na - var_sodium_calcium_exchanger_current__i_NaCa - var_sodium_potassium_pump_current__i_NaK - var_transient_outward_current__i_to; // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_membrane__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_calcium_dynamics__Ca_i;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_slow_time_dependent_potassium_current_Xs_gate__Xs;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_fast_sodium_current_m_gate__m;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_fast_sodium_current_h_gate__h;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_fast_sodium_current_j_gate__j;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_L_type_Ca_current_d_gate__d;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_L_type_Ca_current_f_gate__f;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_L_type_Ca_current_fCa_gate__fCa;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_transient_outward_current_s_gate__s;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_transient_outward_current_r_gate__r;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_calcium_dynamics__Ca_SR;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_calcium_dynamics__g;
        NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_sodium_dynamics__Na_i;
        NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_potassium_dynamics__K_i;
    }

    void Cellten_tusscher_model_2004_epiFromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -86.2
        double var_chaste_interface__calcium_dynamics__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0002
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.75
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.75
        double var_chaste_interface__L_type_Ca_current_d_gate__d = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__L_type_Ca_current_f_gate__f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__L_type_Ca_current_fCa_gate__fCa = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__Ca_SR = NV_Ith_S(rY, 13);
        // Units: millimolar; Initial value: 0.2
        double var_chaste_interface__calcium_dynamics__g = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__sodium_dynamics__Na_i = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 11.6
        double var_chaste_interface__potassium_dynamics__K_i = NV_Ith_S(rY, 16);
        // Units: millimolar; Initial value: 138.3
        const double var_x0 = exp(0.074867781645490947 * var_chaste_interface__membrane__V);
        const double var_x1 = var_x0 * var_chaste_interface__calcium_dynamics__Ca_i;
        const double var_x2 = NV_Ith_S(mParameters, 7) * var_chaste_interface__L_type_Ca_current_fCa_gate__fCa * var_chaste_interface__L_type_Ca_current_f_gate__f;
        const double var_x3 = var_x2 * var_chaste_interface__L_type_Ca_current_d_gate__d;
        const double var_x4 = 192970.68299999999 - 7223.6434794126253 * var_chaste_interface__membrane__V;
        const double var_x5 = var_x3 * var_x4;
        const double var_x6 = (var_chaste_interface__membrane__V >= -1.3356880329847825e-6) && (var_chaste_interface__membrane__V <= 1.3356880329847825e-6);
        const double var_x7 = var_x1 - 0.34100000000000003 * NV_Ith_S(mParameters, 4);
        const double var_x8 = var_x3 * var_x7;
        const double var_x9 = -1.0 + var_x0;
        const double var_x10 = 1 / var_x9;
        const double var_x11 = 14447.286958825251 * var_x10;
        const double var_x12 = var_x11 * var_x8;
        const double var_x13 = 1081.6363254030778 * var_chaste_interface__membrane__V;
        const double var_x14 = ((var_x6) ? (var_x3 * (2463.2624264797055 * NV_Ith_S(mParameters, 4) - 7223.6434794126253 * var_x1) + 0.074867781645490947 * var_x1 * var_x5) : (var_x12 + var_x1 * var_x10 * var_x13 * var_x3 - var_x0 * var_x13 * var_x8 / pow(var_x9, 2)));
        const double var_x15 = exp(4.1806020066889626 - 0.16722408026755853 * var_chaste_interface__membrane__V);
        const double var_x16 = 1.0 + var_x15;
        const double var_x17 = NV_Ith_S(mParameters, 17) / var_x16;
        const double var_x18 = pow(var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs, 2) * NV_Ith_S(mParameters, 19);
        const double var_x19 = NV_Ith_S(mParameters, 22) * var_chaste_interface__transient_outward_current_r_gate__r;
        const double var_x20 = var_x19 * var_chaste_interface__transient_outward_current_s_gate__s;
        const double var_x21 = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3);
        const double var_x22 = var_x21 * NV_Ith_S(mParameters, 13) * var_chaste_interface__fast_sodium_current_j_gate__j;
        const double var_x23 = var_x22 * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x24 = sqrt(NV_Ith_S(mParameters, 5));
        const double var_x25 = var_x24 * NV_Ith_S(mParameters, 18) * var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2;
        const double var_x26 = 0.43033148291193518 * var_x25;
        const double var_x27 = 1 / var_chaste_interface__potassium_dynamics__K_i;
        const double var_x28 = log(var_x27 * NV_Ith_S(mParameters, 5));
        const double var_x29 = exp(-12.0 + 0.059999999999999998 * var_chaste_interface__membrane__V - 1.6028256395817388 * var_x28);
        const double var_x30 = 1.0 + var_x29;
        const double var_x31 = 1 / var_x30;
        const double var_x32 = exp(13.356880329847826 * var_x28 - 0.5 * var_chaste_interface__membrane__V);
        const double var_x33 = 1.0 + var_x32;
        const double var_x34 = 1 / var_x33;
        const double var_x35 = 0.10000000000000001 * var_chaste_interface__membrane__V;
        const double var_x36 = exp(-1.0 + var_x35 - 2.6713760659695653 * var_x28);
        const double var_x37 = exp(0.02 + 0.00020000000000000001 * var_chaste_interface__membrane__V - 0.0053427521319391299 * var_x28);
        const double var_x38 = var_x36 + 3.0 * var_x37;
        const double var_x39 = 0.10000000000000001 * var_x31 + var_x34 * var_x38;
        const double var_x40 = var_x24 * NV_Ith_S(mParameters, 16) / var_x39;
        const double var_x41 = var_x31 * var_x40;
        const double var_x42 = 26.713760659695652 * var_x28;
        const double var_x43 = -var_x42 + var_chaste_interface__membrane__V;
        const double var_x44 = var_x15 * var_x43 * NV_Ith_S(mParameters, 17) / pow(var_x16, 2);
        const double var_x45 = exp(-0.024332029034784559 * var_chaste_interface__membrane__V);
        const double var_x46 = pow(NV_Ith_S(mParameters, 6), 3);
        const double var_x47 = var_x45 * var_x46;
        const double var_x48 = var_x47 * var_chaste_interface__calcium_dynamics__Ca_i;
        const double var_x49 = NV_Ith_S(mParameters, 4) * exp(0.013101861787960915 * var_chaste_interface__membrane__V);
        const double var_x50 = var_x49 * pow(var_chaste_interface__sodium_dynamics__Na_i, 3);
        const double var_x51 = 1.0 + 0.10000000000000001 * var_x45;
        const double var_x52 = NV_Ith_S(mParameters, 20) / ((669921.875 + var_x46) * (1.3799999999999999 + NV_Ith_S(mParameters, 4)));
        const double var_x53 = var_x52 / var_x51;
        const double var_x54 = var_x53 * (0.060830072586961395 * var_x48 + 0.013101861787960915 * var_x50);
        const double var_x55 = var_x29 / pow(var_x30, 2);
        const double var_x56 = var_x40 * var_x43;
        const double var_x57 = var_x55 * var_x56;
        const double var_x58 = var_x50 - 2.5 * var_x48;
        const double var_x59 = var_x45 * var_x52 * var_x58 / pow(var_x51, 2);
        const double var_x60 = var_x32 * var_x38 / pow(var_x33, 2);
        const double var_x61 = 0.0060000000000000001 * var_x55 - 0.5 * var_x60 - var_x34 * (0.10000000000000001 * var_x36 + 0.00060000000000000006 * var_x37);
        const double var_x62 = var_x24 * var_x43;
        const double var_x63 = var_x31 * var_x62 * NV_Ith_S(mParameters, 16) / pow(var_x39, 2);
        const double var_x64 = 0.043033148291193521 * var_x63;
        const double var_x65 = -0.037433890822745473 * var_chaste_interface__membrane__V;
        const double var_x66 = exp(var_x65);
        const double var_x67 = exp(-0.0037433890822745472 * var_chaste_interface__membrane__V);
        const double var_x68 = 1.0 + 0.035299999999999998 * var_x66 + 0.1245 * var_x67;
        const double var_x69 = 1 / (1.0 + NV_Ith_S(mParameters, 5));
        const double var_x70 = var_x69 * NV_Ith_S(mParameters, 5) * NV_Ith_S(mParameters, 21) / (40.0 + var_chaste_interface__sodium_dynamics__Na_i);
        const double var_x71 = var_x70 * (0.001321416346042915 * var_x66 + 0.00046605194074318115 * var_x67) * var_chaste_interface__sodium_dynamics__Na_i / pow(var_x68, 2);
        const double var_x72 = var_x11 * var_chaste_interface__membrane__V;
        const double var_x73 = ((var_x6) ? (var_x0 * var_x5) : (var_x0 * var_x3 * var_x72));
        const double var_x74 = 0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Ca_i;
        const double var_x75 = NV_Ith_S(mParameters, 11) / var_x74;
        const double var_x76 = 1 / var_chaste_interface__calcium_dynamics__Ca_i;
        const double var_x77 = var_x76 * NV_Ith_S(mParameters, 9);
        const double var_x78 = var_chaste_interface__calcium_dynamics__Ca_i * NV_Ith_S(mParameters, 11) / pow(var_x74, 2);
        const double var_x79 = var_x47 * var_x53;
        const double var_x80 = var_x62 * NV_Ith_S(mParameters, 18) * var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1;
        const double var_x81 = 1 / (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Na_i + var_chaste_interface__potassium_dynamics__K_i);
        const double var_x82 = (-26.713760659695652 * log(var_x81 * (0.029999999999999999 * NV_Ith_S(mParameters, 6) + NV_Ith_S(mParameters, 5))) + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 19) * var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs;
        const double var_x83 = 1 / var_chaste_interface__sodium_dynamics__Na_i;
        const double var_x84 = -26.713760659695652 * log(var_x83 * NV_Ith_S(mParameters, 6)) + var_chaste_interface__membrane__V;
        const double var_x85 = var_x84 * NV_Ith_S(mParameters, 13) * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x86 = var_x85 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 2) * var_chaste_interface__fast_sodium_current_j_gate__j;
        const double var_x87 = var_x22 * var_x84;
        const double var_x88 = var_x21 * var_x85;
        const double var_x89 = var_x4 * var_x7;
        const double var_x90 = var_x7 * var_x72;
        const double var_x91 = ((var_x6) ? (var_x2 * var_x89) : (var_x2 * var_x90));
        const double var_x92 = NV_Ith_S(mParameters, 7) * var_chaste_interface__L_type_Ca_current_d_gate__d;
        const double var_x93 = var_x89 * var_x92;
        const double var_x94 = var_x90 * var_x92;
        const double var_x95 = ((var_x6) ? (var_x93 * var_chaste_interface__L_type_Ca_current_fCa_gate__fCa) : (var_x94 * var_chaste_interface__L_type_Ca_current_fCa_gate__fCa));
        const double var_x96 = ((var_x6) ? (var_x93 * var_chaste_interface__L_type_Ca_current_f_gate__f) : (var_x94 * var_chaste_interface__L_type_Ca_current_f_gate__f));
        const double var_x97 = var_x42 - var_chaste_interface__membrane__V;
        const double var_x98 = NV_Ith_S(mParameters, 22) * var_chaste_interface__transient_outward_current_s_gate__s;
        const double var_x99 = var_x83 * NV_Ith_S(mParameters, 10);
        const double var_x100 = var_x18 * var_x81;
        const double var_x101 = 1 / var_x68;
        const double var_x102 = var_x101 * var_x70;
        const double var_x103 = var_x23 * var_x83;
        const double var_x104 = var_x101 * var_x69 * NV_Ith_S(mParameters, 5) * var_chaste_interface__sodium_dynamics__Na_i * NV_Ith_S(mParameters, 21) / pow((1 + 0.025000000000000001 * var_chaste_interface__sodium_dynamics__Na_i), 2);
        const double var_x105 = var_x49 * var_x53 * pow(var_chaste_interface__sodium_dynamics__Na_i, 2);
        const double var_x106 = var_x17 * var_x27;
        const double var_x107 = var_x20 * var_x27;
        const double var_x108 = var_x27 * var_x41;
        const double var_x109 = var_x25 * var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1;
        const double var_x110 = var_x109 * var_x27;
        const double var_x111 = var_x27 * var_x55;
        const double var_x112 = 0.16028256395817389 * var_x111 - var_x34 * (2.6713760659695653 * var_x27 * var_x36 + 0.01602825639581739 * var_x27 * var_x37) - 13.356880329847826 * var_x27 * var_x60;
        const double var_x113 = var_x111 * var_x56;
        const double var_x114 = 0.001 + var_chaste_interface__calcium_dynamics__Ca_i;
        const double var_x115 = 1.0 + 0.00014999999999999999 / pow(var_x114, 2);
        const double var_x116 = 1 / var_x115;
        const double var_x117 = var_x116;
        const double var_x118 = -NV_Ith_S(mParameters, 0);
        const double var_x119 = 1.0 + 6.2499999999999997e-8 / pow(var_chaste_interface__calcium_dynamics__Ca_i, 2);
        const double var_x120 = 1.2499999999999999e-7 * NV_Ith_S(mParameters, 2) / (pow(var_x119, 2) * pow(var_chaste_interface__calcium_dynamics__Ca_i, 3));
        const double var_x121 = (-var_chaste_interface__calcium_dynamics__Ca_i + var_chaste_interface__calcium_dynamics__Ca_SR) * NV_Ith_S(mParameters, 0);
        const double var_x122 = NV_Ith_S(mParameters, 2) / var_x119;
        const double var_x123 = 0.00031590674984870116 * NV_Ith_S(mParameters, 12);
        const double var_x124 = pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2);
        const double var_x125 = 0.0625 + var_x124;
        const double var_x126 = NV_Ith_S(mParameters, 1) / var_x125;
        const double var_x127 = var_x124 * var_x126;
        const double var_x128 = 0.0082319999999999997 + var_x127;
        const double var_x129 = var_x128 * var_chaste_interface__calcium_dynamics__g;
        const double var_x130 = var_x129 * var_chaste_interface__L_type_Ca_current_d_gate__d;
        const double var_x131 = var_x116 * var_x123;
        const double var_x132 = 2 * pow(var_chaste_interface__calcium_dynamics__Ca_SR, 3) * NV_Ith_S(mParameters, 1) / pow(var_x125, 2);
        const double var_x133 = 2 * var_x126 * var_chaste_interface__calcium_dynamics__Ca_SR;
        const double var_x134 = var_chaste_interface__L_type_Ca_current_d_gate__d * var_chaste_interface__calcium_dynamics__g;
        const double var_x135 = -0.10000000000000001 * var_chaste_interface__membrane__V;
        const double var_x136 = exp(-4.5 + var_x135);
        const double var_x137 = 1.0 + var_x136;
        const double var_x138 = 0.14285714285714285 * var_chaste_interface__membrane__V;
        const double var_x139 = exp(-3.7142857142857144 - var_x138);
        const double var_x140 = 1.0 + var_x139;
        const double var_x141 = -var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 + 1 / var_x140;
        const double var_x142 = exp(2.6086956521739131 + 0.086956521739130432 * var_chaste_interface__membrane__V);
        const double var_x143 = 0.00037037037037037035 + 0.00037037037037037035 * var_x142;
        const double var_x144 = var_x137 * var_x143;
        const double var_x145 = 0.050000000000000003 * var_chaste_interface__membrane__V;
        const double var_x146 = -var_x145;
        const double var_x147 = exp(-3.0 + var_x146);
        const double var_x148 = 1.0 + var_x147;
        const double var_x149 = exp(3.6666666666666665 + 0.041666666666666664 * var_chaste_interface__membrane__V);
        const double var_x150 = 1.0 + var_x149;
        const double var_x151 = -var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 + 1 / var_x150;
        const double var_x152 = exp(-3.0 + var_x145);
        const double var_x153 = 0.29761904761904762 + 0.29761904761904762 * var_x152;
        const double var_x154 = var_x148 * var_x153;
        const double var_x155 = -0.16666666666666666 * var_chaste_interface__membrane__V;
        const double var_x156 = exp(-1.6666666666666667 + var_x155);
        const double var_x157 = sqrt(1.0 + var_x156);
        const double var_x158 = exp(-0.35714285714285715 - 0.071428571428571425 * var_chaste_interface__membrane__V);
        const double var_x159 = 1.0 + var_x158;
        const double var_x160 = -var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs + 1 / var_x159;
        const double var_x161 = 1.0 + var_x152;
        const double var_x162 = var_x157 * var_x161;
        const double var_x163 = 0.20000000000000001 * var_chaste_interface__membrane__V;
        const double var_x164 = exp(7.0 + var_x163);
        const double var_x165 = 1.0 + var_x164;
        const double var_x166 = 1 / var_x165;
        const double var_x167 = exp(-0.25 + 0.0050000000000000001 * var_chaste_interface__membrane__V);
        const double var_x168 = 1.0 + var_x167;
        const double var_x169 = 1 / var_x168;
        const double var_x170 = 1 / (0.10000000000000001 * var_x166 + 0.10000000000000001 * var_x169);
        const double var_x171 = exp(-6.2967884828349945 - 0.11074197120708749 * var_chaste_interface__membrane__V);
        const double var_x172 = 1.0 + var_x171;
        const double var_x173 = -var_chaste_interface__fast_sodium_current_m_gate__m + 1 / pow(var_x172, 2);
        const double var_x174 = exp(-12.0 - var_x163);
        const double var_x175 = 1.0 + var_x174;
        const double var_x176 = var_x170 * var_x175;
        const double var_x177 = exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__membrane__V);
        const double var_x178 = var_chaste_interface__membrane__V < -40.0;
        const double var_x179 = exp(0.34849999999999998 * var_chaste_interface__membrane__V);
        const double var_x180 = exp(0.079000000000000001 * var_chaste_interface__membrane__V);
        const double var_x181 = exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__membrane__V);
        const double var_x182 = 1.0 + var_x181;
        const double var_x183 = 0.01 * NV_Ith_S(mParameters, 14);
        const double var_x184 = exp(9.6298788694481825 + 0.13458950201884254 * var_chaste_interface__membrane__V - 0.13458950201884254 * NV_Ith_S(mParameters, 15));
        const double var_x185 = 1.0 + var_x184;
        const double var_x186 = 1.0 - var_x183;
        const double var_x187 = var_x183 + var_x186 / pow(var_x185, 2);
        const double var_x188 = ((var_x178) ? (0.057000000000000002 * var_x177) : (0));
        const double var_x189 = ((var_x178) ? (310000.0 * var_x179 + 2.7000000000000002 * var_x180) : (5.9230769230769234 / var_x182));
        const double var_x190 = 0.26917900403768508 * var_x184 * var_x186 / pow(var_x185, 3);
        const double var_x191 = exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__membrane__V);
        const double var_x192 = 1.0 + var_x191;
        const double var_x193 = exp(-0.01052 * var_chaste_interface__membrane__V);
        const double var_x194 = var_x193 / var_x192;
        const double var_x195 = exp(-3.2000000000000002 - var_x35);
        const double var_x196 = 1.0 + var_x195;
        const double var_x197 = exp(0.057000000000000002 * var_chaste_interface__membrane__V);
        const double var_x198 = var_x197 / var_x196;
        const double var_x199 = exp(0.24440000000000001 * var_chaste_interface__membrane__V);
        const double var_x200 = exp(-0.043909999999999998 * var_chaste_interface__membrane__V);
        const double var_x201 = -25428.0 * var_x199 - 6.9480000000000002e-6 * var_x200;
        const double var_x202 = exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V);
        const double var_x203 = 1.0 + var_x202;
        const double var_x204 = 1 / var_x203;
        const double var_x205 = var_x201 * var_x204;
        const double var_x206 = 37.780000000000001 + var_chaste_interface__membrane__V;
        const double var_x207 = ((var_x178) ? (0.024240000000000001 * var_x194) : (0.59999999999999998 * var_x198));
        const double var_x208 = ((var_x178) ? (var_x205 * var_x206) : (0));
        const double var_x209 = exp(2.5 + var_x146);
        const double var_x210 = 1.0 + var_x209;
        const double var_x211 = 1 / var_x210;
        const double var_x212 = exp(1.0 + var_x163);
        const double var_x213 = 1.0 + var_x212;
        const double var_x214 = 1 / var_x213;
        const double var_x215 = exp(-2.6923076923076925 - 0.076923076923076927 * var_chaste_interface__membrane__V);
        const double var_x216 = 1.0 + var_x215;
        const double var_x217 = 0.25 + 1.3999999999999999 / var_x216;
        const double var_x218 = var_x214 * var_x217;
        const double var_x219 = exp(-0.66666666666666663 - 0.13333333333333333 * var_chaste_interface__membrane__V);
        const double var_x220 = 1.0 + var_x219;
        const double var_x221 = 1 / (var_x211 + 1.3999999999999999 * var_x218);
        const double var_x222 = exp(2.5 + var_x135);
        const double var_x223 = 1.0 + var_x222;
        const double var_x224 = 1 / var_x223;
        const double var_x225 = exp(-3.0375000000000001 * pow((1 + 0.037037037037037035 * var_chaste_interface__membrane__V), 2));
        const double var_x226 = exp(2.8571428571428572 + var_x138);
        const double var_x227 = 1.0 + var_x226;
        const double var_x228 = 1125.0 * var_x225;
        const double var_x229 = 1 / (80.0 + var_x228 + 165.0 * var_x224);
        const double var_x230 = var_chaste_interface__membrane__V > -60.0;
        const double var_x231 = exp(-5.0 + 10000.0 * var_chaste_interface__calcium_dynamics__Ca_i);
        const double var_x232 = 1.0 + var_x231;
        const double var_x233 = exp(-0.9375 + 1250.0 * var_chaste_interface__calcium_dynamics__Ca_i);
        const double var_x234 = 1.0 + var_x233;
        const double var_x235 = pow(var_chaste_interface__calcium_dynamics__Ca_i, 8);
        const double var_x236 = (var_x230) && (var_chaste_interface__L_type_Ca_current_fCa_gate__fCa < 0.15753424657534248 + 0.068493150684931517 / var_x232 + 0.13698630136986303 / var_x234 + 0.68493150684931503 / (1.0 + 8.034023767017109e+27 * var_x235));
        const double var_x237 = 1 / NV_Ith_S(mParameters, 8);
        const double var_x238 = exp(-4.0 + var_x163);
        const double var_x239 = 1.0 + var_x238;
        const double var_x240 = 1 / var_x239;
        const double var_x241 = exp(-6.328125 * pow((1 + 0.022222222222222223 * var_chaste_interface__membrane__V), 2));
        const double var_x242 = exp(4.0 + var_x163);
        const double var_x243 = 1.0 + var_x242;
        const double var_x244 = 85.0 * var_x241;
        const double var_x245 = 1 / (3.0 + var_x244 + 5.0 * var_x240);
        const double var_x246 = exp(3.3333333333333335 + var_x155);
        const double var_x247 = 1.0 + var_x246;
        const double var_x248 = exp(-0.88888888888888884 * pow((1 + 0.025000000000000001 * var_chaste_interface__membrane__V), 2));
        const double var_x249 = 1 / (0.80000000000000004 + 9.5 * var_x248);
        const double var_x250 = 0.29999999999999999 + var_chaste_interface__calcium_dynamics__Ca_SR;
        const double var_x251 = pow(var_x250, (-2));
        const double var_x252 = 14.994515539305301 / (1.0 + 3.0 * var_x251);
        const double var_x253 = var_x252 * (-0.0082319999999999997 - var_x127);
        const double var_x254 = pow(var_chaste_interface__calcium_dynamics__Ca_i, 6);
        const double var_x255 = var_chaste_interface__calcium_dynamics__Ca_i < 0.00035;
        const double var_x256 = pow(var_chaste_interface__calcium_dynamics__Ca_i, 16);
        const double var_x257 = (var_x230) && (((var_x255) || (var_chaste_interface__calcium_dynamics__g < 1 / (1.0 + 1.9720198874049176e+55 * var_x256)))) && (((var_chaste_interface__calcium_dynamics__Ca_i >= 0.00035) || (var_chaste_interface__calcium_dynamics__g < 1 / (1.0 + 5.439910241481016e+20 * var_x254))));
        const double var_x258 = NV_Ith_S(mParameters, 12) * NV_Ith_S(mParameters, 3);
        const double var_x259 = 0.00063181349969740233 * var_x258;
        const double var_x260 = 2.7188924024856265e-5 * var_x63;
        const double var_x261 = 0.00027188924024856262 * var_x258;
        const double var_x262 = var_x259 * var_x43;
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x14 - var_x17 - var_x18 - var_x20 - var_x23 - var_x54 - var_x71 - NV_Ith_S(mParameters, 9) - NV_Ith_S(mParameters, 10) + 0.0025819888974716113 * var_x57 - 0.0024332029034784559 * var_x59 - 0.043033148291193521 * var_x41 - 0.16722408026755853 * var_x44 - var_x26 * var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 - var_x61 * var_x64);
        IJth(rJacobian, 1, 0) = var_x117 * (0.00063181349969740233 * var_x54 + 1.5373304419206038e-6 * var_x59 - 0.00031590674984870116 * var_x14 - 0.00031590674984870116 * NV_Ith_S(mParameters, 9)) * NV_Ith_S(mParameters, 12);
        IJth(rJacobian, 2, 0) = 3.2206119162640899e-5 * var_x137 * var_x141 * var_x142 + 0.14285714285714285 * var_x139 * var_x144 / pow(var_x140, 2) - 0.10000000000000001 * var_x136 * var_x141 * var_x143;
        IJth(rJacobian, 3, 0) = 0.01488095238095238 * var_x148 * var_x151 * var_x152 - 0.041666666666666664 * var_x149 * var_x154 / pow(var_x150, 2) - 0.050000000000000003 * var_x147 * var_x151 * var_x153;
        IJth(rJacobian, 4, 0) = 4.5454545454545452e-5 * var_x152 * var_x157 * var_x160 + 6.4935064935064935e-5 * var_x158 * var_x162 / pow(var_x159, 2) - 7.5757575757575758e-5 * var_x156 * var_x160 * var_x161 / var_x157;
        IJth(rJacobian, 5, 0) = 0.22148394241417499 * var_x171 * var_x176 / pow(var_x172, 3) - 0.20000000000000001 * var_x170 * var_x173 * var_x174 + 99.999999999999986 * var_x173 * var_x175 * (0.02 * var_x164 / pow(var_x165, 2) + 0.00050000000000000001 * var_x167 / pow(var_x168, 2)) / pow((var_x166 + var_x169), 2);
        IJth(rJacobian, 6, 0) = (var_x187 - var_chaste_interface__fast_sodium_current_h_gate__h) * (((var_x178) ? (-0.008382352941176471 * var_x177) : (0)) + ((var_x178) ? (108035.0 * var_x179 + 0.21330000000000002 * var_x180) : (0.53361053361053368 * var_x181 / pow(var_x182, 2)))) - var_x190 * (var_x188 + var_x189);
        IJth(rJacobian, 7, 0) = (var_x187 - var_chaste_interface__fast_sodium_current_j_gate__j) * (((var_x178) ? (-0.00025500480000000003 * var_x194 + 0.0033402720000000005 * var_x191 * var_x193 / pow(var_x192, 2)) : (0.034200000000000001 * var_x198 + 0.059999999999999998 * var_x195 * var_x197 / pow(var_x196, 2))) + ((var_x178) ? (var_x205 + var_x204 * var_x206 * (3.0508668000000001e-7 * var_x200 - 6214.6032000000005 * var_x199) - 0.311 * var_x201 * var_x202 * var_x206 / pow(var_x203, 2)) : (0))) - var_x190 * (var_x207 + var_x208);
        IJth(rJacobian, 8, 0) = 0.51020408163265307 * (-var_chaste_interface__L_type_Ca_current_d_gate__d + 1 / var_x220) * (-0.050000000000000003 * var_x209 / pow(var_x210, 2) + 0.27999999999999997 * var_x212 * var_x217 / pow(var_x213, 2) - 0.15076923076923074 * var_x214 * var_x215 / pow(var_x216, 2)) / pow((var_x218 + 0.7142857142857143 * var_x211), 2) + 0.13333333333333333 * var_x219 * var_x221 / pow(var_x220, 2);
        IJth(rJacobian, 9, 0) = 7.9012345679012348e-7 * (-var_chaste_interface__L_type_Ca_current_f_gate__f + 1 / var_x227) * (-var_x228 * (-0.22500000000000001 - 0.0083333333333333332 * var_chaste_interface__membrane__V) - 16.5 * var_x222 / pow(var_x223, 2)) / pow((0.071111111111111111 + var_x225 + 0.14666666666666667 * var_x224), 2) - 0.14285714285714285 * var_x226 * var_x229 / pow(var_x227, 2);
        IJth(rJacobian, 11, 0) = 0.00013840830449826991 * (-var_chaste_interface__transient_outward_current_s_gate__s + 1 / var_x243) * (-var_x244 * (-0.28125 - 0.0062500000000000003 * var_chaste_interface__membrane__V) + var_x238 / pow(var_x239, 2)) / pow((0.035294117647058823 + var_x241 + 0.058823529411764705 * var_x240), 2) - 0.20000000000000001 * var_x242 * var_x245 / pow(var_x243, 2);
        IJth(rJacobian, 12, 0) = 0.16666666666666666 * var_x246 * var_x249 / pow(var_x247, 2) - 0.10526315789473684 * var_x248 * (-0.044444444444444446 - 0.0011111111111111111 * var_chaste_interface__membrane__V) * (-var_chaste_interface__transient_outward_current_r_gate__r + 1 / var_x247) / pow((0.084210526315789472 + var_x248), 2);
        IJth(rJacobian, 15, 0) = var_x258 * (-0.0018954404990922068 * var_x54 - 0.0018954404990922068 * var_x71 - 4.6119913257618111e-6 * var_x59 - 0.00063181349969740233 * var_x23 - 0.00063181349969740233 * NV_Ith_S(mParameters, 10));
        IJth(rJacobian, 16, 0) = var_x258 * (0.0012636269993948047 * var_x71 + 1.631335441491376e-6 * var_x57 - 0.00027188924024856262 * var_x109 - 2.7188924024856265e-5 * var_x41 - 0.00010565443138752546 * var_x44 - 0.00063181349969740233 * var_x17 - 0.00063181349969740233 * var_x18 - 0.00063181349969740233 * var_x20 - var_x260 * var_x61);
        IJth(rJacobian, 0, 1) = mSetVoltageDerivativeToZero ? 0.0 : (var_x78 - var_x73 - var_x75 + 2.5 * var_x79 - 13.356880329847826 * var_x77);
        IJth(rJacobian, 1, 1) = var_x117 * (var_x118 - var_x120 + (0.00031590674984870116 * var_x78 - 0.0042195286531202733 * var_x77 - 0.0015795337492435057 * var_x79 - 0.00031590674984870116 * var_x73 - 0.00031590674984870116 * var_x75) * NV_Ith_S(mParameters, 12)) + 0.00029999999999999997 * (var_x121 + var_x130 - var_x122 - var_x123 * (var_x75 * var_chaste_interface__calcium_dynamics__Ca_i + (-13.356880329847826 * log(var_x76 * NV_Ith_S(mParameters, 4)) + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9) - 2.0 * var_x53 * var_x58 + ((var_x6) ? (192970.68299999999 * var_x8 * (1.0 + var_x65)) : (var_x12 * var_chaste_interface__membrane__V)))) / (pow(var_x114, 3) * pow(var_x115, 2));
        IJth(rJacobian, 10, 1) = ((var_x236) ? (0) : (var_x237 * (-6.8203084950904297e-28 * pow(var_chaste_interface__calcium_dynamics__Ca_i, 7) / pow((1.2447063003540035e-28 + var_x235), 2) - 171.23287671232876 * var_x233 / pow(var_x234, 2) - 684.93150684931504 * var_x231 / pow(var_x232, 2))));
        IJth(rJacobian, 13, 1) = var_x252 * (var_x120 + NV_Ith_S(mParameters, 0));
        IJth(rJacobian, 14, 1) = ((var_x257) ? (0) : ((var_x255) ? (-5.5147968749999998e-21 * pow(var_chaste_interface__calcium_dynamics__Ca_i, 5) / pow((1.8382656249999998e-21 + var_x254), 2)) : (-4.0567542199219961e-55 * pow(var_chaste_interface__calcium_dynamics__Ca_i, 15) / pow((5.0709427749024951e-56 + var_x256), 2))));
        IJth(rJacobian, 15, 1) = 0.0047386012477305169 * var_x258 * var_x79;
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x26 * var_x43);
        IJth(rJacobian, 2, 2) = -var_x144;
        IJth(rJacobian, 16, 2) = -var_x25 * var_x261 * var_x43;
        IJth(rJacobian, 0, 3) = mSetVoltageDerivativeToZero ? 0.0 : (-0.43033148291193518 * var_x80);
        IJth(rJacobian, 3, 3) = -var_x154;
        IJth(rJacobian, 16, 3) = -var_x261 * var_x80;
        IJth(rJacobian, 0, 4) = mSetVoltageDerivativeToZero ? 0.0 : (-2 * var_x82);
        IJth(rJacobian, 4, 4) = -0.00090909090909090909 * var_x162;
        IJth(rJacobian, 16, 4) = -0.0012636269993948047 * var_x258 * var_x82;
        IJth(rJacobian, 0, 5) = mSetVoltageDerivativeToZero ? 0.0 : (-3 * var_x86);
        IJth(rJacobian, 5, 5) = -var_x176;
        IJth(rJacobian, 15, 5) = -0.0018954404990922068 * var_x258 * var_x86;
        IJth(rJacobian, 0, 6) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x87);
        IJth(rJacobian, 6, 6) = -var_x188 - var_x189;
        IJth(rJacobian, 15, 6) = -var_x259 * var_x87;
        IJth(rJacobian, 0, 7) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x88);
        IJth(rJacobian, 7, 7) = -var_x207 - var_x208;
        IJth(rJacobian, 15, 7) = -var_x259 * var_x88;
        IJth(rJacobian, 0, 8) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x91);
        IJth(rJacobian, 1, 8) = var_x117 * (var_x129 - var_x123 * var_x91);
        IJth(rJacobian, 8, 8) = -var_x221;
        IJth(rJacobian, 13, 8) = var_x253 * var_chaste_interface__calcium_dynamics__g;
        IJth(rJacobian, 0, 9) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x95);
        IJth(rJacobian, 1, 9) = -var_x131 * var_x95;
        IJth(rJacobian, 9, 9) = -var_x229;
        IJth(rJacobian, 0, 10) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x96);
        IJth(rJacobian, 1, 10) = -var_x131 * var_x96;
        IJth(rJacobian, 10, 10) = ((var_x236) ? (0) : (-var_x237));
        IJth(rJacobian, 0, 11) = mSetVoltageDerivativeToZero ? 0.0 : (var_x19 * var_x97);
        IJth(rJacobian, 11, 11) = -var_x245;
        IJth(rJacobian, 16, 11) = -var_x19 * var_x262;
        IJth(rJacobian, 0, 12) = mSetVoltageDerivativeToZero ? 0.0 : (var_x97 * var_x98);
        IJth(rJacobian, 12, 12) = -var_x249;
        IJth(rJacobian, 16, 12) = -var_x262 * var_x98;
        IJth(rJacobian, 1, 13) = var_x117 * (var_x134 * (var_x133 - var_x132) + NV_Ith_S(mParameters, 0));
        IJth(rJacobian, 13, 13) = var_x252 * (var_x118 + var_x134 * (var_x132 - var_x133)) + 9.9963436928702016 * (var_x122 - var_x121 - var_x130) / (pow(var_x250, 3) * pow((0.33333333333333337 + var_x251), 2));
        IJth(rJacobian, 1, 14) = var_x117 * var_x128 * var_chaste_interface__L_type_Ca_current_d_gate__d;
        IJth(rJacobian, 13, 14) = var_x253 * var_chaste_interface__L_type_Ca_current_d_gate__d;
        IJth(rJacobian, 14, 14) = ((var_x257) ? (0) : (-0.5));
        IJth(rJacobian, 0, 15) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x102 - 3 * var_x105 + 0.00062500000000000001 * var_x104 - 26.713760659695652 * var_x103 - 26.713760659695652 * var_x99 - 0.80141281979086942 * var_x100);
        IJth(rJacobian, 1, 15) = 0.0018954404990922068 * var_x105 * var_x116 * NV_Ith_S(mParameters, 12);
        IJth(rJacobian, 15, 15) = var_x258 * (1.1846503119326294e-6 * var_x104 - 0.0018954404990922068 * var_x102 - 0.016878114612481093 * var_x103 - 0.016878114612481093 * var_x99 - 0.0056863214972766203 * var_x105);
        IJth(rJacobian, 16, 15) = var_x258 * (0.0012636269993948047 * var_x102 - 0.00050634343837443281 * var_x100 - 7.8976687462175284e-7 * var_x104);
        IJth(rJacobian, 0, 16) = mSetVoltageDerivativeToZero ? 0.0 : (0.068974633433048077 * var_x113 - 26.713760659695652 * var_x100 - 26.713760659695652 * var_x106 - 26.713760659695652 * var_x107 - 1.1495772238841346 * var_x108 - 11.495772238841345 * var_x110 - var_x112 * var_x64);
        IJth(rJacobian, 16, 16) = var_x258 * (4.357910453967955e-5 * var_x113 - 0.016878114612481093 * var_x100 - 0.016878114612481093 * var_x106 - 0.016878114612481093 * var_x107 - 0.00072631840899465921 * var_x108 - 0.0072631840899465916 * var_x110 - var_x112 * var_x260);
    }

    N_Vector Cellten_tusscher_model_2004_epiFromCellMLCvode::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -86.2
        double var_chaste_interface__calcium_dynamics__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0002
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.75
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.75
        double var_chaste_interface__L_type_Ca_current_d_gate__d = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__L_type_Ca_current_f_gate__f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__L_type_Ca_current_fCa_gate__fCa = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__Ca_SR = NV_Ith_S(rY, 13);
        // Units: millimolar; Initial value: 0.2
        double var_chaste_interface__calcium_dynamics__g = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__sodium_dynamics__Na_i = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 11.6
        double var_chaste_interface__potassium_dynamics__K_i = NV_Ith_S(rY, 16);
        // Units: millimolar; Initial value: 138.3
        
        // Mathematics
        const double var_L_type_Ca_current__v0 = 0; // millivolt
        const double var_calcium_dynamics__b_rel = 0.25; // millimolar
        const double var_calcium_dynamics__c_rel = 0.0082319999999999997; // millimolar_per_millisecond
        const double var_calcium_dynamics__i_rel = (pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2) * NV_Ith_S(mParameters, 1) / (pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2) + pow(var_calcium_dynamics__b_rel, 2)) + var_calcium_dynamics__c_rel) * var_chaste_interface__L_type_Ca_current_d_gate__d * var_chaste_interface__calcium_dynamics__g; // millimolar_per_millisecond
        const double var_calcium_pump_current__K_pCa = 0.00050000000000000001; // millimolar
        const double var_calcium_pump_current__i_p_Ca = var_chaste_interface__calcium_dynamics__Ca_i * NV_Ith_S(mParameters, 11) / (var_chaste_interface__calcium_dynamics__Ca_i + var_calcium_pump_current__K_pCa); // picoA_per_picoF
        const double var_calcium_pump_current__i_p_Ca_converted = HeartConfig::Instance()->GetCapacitance() * var_calcium_pump_current__i_p_Ca; // uA_per_cm2
        const double var_membrane__F = 96485.341499999995; // coulomb_per_millimole
        const double var_membrane__R = 8314.4719999999998; // joule_per_mole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_L_type_Ca_current__B = 2.0 * var_membrane__F / (var_membrane__R * var_membrane__T); // per_millivolt
        const double var_L_type_Ca_current__A = 4.0 * pow(var_membrane__F, 2) * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + var_chaste_interface__calcium_dynamics__Ca_i * exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 7) * var_chaste_interface__L_type_Ca_current_d_gate__d * var_chaste_interface__L_type_Ca_current_fCa_gate__fCa * var_chaste_interface__L_type_Ca_current_f_gate__f / (var_L_type_Ca_current__B * var_membrane__R * var_membrane__T); // picoA_per_picoF
        const double var_L_type_Ca_current__U = (-var_L_type_Ca_current__v0 + var_chaste_interface__membrane__V) * var_L_type_Ca_current__B; // dimensionless
        const double var_L_type_Ca_current__i_CaL = (((var_L_type_Ca_current__U >= -9.9999999999999995e-8) && (var_L_type_Ca_current__U <= 9.9999999999999995e-8)) ? ((1.0 - 0.5 * var_L_type_Ca_current__U) * var_L_type_Ca_current__A) : (var_L_type_Ca_current__A * var_L_type_Ca_current__U / (-1.0 + exp(var_L_type_Ca_current__U)))); // picoA_per_picoF
        const double var_L_type_Ca_current__i_CaL_converted = HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_current__i_CaL; // uA_per_cm2
        const double var_L_type_Ca_current_f_gate__tau_f = 80.0 + 165.0 / (1.0 + exp(2.5 - 0.10000000000000001 * var_chaste_interface__membrane__V)) + 1125.0 * exp(-3.0375000000000001 * pow((1 + 0.037037037037037035 * var_chaste_interface__membrane__V), 2)); // millisecond
        const double var_fast_sodium_current_h_gate__alpha_h = ((var_chaste_interface__membrane__V < -40.0) ? (0.057000000000000002 * exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__membrane__V)) : (0)); // per_millisecond
        const double var_fast_sodium_current_h_gate__beta_h = ((var_chaste_interface__membrane__V < -40.0) ? (310000.0 * exp(0.34849999999999998 * var_chaste_interface__membrane__V) + 2.7000000000000002 * exp(0.079000000000000001 * var_chaste_interface__membrane__V)) : (5.9230769230769234 / (1.0 + exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_fast_sodium_current_h_gate__tau_h = 1 / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h); // millisecond
        const double var_fast_sodium_current_j_gate__alpha_j = ((var_chaste_interface__membrane__V < -40.0) ? ((37.780000000000001 + var_chaste_interface__membrane__V) * (-25428.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V) - 6.9480000000000002e-6 * exp(-0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V))) : (0)); // per_millisecond
        const double var_fast_sodium_current_j_gate__beta_j = ((var_chaste_interface__membrane__V < -40.0) ? (0.024240000000000001 * exp(-0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__membrane__V))) : (0.59999999999999998 * exp(0.057000000000000002 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_fast_sodium_current_j_gate__tau_j = 1 / (var_fast_sodium_current_j_gate__alpha_j + var_fast_sodium_current_j_gate__beta_j); // millisecond
        const double var_membrane__i_Stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_reversal_potentials__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__calcium_dynamics__Ca_i) / var_membrane__F; // millivolt
        const double var_calcium_background_current__i_b_Ca = (-var_reversal_potentials__E_Ca + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9); // picoA_per_picoF
        const double var_calcium_background_current__i_b_Ca_converted = HeartConfig::Instance()->GetCapacitance() * var_calcium_background_current__i_b_Ca; // uA_per_cm2
        const double var_reversal_potentials__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__potassium_dynamics__K_i) / var_membrane__F; // millivolt
        const double var_inward_rectifier_potassium_current__alpha_K1 = 0.10000000000000001 / (1.0 + exp(-12.0 + 0.059999999999999998 * var_chaste_interface__membrane__V - 0.059999999999999998 * var_reversal_potentials__E_K)); // per_millisecond
        const double var_inward_rectifier_potassium_current__beta_K1 = (exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__V - 0.10000000000000001 * var_reversal_potentials__E_K) + 3.0 * exp(0.02 + 0.00020000000000000001 * var_chaste_interface__membrane__V - 0.00020000000000000001 * var_reversal_potentials__E_K)) / (1.0 + exp(0.5 * var_reversal_potentials__E_K - 0.5 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_inward_rectifier_potassium_current__xK1_inf = var_inward_rectifier_potassium_current__alpha_K1 / (var_inward_rectifier_potassium_current__alpha_K1 + var_inward_rectifier_potassium_current__beta_K1); // dimensionless
        const double var_inward_rectifier_potassium_current__i_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 5)) * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 16) * var_inward_rectifier_potassium_current__xK1_inf; // picoA_per_picoF
        const double var_inward_rectifier_potassium_current__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_inward_rectifier_potassium_current__i_K1; // uA_per_cm2
        const double var_potassium_pump_current__i_p_K = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 17) / (1.0 + exp(4.1806020066889626 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // picoA_per_picoF
        const double var_potassium_pump_current__i_p_K_converted = HeartConfig::Instance()->GetCapacitance() * var_potassium_pump_current__i_p_K; // uA_per_cm2
        const double var_rapid_time_dependent_potassium_current__i_Kr = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 5)) * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 18) * var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 * var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2; // picoA_per_picoF
        const double var_rapid_time_dependent_potassium_current__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_rapid_time_dependent_potassium_current__i_Kr; // uA_per_cm2
        const double var_reversal_potentials__P_kna = 0.029999999999999999; // dimensionless
        const double var_sodium_calcium_exchanger_current__K_sat = 0.10000000000000001; // dimensionless
        const double var_sodium_calcium_exchanger_current__Km_Ca = 1.3799999999999999; // millimolar
        const double var_sodium_calcium_exchanger_current__Km_Nai = 87.5; // millimolar
        const double var_sodium_calcium_exchanger_current__alpha = 2.5; // dimensionless
        const double var_sodium_calcium_exchanger_current__gamma = 0.34999999999999998; // dimensionless
        const double var_reversal_potentials__E_Ks = var_membrane__R * var_membrane__T * log((var_reversal_potentials__P_kna * NV_Ith_S(mParameters, 6) + NV_Ith_S(mParameters, 5)) / (var_reversal_potentials__P_kna * var_chaste_interface__sodium_dynamics__Na_i + var_chaste_interface__potassium_dynamics__K_i)) / var_membrane__F; // millivolt
        const double var_reversal_potentials__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__sodium_dynamics__Na_i) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_reversal_potentials__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 13) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // picoA_per_picoF
        const double var_fast_sodium_current__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na; // uA_per_cm2
        const double var_slow_time_dependent_potassium_current__i_Ks = pow(var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs, 2) * (-var_reversal_potentials__E_Ks + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 19); // picoA_per_picoF
        const double var_slow_time_dependent_potassium_current__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_slow_time_dependent_potassium_current__i_Ks; // uA_per_cm2
        const double var_sodium_background_current__i_b_Na = (-var_reversal_potentials__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 10); // picoA_per_picoF
        const double var_sodium_background_current__i_b_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_sodium_background_current__i_b_Na; // uA_per_cm2
        const double var_sodium_calcium_exchanger_current__i_NaCa = (pow(var_chaste_interface__sodium_dynamics__Na_i, 3) * NV_Ith_S(mParameters, 4) * exp(var_membrane__F * var_chaste_interface__membrane__V * var_sodium_calcium_exchanger_current__gamma / (var_membrane__R * var_membrane__T)) - pow(NV_Ith_S(mParameters, 6), 3) * var_chaste_interface__calcium_dynamics__Ca_i * var_sodium_calcium_exchanger_current__alpha * exp((-1.0 + var_sodium_calcium_exchanger_current__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 20) / ((1.0 + var_sodium_calcium_exchanger_current__K_sat * exp((-1.0 + var_sodium_calcium_exchanger_current__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * (pow(var_sodium_calcium_exchanger_current__Km_Nai, 3) + pow(NV_Ith_S(mParameters, 6), 3)) * (NV_Ith_S(mParameters, 4) + var_sodium_calcium_exchanger_current__Km_Ca)); // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__i_NaCa_converted = HeartConfig::Instance()->GetCapacitance() * var_sodium_calcium_exchanger_current__i_NaCa; // uA_per_cm2
        const double var_sodium_potassium_pump_current__K_mNa = 40.0; // millimolar
        const double var_sodium_potassium_pump_current__K_mk = 1.0; // millimolar
        const double var_sodium_potassium_pump_current__i_NaK = NV_Ith_S(mParameters, 5) * var_chaste_interface__sodium_dynamics__Na_i * NV_Ith_S(mParameters, 21) / ((NV_Ith_S(mParameters, 5) + var_sodium_potassium_pump_current__K_mk) * (var_chaste_interface__sodium_dynamics__Na_i + var_sodium_potassium_pump_current__K_mNa) * (1.0 + 0.035299999999999998 * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)))); // picoA_per_picoF
        const double var_sodium_potassium_pump_current__i_NaK_converted = HeartConfig::Instance()->GetCapacitance() * var_sodium_potassium_pump_current__i_NaK; // uA_per_cm2
        const double var_transient_outward_current__i_to = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 22) * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s; // picoA_per_picoF
        const double var_transient_outward_current__i_to_converted = HeartConfig::Instance()->GetCapacitance() * var_transient_outward_current__i_to; // uA_per_cm2

        N_Vector dqs = N_VNew_Serial(18);
        NV_Ith_S(dqs, 0) = var_calcium_dynamics__i_rel;
        NV_Ith_S(dqs, 1) = var_L_type_Ca_current__i_CaL_converted;
        NV_Ith_S(dqs, 2) = var_L_type_Ca_current_f_gate__tau_f;
        NV_Ith_S(dqs, 3) = var_calcium_background_current__i_b_Ca_converted;
        NV_Ith_S(dqs, 4) = var_sodium_background_current__i_b_Na_converted;
        NV_Ith_S(dqs, 5) = var_calcium_pump_current__i_p_Ca_converted;
        NV_Ith_S(dqs, 6) = var_fast_sodium_current__i_Na_converted;
        NV_Ith_S(dqs, 7) = var_fast_sodium_current_h_gate__tau_h;
        NV_Ith_S(dqs, 8) = var_fast_sodium_current_j_gate__tau_j;
        NV_Ith_S(dqs, 9) = var_inward_rectifier_potassium_current__i_K1_converted;
        NV_Ith_S(dqs, 10) = var_potassium_pump_current__i_p_K_converted;
        NV_Ith_S(dqs, 11) = var_rapid_time_dependent_potassium_current__i_Kr_converted;
        NV_Ith_S(dqs, 12) = var_slow_time_dependent_potassium_current__i_Ks_converted;
        NV_Ith_S(dqs, 13) = var_sodium_calcium_exchanger_current__i_NaCa_converted;
        NV_Ith_S(dqs, 14) = var_sodium_potassium_pump_current__i_NaK_converted;
        NV_Ith_S(dqs, 15) = var_membrane__i_Stim_converted;
        NV_Ith_S(dqs, 16) = var_transient_outward_current__i_to_converted;
        NV_Ith_S(dqs, 17) = var_chaste_interface__environment__time;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellten_tusscher_model_2004_epiFromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "tentusscher_model_2004_epi";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-86.2);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0002);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("rapid_time_dependent_potassium_current_Xr1_gate__Xr1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("rapid_time_dependent_potassium_current_Xr2_gate__Xr2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("slow_time_dependent_potassium_current_Xs_gate__Xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.75);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.75);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_fCa_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("transient_outward_current_s_gate__s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("transient_outward_current_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.2);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("calcium_dynamics__g");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 15):
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(11.6);

    // NV_Ith_S(rY, 16):
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(138.3);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_leak_current_max");
    this->mParameterUnits.push_back("per_millisecond");

    // mParameters[1]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("millimolar_per_millisecond");

    // mParameters[2]:
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("millimolar_per_millisecond");

    // mParameters[3]:
    this->mParameterNames.push_back("concentration_clamp_onoff");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[4]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[5]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[6]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("litre_per_farad_second");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_fCa_gate_tau");
    this->mParameterUnits.push_back("millisecond");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_background_calcium_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_background_sodium_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_calcium_pump_current_conductance");
    this->mParameterUnits.push_back("picoA_per_picoF");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_capacitance");
    this->mParameterUnits.push_back("microF");

    // mParameters[13]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // mParameters[14]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_reduced_inactivation");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[15]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_shift_inactivation");
    this->mParameterUnits.push_back("millivolt");

    // mParameters[16]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // mParameters[17]:
    this->mParameterNames.push_back("membrane_potassium_pump_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // mParameters[18]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // mParameters[19]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // mParameters[20]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("picoA_per_picoF");

    // mParameters[21]:
    this->mParameterNames.push_back("membrane_sodium_potassium_pump_current_permeability");
    this->mParameterUnits.push_back("picoA_per_picoF");

    // mParameters[22]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_millisecond");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_f_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_background_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_background_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_calcium_pump_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_h_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_j_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("membrane_potassium_pump_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [11]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [12]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [13]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [14]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_potassium_pump_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [15]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [16]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [17]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellten_tusscher_model_2004_epiFromCellMLCvode)

#endif // CHASTE_CVODE
