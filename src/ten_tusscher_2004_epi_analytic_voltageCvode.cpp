#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version 0.6.3
//!
//! Model: tentusscher_model_2004_epi_analytic_voltage
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: NumericCvode)
//! on 2021-03-28 18:01:16
//!
//! <autogenerated>

#include "ten_tusscher_2004_epi_analytic_voltageCvode.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

static double CalculateAnalyticVoltage(const N_Vector& rY, const N_Vector& mParameters){
  // Inputs:
  // Time units: millisecond
  double var_chaste_interface__calcium_dynamics__Ca_i = NV_Ith_S(rY, 0);
  // Units: millimolar; Initial value: 0.0002
  double var_chaste_interface__calcium_dynamics__Ca_SR = NV_Ith_S(rY, 12);
  // Units: millimolar; Initial value: 0.2
  double var_chaste_interface__sodium_dynamics__Na_i = NV_Ith_S(rY, 14);
  // Units: millimolar; Initial value: 11.6
  double var_chaste_interface__potassium_dynamics__K_i = NV_Ith_S(rY, 15);
  // Units: millimolar; Initial value: 138.3
  // Mathematics
  const double var_calcium_dynamics__Buf_c = 0.14999999999999999; // millimolar
  const double var_calcium_dynamics__Buf_sr = 10.0; // millimolar
  const double var_calcium_dynamics__K_buf_c = 0.001; // millimolar
  const double var_calcium_dynamics__K_buf_sr = 0.29999999999999999; // millimolar
  const double var_calcium_dynamics__V_sr = 0.0010939999999999999; // micrometre3
  const double var_membrane__V_c = 0.016403999999999998; // micrometre3

  const double var_membrane__Ca_i_tot = var_calcium_dynamics__Buf_c * var_chaste_interface__calcium_dynamics__Ca_i / (var_chaste_interface__calcium_dynamics__Ca_i + var_calcium_dynamics__K_buf_c) + var_chaste_interface__calcium_dynamics__Ca_i; // millimolar
  const double var_membrane__Ca_sr_tot = var_calcium_dynamics__Buf_sr * var_chaste_interface__calcium_dynamics__Ca_SR / (var_chaste_interface__calcium_dynamics__Ca_SR + var_calcium_dynamics__K_buf_sr) + var_chaste_interface__calcium_dynamics__Ca_SR; // millimolar
  const double var_membrane__F = 96485.341499999995; // coulomb_per_millimole

  const double var_membrane__potential = (2.0 * var_membrane__Ca_i_tot + 2.0 * var_calcium_dynamics__V_sr * var_membrane__Ca_sr_tot / var_membrane__V_c + var_chaste_interface__potassium_dynamics__K_i + var_chaste_interface__sodium_dynamics__Na_i) * var_membrane__F * var_membrane__V_c / NV_Ith_S(mParameters, 13); // millivolt
  const double var_membrane__sum_ext_charges = 2.0 * NV_Ith_S(mParameters, 5) + NV_Ith_S(mParameters, 6) + NV_Ith_S(mParameters, 7); // millimolar
  const double var_membrane__C0 = NV_Ith_S(mParameters, 0) + var_membrane__sum_ext_charges; // millimolar
  const double var_membrane__V2 = -var_membrane__C0 * var_membrane__F * var_membrane__V_c / NV_Ith_S(mParameters, 13) + var_membrane__potential; // millivolt

  return var_membrane__V2;
}


boost::shared_ptr<RegularStimulus> Cellten_tusscher_2004_epi_analytic_voltageFromCellMLCvode::UseCellMLDefaultStimulus()
{
  // Use the default stimulus specified by CellML metadata
  const double var_chaste_interface__membrane__stim_amplitude_converted = -52.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
  const double var_chaste_interface__membrane__stim_duration = 1.0; // millisecond
  const double var_chaste_interface__membrane__stim_period = 1000.0; // millisecond
  const double var_chaste_interface__membrane__stim_start = 100.0; // millisecond
  boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                                                                       -fabs(var_chaste_interface__membrane__stim_amplitude_converted),
                                                                       var_chaste_interface__membrane__stim_duration,
                                                                       var_chaste_interface__membrane__stim_period,
                                                                       var_chaste_interface__membrane__stim_start
                                                                       ));
  mpIntracellularStimulus = p_cellml_stim;
  return p_cellml_stim;
}

double Cellten_tusscher_2004_epi_analytic_voltageFromCellMLCvode::GetIntracellularCalciumConcentration()
{
  return NV_Ith_S(mStateVariables, 0);
}

Cellten_tusscher_2004_epi_analytic_voltageFromCellMLCvode::Cellten_tusscher_2004_epi_analytic_voltageFromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
  : AbstractCvodeCell(
                      pOdeSolver,
                      16,
                      99999,
                      pIntracellularStimulus)
{
  // Time units: millisecond
  //
  this->mpSystemInfo = OdeSystemInformation<Cellten_tusscher_2004_epi_analytic_voltageFromCellMLCvode>::Instance();
  Init();

  // We have a default stimulus specified in the CellML file metadata
  this->mHasDefaultStimulusFromCellML = true;

  NV_Ith_S(this->mParameters, 0) = 1.1206803579703699; // (var_membrane__Gamma0) [millimolar]
  NV_Ith_S(this->mParameters, 1) = 8.0000000000000007e-5; // (var_calcium_dynamics__V_leak) [per_millisecond]
  NV_Ith_S(this->mParameters, 2) = 0.016463999999999999; // (var_calcium_dynamics__a_rel) [millimolar_per_millisecond]
  NV_Ith_S(this->mParameters, 3) = 0.00042499999999999998; // (var_calcium_dynamics__Vmax_up) [millimolar_per_millisecond]
  NV_Ith_S(this->mParameters, 4) = 1.0; // (var_sodium_dynamics__conc_clamp) [dimensionless]
  NV_Ith_S(this->mParameters, 5) = 2.0; // (var_calcium_dynamics__Ca_o) [millimolar]
  NV_Ith_S(this->mParameters, 6) = 5.4000000000000004; // (var_potassium_dynamics__K_o) [millimolar]
  NV_Ith_S(this->mParameters, 7) = 140.0; // (var_sodium_dynamics__Na_o) [millimolar]
  NV_Ith_S(this->mParameters, 8) = 0.000175; // (var_L_type_Ca_current__g_CaL) [litre_per_farad_second]
  NV_Ith_S(this->mParameters, 9) = 2.0; // (var_L_type_Ca_current_fCa_gate__tau_fCa) [millisecond]
  NV_Ith_S(this->mParameters, 10) = 0.00059199999999999997; // (var_calcium_background_current__g_bca) [nanoS_per_picoF]
  NV_Ith_S(this->mParameters, 11) = 0.00029; // (var_sodium_background_current__g_bna) [nanoS_per_picoF]
  NV_Ith_S(this->mParameters, 12) = 0.82499999999999996; // (var_calcium_pump_current__g_pCa) [picoA_per_picoF]
  NV_Ith_S(this->mParameters, 13) = 0.185; // (var_membrane__Cm) [microF]
  NV_Ith_S(this->mParameters, 14) = 14.837999999999999; // (var_fast_sodium_current__g_Na) [nanoS_per_picoF]
  NV_Ith_S(this->mParameters, 15) = 0; // (var_fast_sodium_current__perc_reduced_inact_for_IpNa) [dimensionless]
  NV_Ith_S(this->mParameters, 16) = 0; // (var_fast_sodium_current__shift_INa_inact) [millivolt]
  NV_Ith_S(this->mParameters, 17) = 5.4050000000000002; // (var_inward_rectifier_potassium_current__g_K1) [nanoS_per_picoF]
  NV_Ith_S(this->mParameters, 18) = 0.0146; // (var_potassium_pump_current__g_pK) [nanoS_per_picoF]
  NV_Ith_S(this->mParameters, 19) = 0.096000000000000002; // (var_rapid_time_dependent_potassium_current__g_Kr) [nanoS_per_picoF]
  NV_Ith_S(this->mParameters, 20) = 0.245; // (var_slow_time_dependent_potassium_current__g_Ks) [nanoS_per_picoF]
  NV_Ith_S(this->mParameters, 21) = 1000.0; // (var_sodium_calcium_exchanger_current__K_NaCa) [picoA_per_picoF]
  NV_Ith_S(this->mParameters, 22) = 1.3620000000000001; // (var_sodium_potassium_pump_current__P_NaK) [picoA_per_picoF]
  NV_Ith_S(this->mParameters, 23) = 0.29399999999999998; // (var_transient_outward_current__g_to) [nanoS_per_picoF]
}

Cellten_tusscher_2004_epi_analytic_voltageFromCellMLCvode::~Cellten_tusscher_2004_epi_analytic_voltageFromCellMLCvode()
{
}


double Cellten_tusscher_2004_epi_analytic_voltageFromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
{
  // For state variable interpolation (SVI) we read in interpolated state variables,
  // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
  N_Vector rY;
  bool made_new_cvode_vector = false;
  if (!pStateVariables)
    {
      rY = rGetStateVariables();
    }
  else
    {
      made_new_cvode_vector = true;
      rY = MakeNVector(*pStateVariables);
    }
  double var_chaste_interface__calcium_dynamics__Ca_i = NV_Ith_S(rY, 0);
  // Units: millimolar; Initial value: 0.0002
  double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = NV_Ith_S(rY, 1);
  // Units: dimensionless; Initial value: 0.0
  double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = NV_Ith_S(rY, 2);
  // Units: dimensionless; Initial value: 1.0
  double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = NV_Ith_S(rY, 3);
  // Units: dimensionless; Initial value: 0.0
  double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 4);
  // Units: dimensionless; Initial value: 0.0
  double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 5);
  // Units: dimensionless; Initial value: 0.75
  double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 6);
  // Units: dimensionless; Initial value: 0.75
  double var_chaste_interface__L_type_Ca_current_d_gate__d = NV_Ith_S(rY, 7);
  // Units: dimensionless; Initial value: 0.0
  double var_chaste_interface__L_type_Ca_current_f_gate__f = NV_Ith_S(rY, 8);
  // Units: dimensionless; Initial value: 1.0
  double var_chaste_interface__L_type_Ca_current_fCa_gate__fCa = NV_Ith_S(rY, 9);
  // Units: dimensionless; Initial value: 1.0
  double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 10);
  // Units: dimensionless; Initial value: 1.0
  double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 11);
  // Units: dimensionless; Initial value: 0.0
  double var_chaste_interface__sodium_dynamics__Na_i = NV_Ith_S(rY, 14);
  // Units: millimolar; Initial value: 11.6
  double var_chaste_interface__potassium_dynamics__K_i = NV_Ith_S(rY, 15);
  // Units: millimolar; Initial value: 138.3
  double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : CalculateAnalyticVoltage(rY, mParameters));
  // Units: millivolt; Initial value: -86.2

  const double var_L_type_Ca_current__v0 = 0; // millivolt
  const double var_calcium_pump_current__K_pCa = 0.00050000000000000001; // millimolar
  const double var_calcium_pump_current__i_p_Ca = var_chaste_interface__calcium_dynamics__Ca_i * NV_Ith_S(mParameters, 12) / (var_chaste_interface__calcium_dynamics__Ca_i + var_calcium_pump_current__K_pCa); // picoA_per_picoF
  const double var_calcium_pump_current__i_p_Ca_converted = HeartConfig::Instance()->GetCapacitance() * var_calcium_pump_current__i_p_Ca; // uA_per_cm2
  const double var_membrane__F = 96485.341499999995; // coulomb_per_millimole
  const double var_membrane__R = 8314.4719999999998; // joule_per_mole_kelvin
  const double var_membrane__T = 310.0; // kelvin
  const double var_L_type_Ca_current__B = 2.0 * var_membrane__F / (var_membrane__R * var_membrane__T); // per_millivolt
  const double var_L_type_Ca_current__A = 4.0 * pow(var_membrane__F, 2) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + var_chaste_interface__calcium_dynamics__Ca_i * exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 8) * var_chaste_interface__L_type_Ca_current_d_gate__d * var_chaste_interface__L_type_Ca_current_fCa_gate__fCa * var_chaste_interface__L_type_Ca_current_f_gate__f / (var_L_type_Ca_current__B * var_membrane__R * var_membrane__T); // picoA_per_picoF
  const double var_L_type_Ca_current__U = (-var_L_type_Ca_current__v0 + var_chaste_interface__membrane__V) * var_L_type_Ca_current__B; // dimensionless
  const double var_L_type_Ca_current__i_CaL = (((var_L_type_Ca_current__U >= -9.9999999999999995e-8) && (var_L_type_Ca_current__U <= 9.9999999999999995e-8)) ? ((1.0 - 0.5 * var_L_type_Ca_current__U) * var_L_type_Ca_current__A) : (var_L_type_Ca_current__A * var_L_type_Ca_current__U / (-1.0 + exp(var_L_type_Ca_current__U)))); // picoA_per_picoF
  const double var_L_type_Ca_current__i_CaL_converted = HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_current__i_CaL; // uA_per_cm2
  const double var_reversal_potentials__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__calcium_dynamics__Ca_i) / var_membrane__F; // millivolt
  const double var_calcium_background_current__i_b_Ca = (-var_reversal_potentials__E_Ca + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 10); // picoA_per_picoF
  const double var_calcium_background_current__i_b_Ca_converted = HeartConfig::Instance()->GetCapacitance() * var_calcium_background_current__i_b_Ca; // uA_per_cm2
  const double var_reversal_potentials__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__potassium_dynamics__K_i) / var_membrane__F; // millivolt
  const double var_inward_rectifier_potassium_current__alpha_K1 = 0.10000000000000001 / (1.0 + exp(-12.0 + 0.059999999999999998 * var_chaste_interface__membrane__V - 0.059999999999999998 * var_reversal_potentials__E_K)); // per_millisecond
  const double var_inward_rectifier_potassium_current__beta_K1 = (exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__V - 0.10000000000000001 * var_reversal_potentials__E_K) + 3.0 * exp(0.02 + 0.00020000000000000001 * var_chaste_interface__membrane__V - 0.00020000000000000001 * var_reversal_potentials__E_K)) / (1.0 + exp(0.5 * var_reversal_potentials__E_K - 0.5 * var_chaste_interface__membrane__V)); // per_millisecond
  const double var_inward_rectifier_potassium_current__xK1_inf = var_inward_rectifier_potassium_current__alpha_K1 / (var_inward_rectifier_potassium_current__alpha_K1 + var_inward_rectifier_potassium_current__beta_K1); // dimensionless
  const double var_inward_rectifier_potassium_current__i_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 6)) * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 17) * var_inward_rectifier_potassium_current__xK1_inf; // picoA_per_picoF
  const double var_inward_rectifier_potassium_current__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_inward_rectifier_potassium_current__i_K1; // uA_per_cm2
  const double var_potassium_pump_current__i_p_K = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 18) / (1.0 + exp(4.1806020066889626 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // picoA_per_picoF
  const double var_potassium_pump_current__i_p_K_converted = HeartConfig::Instance()->GetCapacitance() * var_potassium_pump_current__i_p_K; // uA_per_cm2
  const double var_rapid_time_dependent_potassium_current__i_Kr = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 6)) * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 19) * var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 * var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2; // picoA_per_picoF
  const double var_rapid_time_dependent_potassium_current__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_rapid_time_dependent_potassium_current__i_Kr; // uA_per_cm2
  const double var_reversal_potentials__P_kna = 0.029999999999999999; // dimensionless
  const double var_sodium_calcium_exchanger_current__K_sat = 0.10000000000000001; // dimensionless
  const double var_sodium_calcium_exchanger_current__Km_Ca = 1.3799999999999999; // millimolar
  const double var_sodium_calcium_exchanger_current__Km_Nai = 87.5; // millimolar
  const double var_sodium_calcium_exchanger_current__alpha = 2.5; // dimensionless
  const double var_sodium_calcium_exchanger_current__gamma = 0.34999999999999998; // dimensionless
  const double var_reversal_potentials__E_Ks = var_membrane__R * var_membrane__T * log((var_reversal_potentials__P_kna * NV_Ith_S(mParameters, 7) + NV_Ith_S(mParameters, 6)) / (var_reversal_potentials__P_kna * var_chaste_interface__sodium_dynamics__Na_i + var_chaste_interface__potassium_dynamics__K_i)) / var_membrane__F; // millivolt
  const double var_reversal_potentials__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 7) / var_chaste_interface__sodium_dynamics__Na_i) / var_membrane__F; // millivolt
  const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_reversal_potentials__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 14) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // picoA_per_picoF
  const double var_fast_sodium_current__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na; // uA_per_cm2
  const double var_slow_time_dependent_potassium_current__i_Ks = pow(var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs, 2) * (-var_reversal_potentials__E_Ks + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 20); // picoA_per_picoF
  const double var_slow_time_dependent_potassium_current__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_slow_time_dependent_potassium_current__i_Ks; // uA_per_cm2
  const double var_sodium_background_current__i_b_Na = (-var_reversal_potentials__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 11); // picoA_per_picoF
  const double var_sodium_background_current__i_b_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_sodium_background_current__i_b_Na; // uA_per_cm2
  const double var_sodium_calcium_exchanger_current__i_NaCa = (pow(var_chaste_interface__sodium_dynamics__Na_i, 3) * NV_Ith_S(mParameters, 5) * exp(var_membrane__F * var_chaste_interface__membrane__V * var_sodium_calcium_exchanger_current__gamma / (var_membrane__R * var_membrane__T)) - pow(NV_Ith_S(mParameters, 7), 3) * var_chaste_interface__calcium_dynamics__Ca_i * var_sodium_calcium_exchanger_current__alpha * exp((-1.0 + var_sodium_calcium_exchanger_current__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 21) / ((1.0 + var_sodium_calcium_exchanger_current__K_sat * exp((-1.0 + var_sodium_calcium_exchanger_current__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * (pow(var_sodium_calcium_exchanger_current__Km_Nai, 3) + pow(NV_Ith_S(mParameters, 7), 3)) * (NV_Ith_S(mParameters, 5) + var_sodium_calcium_exchanger_current__Km_Ca)); // picoA_per_picoF
  const double var_sodium_calcium_exchanger_current__i_NaCa_converted = HeartConfig::Instance()->GetCapacitance() * var_sodium_calcium_exchanger_current__i_NaCa; // uA_per_cm2
  const double var_sodium_potassium_pump_current__K_mNa = 40.0; // millimolar
  const double var_sodium_potassium_pump_current__K_mk = 1.0; // millimolar
  const double var_sodium_potassium_pump_current__i_NaK = NV_Ith_S(mParameters, 6) * var_chaste_interface__sodium_dynamics__Na_i * NV_Ith_S(mParameters, 22) / ((NV_Ith_S(mParameters, 6) + var_sodium_potassium_pump_current__K_mk) * (var_chaste_interface__sodium_dynamics__Na_i + var_sodium_potassium_pump_current__K_mNa) * (1.0 + 0.035299999999999998 * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)))); // picoA_per_picoF
  const double var_sodium_potassium_pump_current__i_NaK_converted = HeartConfig::Instance()->GetCapacitance() * var_sodium_potassium_pump_current__i_NaK; // uA_per_cm2
  const double var_transient_outward_current__i_to = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 23) * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s; // picoA_per_picoF
  const double var_transient_outward_current__i_to_converted = HeartConfig::Instance()->GetCapacitance() * var_transient_outward_current__i_to; // uA_per_cm2
  const double var_chaste_interface__i_ionic = var_L_type_Ca_current__i_CaL_converted + var_calcium_background_current__i_b_Ca_converted + var_calcium_pump_current__i_p_Ca_converted + var_fast_sodium_current__i_Na_converted + var_inward_rectifier_potassium_current__i_K1_converted + var_potassium_pump_current__i_p_K_converted + var_rapid_time_dependent_potassium_current__i_Kr_converted + var_slow_time_dependent_potassium_current__i_Ks_converted + var_sodium_background_current__i_b_Na_converted + var_sodium_calcium_exchanger_current__i_NaCa_converted + var_sodium_potassium_pump_current__i_NaK_converted + var_transient_outward_current__i_to_converted; // uA_per_cm2

  const double i_ionic = var_chaste_interface__i_ionic;
  if (made_new_cvode_vector)
    {
      DeleteVector(rY);
    }
  EXCEPT_IF_NOT(!std::isnan(i_ionic));
  return i_ionic;
}

void Cellten_tusscher_2004_epi_analytic_voltageFromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
{
  // Inputs:
  // Time units: millisecond
  double var_chaste_interface__calcium_dynamics__Ca_i = NV_Ith_S(rY, 0);
  // Units: millimolar; Initial value: 0.0002
  double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = NV_Ith_S(rY, 1);
  // Units: dimensionless; Initial value: 0.0
  double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = NV_Ith_S(rY, 2);
  // Units: dimensionless; Initial value: 1.0
  double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = NV_Ith_S(rY, 3);
  // Units: dimensionless; Initial value: 0.0
  double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 4);
  // Units: dimensionless; Initial value: 0.0
  double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 5);
  // Units: dimensionless; Initial value: 0.75
  double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 6);
  // Units: dimensionless; Initial value: 0.75
  double var_chaste_interface__L_type_Ca_current_d_gate__d = NV_Ith_S(rY, 7);
  // Units: dimensionless; Initial value: 0.0
  double var_chaste_interface__L_type_Ca_current_f_gate__f = NV_Ith_S(rY, 8);
  // Units: dimensionless; Initial value: 1.0
  double var_chaste_interface__L_type_Ca_current_fCa_gate__fCa = NV_Ith_S(rY, 9);
  // Units: dimensionless; Initial value: 1.0
  double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 10);
  // Units: dimensionless; Initial value: 1.0
  double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 11);
  // Units: dimensionless; Initial value: 0.0
  double var_chaste_interface__calcium_dynamics__Ca_SR = NV_Ith_S(rY, 12);
  // Units: millimolar; Initial value: 0.2
  double var_chaste_interface__calcium_dynamics__g = NV_Ith_S(rY, 13);
  // Units: dimensionless; Initial value: 1.0
  double var_chaste_interface__sodium_dynamics__Na_i = NV_Ith_S(rY, 14);
  // Units: millimolar; Initial value: 11.6
  double var_chaste_interface__potassium_dynamics__K_i = NV_Ith_S(rY, 15);
  // Units: millimolar; Initial value: 138.3
  double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : CalculateAnalyticVoltage(rY, mParameters));
  // Units: millivolt; Initial value: -86.2

  // Mathematics
  double d_dt_chaste_interface_var_membrane__V;
  const double var_L_type_Ca_current__v0 = 0; // millivolt
  const double var_calcium_dynamics__Buf_c = 0.14999999999999999; // millimolar
  const double var_calcium_dynamics__Buf_sr = 10.0; // millimolar
  const double var_L_type_Ca_current_fCa_gate__alpha_fCa = 1 / (1.0 + 8.034023767017109e+27 * pow(var_chaste_interface__calcium_dynamics__Ca_i, 8)); // dimensionless
  const double var_L_type_Ca_current_fCa_gate__beta_fCa = 0.10000000000000001 / (1.0 + exp(-5.0 + 10000.0 * var_chaste_interface__calcium_dynamics__Ca_i)); // dimensionless
  const double var_L_type_Ca_current_fCa_gate__gama_fCa = 0.20000000000000001 / (1.0 + exp(-0.9375 + 1250.0 * var_chaste_interface__calcium_dynamics__Ca_i)); // dimensionless
  const double var_L_type_Ca_current_fCa_gate__fCa_inf = 0.15753424657534248 + 0.68493150684931503 * var_L_type_Ca_current_fCa_gate__alpha_fCa + 0.68493150684931503 * var_L_type_Ca_current_fCa_gate__beta_fCa + 0.68493150684931503 * var_L_type_Ca_current_fCa_gate__gama_fCa; // dimensionless
  const double var_L_type_Ca_current_fCa_gate__d_fCa = (-var_chaste_interface__L_type_Ca_current_fCa_gate__fCa + var_L_type_Ca_current_fCa_gate__fCa_inf) / NV_Ith_S(mParameters, 9); // per_millisecond
  const double var_calcium_dynamics__K_buf_c = 0.001; // millimolar
  const double var_calcium_dynamics__Ca_i_bufc = 1 / (1.0 + var_calcium_dynamics__Buf_c * var_calcium_dynamics__K_buf_c / pow((var_chaste_interface__calcium_dynamics__Ca_i + var_calcium_dynamics__K_buf_c), 2)); // dimensionless
  const double var_calcium_dynamics__K_buf_sr = 0.29999999999999999; // millimolar
  const double var_calcium_dynamics__Ca_sr_bufsr = 1 / (1.0 + var_calcium_dynamics__Buf_sr * var_calcium_dynamics__K_buf_sr / pow((var_chaste_interface__calcium_dynamics__Ca_SR + var_calcium_dynamics__K_buf_sr), 2)); // dimensionless
  const double var_calcium_dynamics__K_up = 0.00025000000000000001; // millimolar
  const double var_calcium_dynamics__V_sr = 0.0010939999999999999; // micrometre3
  const double var_calcium_dynamics__b_rel = 0.25; // millimolar
  const double var_calcium_dynamics__c_rel = 0.0082319999999999997; // millimolar_per_millisecond
  const double var_calcium_dynamics__g_inf = ((var_chaste_interface__calcium_dynamics__Ca_i < 0.00035) ? (1 / (1.0 + 5.439910241481016e+20 * pow(var_chaste_interface__calcium_dynamics__Ca_i, 6))) : (1 / (1.0 + 1.9720198874049176e+55 * pow(var_chaste_interface__calcium_dynamics__Ca_i, 16)))); // dimensionless
  const double var_calcium_dynamics__i_leak = (-var_chaste_interface__calcium_dynamics__Ca_i + var_chaste_interface__calcium_dynamics__Ca_SR) * NV_Ith_S(mParameters, 1); // millimolar_per_millisecond
  const double var_calcium_dynamics__i_rel = (pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2) * NV_Ith_S(mParameters, 2) / (pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2) + pow(var_calcium_dynamics__b_rel, 2)) + var_calcium_dynamics__c_rel) * var_chaste_interface__L_type_Ca_current_d_gate__d * var_chaste_interface__calcium_dynamics__g; // millimolar_per_millisecond
  const double var_calcium_dynamics__i_up = NV_Ith_S(mParameters, 3) / (1.0 + pow(var_calcium_dynamics__K_up, 2) / pow(var_chaste_interface__calcium_dynamics__Ca_i, 2)); // millimolar_per_millisecond
  const double var_calcium_dynamics__tau_g = 2.0; // millisecond
  const double var_calcium_dynamics__d_g = (-var_chaste_interface__calcium_dynamics__g + var_calcium_dynamics__g_inf) / var_calcium_dynamics__tau_g; // per_millisecond
  const double var_calcium_pump_current__K_pCa = 0.00050000000000000001; // millimolar
  const double var_calcium_pump_current__i_p_Ca = var_chaste_interface__calcium_dynamics__Ca_i * NV_Ith_S(mParameters, 12) / (var_chaste_interface__calcium_dynamics__Ca_i + var_calcium_pump_current__K_pCa); // picoA_per_picoF
  const double var_membrane__F = 96485.341499999995; // coulomb_per_millimole
  const double var_membrane__R = 8314.4719999999998; // joule_per_mole_kelvin
  const double var_membrane__T = 310.0; // kelvin
  const double var_L_type_Ca_current__B = 2.0 * var_membrane__F / (var_membrane__R * var_membrane__T); // per_millivolt
  const double d_dt_chaste_interface_var_L_type_Ca_current_fCa_gate__fCa = (((var_chaste_interface__membrane__V > -60.0) && (var_chaste_interface__L_type_Ca_current_fCa_gate__fCa < var_L_type_Ca_current_fCa_gate__fCa_inf)) ? (0) : (var_L_type_Ca_current_fCa_gate__d_fCa)); // 1 / millisecond
  const double d_dt_chaste_interface_var_calcium_dynamics__g = (((var_chaste_interface__membrane__V > -60.0) && (var_chaste_interface__calcium_dynamics__g < var_calcium_dynamics__g_inf)) ? (0) : (var_calcium_dynamics__d_g)); // 1 / millisecond
  const double var_L_type_Ca_current__A = 4.0 * pow(var_membrane__F, 2) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + var_chaste_interface__calcium_dynamics__Ca_i * exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 8) * var_chaste_interface__L_type_Ca_current_d_gate__d * var_chaste_interface__L_type_Ca_current_fCa_gate__fCa * var_chaste_interface__L_type_Ca_current_f_gate__f / (var_L_type_Ca_current__B * var_membrane__R * var_membrane__T); // picoA_per_picoF
  const double var_L_type_Ca_current__U = (-var_L_type_Ca_current__v0 + var_chaste_interface__membrane__V) * var_L_type_Ca_current__B; // dimensionless
  const double var_L_type_Ca_current__i_CaL = (((var_L_type_Ca_current__U >= -9.9999999999999995e-8) && (var_L_type_Ca_current__U <= 9.9999999999999995e-8)) ? ((1.0 - 0.5 * var_L_type_Ca_current__U) * var_L_type_Ca_current__A) : (var_L_type_Ca_current__A * var_L_type_Ca_current__U / (-1.0 + exp(var_L_type_Ca_current__U)))); // picoA_per_picoF
  const double var_L_type_Ca_current_d_gate__alpha_d = 0.25 + 1.3999999999999999 / (1.0 + exp(-2.6923076923076925 - 0.076923076923076927 * var_chaste_interface__membrane__V)); // dimensionless
  const double var_L_type_Ca_current_d_gate__beta_d = 1.3999999999999999 / (1.0 + exp(1.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)); // dimensionless
  const double var_L_type_Ca_current_d_gate__d_inf = 1 / (1.0 + exp(-0.66666666666666663 - 0.13333333333333333 * var_chaste_interface__membrane__V)); // dimensionless
  const double var_L_type_Ca_current_d_gate__gamma_d = 1 / (1.0 + exp(2.5 - 0.050000000000000003 * var_chaste_interface__membrane__V)); // millisecond
  const double var_L_type_Ca_current_d_gate__tau_d = var_L_type_Ca_current_d_gate__alpha_d * var_L_type_Ca_current_d_gate__beta_d + var_L_type_Ca_current_d_gate__gamma_d; // millisecond
  const double d_dt_chaste_interface_var_L_type_Ca_current_d_gate__d = (-var_chaste_interface__L_type_Ca_current_d_gate__d + var_L_type_Ca_current_d_gate__d_inf) / var_L_type_Ca_current_d_gate__tau_d; // 1 / millisecond
  const double var_L_type_Ca_current_f_gate__f_inf = 1 / (1.0 + exp(2.8571428571428572 + 0.14285714285714285 * var_chaste_interface__membrane__V)); // dimensionless
  const double var_L_type_Ca_current_f_gate__tau_f = 80.0 + 165.0 / (1.0 + exp(2.5 - 0.10000000000000001 * var_chaste_interface__membrane__V)) + 1125.0 * exp(-3.0375000000000001 * pow((1 + 0.037037037037037035 * var_chaste_interface__membrane__V), 2)); // millisecond
  const double d_dt_chaste_interface_var_L_type_Ca_current_f_gate__f = (-var_chaste_interface__L_type_Ca_current_f_gate__f + var_L_type_Ca_current_f_gate__f_inf) / var_L_type_Ca_current_f_gate__tau_f; // 1 / millisecond
  const double var_fast_sodium_current_h_gate__alpha_h = ((var_chaste_interface__membrane__V < -40.0) ? (0.057000000000000002 * exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__membrane__V)) : (0)); // per_millisecond
  const double var_fast_sodium_current_h_gate__beta_h = ((var_chaste_interface__membrane__V < -40.0) ? (310000.0 * exp(0.34849999999999998 * var_chaste_interface__membrane__V) + 2.7000000000000002 * exp(0.079000000000000001 * var_chaste_interface__membrane__V)) : (5.9230769230769234 / (1.0 + exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__membrane__V)))); // per_millisecond
  const double var_fast_sodium_current_h_gate__h_inf = 0.01 * NV_Ith_S(mParameters, 15) + (1.0 - 0.01 * NV_Ith_S(mParameters, 15)) / pow((1.0 + exp(9.6298788694481825 + 0.13458950201884254 * var_chaste_interface__membrane__V - 0.13458950201884254 * NV_Ith_S(mParameters, 16))), 2); // dimensionless
  const double var_fast_sodium_current_h_gate__tau_h = 1 / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h); // millisecond
  const double d_dt_chaste_interface_var_fast_sodium_current_h_gate__h = (-var_chaste_interface__fast_sodium_current_h_gate__h + var_fast_sodium_current_h_gate__h_inf) / var_fast_sodium_current_h_gate__tau_h; // 1 / millisecond
  const double var_fast_sodium_current_j_gate__alpha_j = ((var_chaste_interface__membrane__V < -40.0) ? ((37.780000000000001 + var_chaste_interface__membrane__V) * (-25428.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V) - 6.9480000000000002e-6 * exp(-0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V))) : (0)); // per_millisecond
  const double var_fast_sodium_current_j_gate__beta_j = ((var_chaste_interface__membrane__V < -40.0) ? (0.024240000000000001 * exp(-0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__membrane__V))) : (0.59999999999999998 * exp(0.057000000000000002 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_millisecond
  const double var_fast_sodium_current_j_gate__j_inf = 0.01 * NV_Ith_S(mParameters, 15) + (1.0 - 0.01 * NV_Ith_S(mParameters, 15)) / pow((1.0 + exp(9.6298788694481825 + 0.13458950201884254 * var_chaste_interface__membrane__V - 0.13458950201884254 * NV_Ith_S(mParameters, 16))), 2); // dimensionless
  const double var_fast_sodium_current_j_gate__tau_j = 1 / (var_fast_sodium_current_j_gate__alpha_j + var_fast_sodium_current_j_gate__beta_j); // millisecond
  const double d_dt_chaste_interface_var_fast_sodium_current_j_gate__j = (-var_chaste_interface__fast_sodium_current_j_gate__j + var_fast_sodium_current_j_gate__j_inf) / var_fast_sodium_current_j_gate__tau_j; // 1 / millisecond
  const double var_fast_sodium_current_m_gate__alpha_m = 1 / (1.0 + exp(-12.0 - 0.20000000000000001 * var_chaste_interface__membrane__V)); // dimensionless
  const double var_fast_sodium_current_m_gate__beta_m = 0.10000000000000001 / (1.0 + exp(7.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)) + 0.10000000000000001 / (1.0 + exp(-0.25 + 0.0050000000000000001 * var_chaste_interface__membrane__V)); // dimensionless
  const double var_fast_sodium_current_m_gate__m_inf = 1 / pow((1.0 + exp(-6.2967884828349945 - 0.11074197120708749 * var_chaste_interface__membrane__V)), 2); // dimensionless
  const double var_fast_sodium_current_m_gate__tau_m = var_fast_sodium_current_m_gate__alpha_m * var_fast_sodium_current_m_gate__beta_m; // millisecond
  const double d_dt_chaste_interface_var_fast_sodium_current_m_gate__m = (-var_chaste_interface__fast_sodium_current_m_gate__m + var_fast_sodium_current_m_gate__m_inf) / var_fast_sodium_current_m_gate__tau_m; // 1 / millisecond
  const double var_membrane__V_c = 0.016403999999999998; // micrometre3
  const double d_dt_chaste_interface_var_calcium_dynamics__Ca_SR = (-var_calcium_dynamics__i_leak - var_calcium_dynamics__i_rel + var_calcium_dynamics__i_up) * var_calcium_dynamics__Ca_sr_bufsr * var_membrane__V_c / var_calcium_dynamics__V_sr; // millimolar / millisecond
  const double var_membrane__i_Stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
  const double var_membrane__i_Stim = var_membrane__i_Stim_converted / HeartConfig::Instance()->GetCapacitance(); // picoA_per_picoF
  const double var_rapid_time_dependent_potassium_current_Xr1_gate__alpha_xr1 = 450.0 / (1.0 + exp(-4.5 - 0.10000000000000001 * var_chaste_interface__membrane__V)); // dimensionless
  const double var_rapid_time_dependent_potassium_current_Xr1_gate__beta_xr1 = 6.0 / (1.0 + exp(2.6086956521739131 + 0.086956521739130432 * var_chaste_interface__membrane__V)); // dimensionless
  const double var_rapid_time_dependent_potassium_current_Xr1_gate__tau_xr1 = var_rapid_time_dependent_potassium_current_Xr1_gate__alpha_xr1 * var_rapid_time_dependent_potassium_current_Xr1_gate__beta_xr1; // millisecond
  const double var_rapid_time_dependent_potassium_current_Xr1_gate__xr1_inf = 1 / (1.0 + exp(-3.7142857142857144 - 0.14285714285714285 * var_chaste_interface__membrane__V)); // dimensionless
  const double d_dt_chaste_interface_var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = (-var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 + var_rapid_time_dependent_potassium_current_Xr1_gate__xr1_inf) / var_rapid_time_dependent_potassium_current_Xr1_gate__tau_xr1; // 1 / millisecond
  const double var_rapid_time_dependent_potassium_current_Xr2_gate__alpha_xr2 = 3.0 / (1.0 + exp(-3.0 - 0.050000000000000003 * var_chaste_interface__membrane__V)); // dimensionless
  const double var_rapid_time_dependent_potassium_current_Xr2_gate__beta_xr2 = 1.1200000000000001 / (1.0 + exp(-3.0 + 0.050000000000000003 * var_chaste_interface__membrane__V)); // dimensionless
  const double var_rapid_time_dependent_potassium_current_Xr2_gate__tau_xr2 = var_rapid_time_dependent_potassium_current_Xr2_gate__alpha_xr2 * var_rapid_time_dependent_potassium_current_Xr2_gate__beta_xr2; // millisecond
  const double var_rapid_time_dependent_potassium_current_Xr2_gate__xr2_inf = 1 / (1.0 + exp(3.6666666666666665 + 0.041666666666666664 * var_chaste_interface__membrane__V)); // dimensionless
  const double d_dt_chaste_interface_var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = (-var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 + var_rapid_time_dependent_potassium_current_Xr2_gate__xr2_inf) / var_rapid_time_dependent_potassium_current_Xr2_gate__tau_xr2; // 1 / millisecond
  const double var_reversal_potentials__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__calcium_dynamics__Ca_i) / var_membrane__F; // millivolt
  const double var_calcium_background_current__i_b_Ca = (-var_reversal_potentials__E_Ca + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 10); // picoA_per_picoF
  const double var_reversal_potentials__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__potassium_dynamics__K_i) / var_membrane__F; // millivolt
  const double var_inward_rectifier_potassium_current__alpha_K1 = 0.10000000000000001 / (1.0 + exp(-12.0 + 0.059999999999999998 * var_chaste_interface__membrane__V - 0.059999999999999998 * var_reversal_potentials__E_K)); // per_millisecond
  const double var_inward_rectifier_potassium_current__beta_K1 = (exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__V - 0.10000000000000001 * var_reversal_potentials__E_K) + 3.0 * exp(0.02 + 0.00020000000000000001 * var_chaste_interface__membrane__V - 0.00020000000000000001 * var_reversal_potentials__E_K)) / (1.0 + exp(0.5 * var_reversal_potentials__E_K - 0.5 * var_chaste_interface__membrane__V)); // per_millisecond
  const double var_inward_rectifier_potassium_current__xK1_inf = var_inward_rectifier_potassium_current__alpha_K1 / (var_inward_rectifier_potassium_current__alpha_K1 + var_inward_rectifier_potassium_current__beta_K1); // dimensionless
  const double var_inward_rectifier_potassium_current__i_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 6)) * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 17) * var_inward_rectifier_potassium_current__xK1_inf; // picoA_per_picoF
  const double var_potassium_pump_current__i_p_K = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 18) / (1.0 + exp(4.1806020066889626 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // picoA_per_picoF
  const double var_rapid_time_dependent_potassium_current__i_Kr = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 6)) * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 19) * var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 * var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2; // picoA_per_picoF
  const double var_reversal_potentials__P_kna = 0.029999999999999999; // dimensionless
  const double var_slow_time_dependent_potassium_current_Xs_gate__alpha_xs = 1100.0 / sqrt(1.0 + exp(-1.6666666666666667 - 0.16666666666666666 * var_chaste_interface__membrane__V)); // dimensionless
  const double var_slow_time_dependent_potassium_current_Xs_gate__beta_xs = 1 / (1.0 + exp(-3.0 + 0.050000000000000003 * var_chaste_interface__membrane__V)); // dimensionless
  const double var_slow_time_dependent_potassium_current_Xs_gate__tau_xs = var_slow_time_dependent_potassium_current_Xs_gate__alpha_xs * var_slow_time_dependent_potassium_current_Xs_gate__beta_xs; // millisecond
  const double var_slow_time_dependent_potassium_current_Xs_gate__xs_inf = 1 / (1.0 + exp(-0.35714285714285715 - 0.071428571428571425 * var_chaste_interface__membrane__V)); // dimensionless
  const double d_dt_chaste_interface_var_slow_time_dependent_potassium_current_Xs_gate__Xs = (-var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs + var_slow_time_dependent_potassium_current_Xs_gate__xs_inf) / var_slow_time_dependent_potassium_current_Xs_gate__tau_xs; // 1 / millisecond
  const double var_sodium_calcium_exchanger_current__K_sat = 0.10000000000000001; // dimensionless
  const double var_sodium_calcium_exchanger_current__Km_Ca = 1.3799999999999999; // millimolar
  const double var_sodium_calcium_exchanger_current__Km_Nai = 87.5; // millimolar
  const double var_sodium_calcium_exchanger_current__alpha = 2.5; // dimensionless
  const double var_sodium_calcium_exchanger_current__gamma = 0.34999999999999998; // dimensionless
  const double var_reversal_potentials__E_Ks = var_membrane__R * var_membrane__T * log((var_reversal_potentials__P_kna * NV_Ith_S(mParameters, 7) + NV_Ith_S(mParameters, 6)) / (var_reversal_potentials__P_kna * var_chaste_interface__sodium_dynamics__Na_i + var_chaste_interface__potassium_dynamics__K_i)) / var_membrane__F; // millivolt
  const double var_reversal_potentials__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 7) / var_chaste_interface__sodium_dynamics__Na_i) / var_membrane__F; // millivolt
  const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_reversal_potentials__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 14) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // picoA_per_picoF
  const double var_slow_time_dependent_potassium_current__i_Ks = pow(var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs, 2) * (-var_reversal_potentials__E_Ks + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 20); // picoA_per_picoF
  const double var_sodium_background_current__i_b_Na = (-var_reversal_potentials__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 11); // picoA_per_picoF
  const double var_sodium_calcium_exchanger_current__i_NaCa = (pow(var_chaste_interface__sodium_dynamics__Na_i, 3) * NV_Ith_S(mParameters, 5) * exp(var_membrane__F * var_chaste_interface__membrane__V * var_sodium_calcium_exchanger_current__gamma / (var_membrane__R * var_membrane__T)) - pow(NV_Ith_S(mParameters, 7), 3) * var_chaste_interface__calcium_dynamics__Ca_i * var_sodium_calcium_exchanger_current__alpha * exp((-1.0 + var_sodium_calcium_exchanger_current__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 21) / ((1.0 + var_sodium_calcium_exchanger_current__K_sat * exp((-1.0 + var_sodium_calcium_exchanger_current__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * (pow(var_sodium_calcium_exchanger_current__Km_Nai, 3) + pow(NV_Ith_S(mParameters, 7), 3)) * (NV_Ith_S(mParameters, 5) + var_sodium_calcium_exchanger_current__Km_Ca)); // picoA_per_picoF
  const double d_dt_chaste_interface_var_calcium_dynamics__Ca_i = (-var_calcium_dynamics__i_up - 0.5 * (-2.0 * var_sodium_calcium_exchanger_current__i_NaCa + var_L_type_Ca_current__i_CaL + var_calcium_background_current__i_b_Ca + var_calcium_pump_current__i_p_Ca) * NV_Ith_S(mParameters, 13) / (var_membrane__F * var_membrane__V_c) + var_calcium_dynamics__i_leak + var_calcium_dynamics__i_rel) * var_calcium_dynamics__Ca_i_bufc; // millimolar / millisecond
  const double var_sodium_potassium_pump_current__K_mNa = 40.0; // millimolar
  const double var_sodium_potassium_pump_current__K_mk = 1.0; // millimolar
  const double var_sodium_potassium_pump_current__i_NaK = NV_Ith_S(mParameters, 6) * var_chaste_interface__sodium_dynamics__Na_i * NV_Ith_S(mParameters, 22) / ((NV_Ith_S(mParameters, 6) + var_sodium_potassium_pump_current__K_mk) * (var_chaste_interface__sodium_dynamics__Na_i + var_sodium_potassium_pump_current__K_mNa) * (1.0 + 0.035299999999999998 * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)))); // picoA_per_picoF
  const double d_dt_chaste_interface_var_sodium_dynamics__Na_i = -(3.0 * var_sodium_calcium_exchanger_current__i_NaCa + 3.0 * var_sodium_potassium_pump_current__i_NaK + var_fast_sodium_current__i_Na + var_sodium_background_current__i_b_Na) * NV_Ith_S(mParameters, 13) * NV_Ith_S(mParameters, 4) / (var_membrane__F * var_membrane__V_c); // millimolar / millisecond
  const double var_transient_outward_current_r_gate__r_inf = 1 / (1.0 + exp(3.3333333333333335 - 0.16666666666666666 * var_chaste_interface__membrane__V)); // dimensionless
  const double var_transient_outward_current_r_gate__tau_r = 0.80000000000000004 + 9.5 * exp(-0.88888888888888884 * pow((1 + 0.025000000000000001 * var_chaste_interface__membrane__V), 2)); // millisecond
  const double d_dt_chaste_interface_var_transient_outward_current_r_gate__r = (-var_chaste_interface__transient_outward_current_r_gate__r + var_transient_outward_current_r_gate__r_inf) / var_transient_outward_current_r_gate__tau_r; // 1 / millisecond
  const double var_transient_outward_current__i_to = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 23) * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s; // picoA_per_picoF
  const double d_dt_chaste_interface_var_potassium_dynamics__K_i = -(-2.0 * var_sodium_potassium_pump_current__i_NaK + var_inward_rectifier_potassium_current__i_K1 + var_membrane__i_Stim + var_potassium_pump_current__i_p_K + var_rapid_time_dependent_potassium_current__i_Kr + var_slow_time_dependent_potassium_current__i_Ks + var_transient_outward_current__i_to) * NV_Ith_S(mParameters, 13) * NV_Ith_S(mParameters, 4) / (var_membrane__F * var_membrane__V_c); // millimolar / millisecond
  const double var_transient_outward_current_s_gate__s_inf = 1 / (1.0 + exp(4.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)); // dimensionless
  const double var_transient_outward_current_s_gate__tau_s = 3.0 + 5.0 / (1.0 + exp(-4.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)) + 85.0 * exp(-6.328125 * pow((1 + 0.022222222222222223 * var_chaste_interface__membrane__V), 2)); // millisecond
  const double d_dt_chaste_interface_var_transient_outward_current_s_gate__s = (-var_chaste_interface__transient_outward_current_s_gate__s + var_transient_outward_current_s_gate__s_inf) / var_transient_outward_current_s_gate__tau_s; // 1 / millisecond

  if (mSetVoltageDerivativeToZero)
    {
      d_dt_chaste_interface_var_membrane__V = 0.0;
    }
  else
    {
      d_dt_chaste_interface_var_membrane__V = -var_L_type_Ca_current__i_CaL - var_calcium_background_current__i_b_Ca - var_calcium_pump_current__i_p_Ca - var_fast_sodium_current__i_Na - var_inward_rectifier_potassium_current__i_K1 - var_membrane__i_Stim - var_potassium_pump_current__i_p_K - var_rapid_time_dependent_potassium_current__i_Kr - var_slow_time_dependent_potassium_current__i_Ks - var_sodium_background_current__i_b_Na - var_sodium_calcium_exchanger_current__i_NaCa - var_sodium_potassium_pump_current__i_NaK - var_transient_outward_current__i_to; // millivolt / millisecond
    }

  NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_calcium_dynamics__Ca_i;
  NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1;
  NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2;
  NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_slow_time_dependent_potassium_current_Xs_gate__Xs;
  NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_fast_sodium_current_m_gate__m;
  NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_fast_sodium_current_h_gate__h;
  NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_fast_sodium_current_j_gate__j;
  NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_L_type_Ca_current_d_gate__d;
  NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_L_type_Ca_current_f_gate__f;
  NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_L_type_Ca_current_fCa_gate__fCa;
  NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_transient_outward_current_s_gate__s;
  NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_transient_outward_current_r_gate__r;
  NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_calcium_dynamics__Ca_SR;
  NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_calcium_dynamics__g;
  NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_sodium_dynamics__Na_i;
  NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_potassium_dynamics__K_i;
  NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_membrane__V;
}

N_Vector Cellten_tusscher_2004_epi_analytic_voltageFromCellMLCvode::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const N_Vector & rY)
{
  // Inputs:
  // Time units: millisecond
  double var_chaste_interface__calcium_dynamics__Ca_i = NV_Ith_S(rY, 0);
  // Units: millimolar; Initial value: 0.0002
  double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = NV_Ith_S(rY, 1);
  // Units: dimensionless; Initial value: 0.0
  double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = NV_Ith_S(rY, 2);
  // Units: dimensionless; Initial value: 1.0
  double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = NV_Ith_S(rY, 3);
  // Units: dimensionless; Initial value: 0.0
  double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 4);
  // Units: dimensionless; Initial value: 0.0
  double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 5);
  // Units: dimensionless; Initial value: 0.75
  double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 6);
  // Units: dimensionless; Initial value: 0.75
  double var_chaste_interface__L_type_Ca_current_d_gate__d = NV_Ith_S(rY, 7);
  // Units: dimensionless; Initial value: 0.0
  double var_chaste_interface__L_type_Ca_current_f_gate__f = NV_Ith_S(rY, 8);
  // Units: dimensionless; Initial value: 1.0
  double var_chaste_interface__L_type_Ca_current_fCa_gate__fCa = NV_Ith_S(rY, 9);
  // Units: dimensionless; Initial value: 1.0
  double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 10);
  // Units: dimensionless; Initial value: 1.0
  double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 11);
  // Units: dimensionless; Initial value: 0.0
  double var_chaste_interface__calcium_dynamics__Ca_SR = NV_Ith_S(rY, 12);
  // Units: millimolar; Initial value: 0.2
  double var_chaste_interface__calcium_dynamics__g = NV_Ith_S(rY, 13);
  // Units: dimensionless; Initial value: 1.0
  double var_chaste_interface__sodium_dynamics__Na_i = NV_Ith_S(rY, 14);
  // Units: millimolar; Initial value: 11.6
  double var_chaste_interface__potassium_dynamics__K_i = NV_Ith_S(rY, 15);
  // Units: millimolar; Initial value: 138.3
  double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : CalculateAnalyticVoltage(rY, mParameters));
  // Units: millivolt; Initial value: -86.2

  // Mathematics
  const double var_L_type_Ca_current__v0 = 0; // millivolt
  const double var_calcium_dynamics__Buf_c = 0.14999999999999999; // millimolar
  const double var_calcium_dynamics__Buf_sr = 10.0; // millimolar
  const double var_calcium_dynamics__K_buf_c = 0.001; // millimolar
  const double var_calcium_dynamics__K_buf_sr = 0.29999999999999999; // millimolar
  const double var_calcium_dynamics__V_sr = 0.0010939999999999999; // micrometre3
  const double var_calcium_dynamics__b_rel = 0.25; // millimolar
  const double var_calcium_dynamics__c_rel = 0.0082319999999999997; // millimolar_per_millisecond
  const double var_calcium_dynamics__i_rel = (pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2) * NV_Ith_S(mParameters, 2) / (pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2) + pow(var_calcium_dynamics__b_rel, 2)) + var_calcium_dynamics__c_rel) * var_chaste_interface__L_type_Ca_current_d_gate__d * var_chaste_interface__calcium_dynamics__g; // millimolar_per_millisecond
  const double var_calcium_pump_current__K_pCa = 0.00050000000000000001; // millimolar
  const double var_calcium_pump_current__i_p_Ca = var_chaste_interface__calcium_dynamics__Ca_i * NV_Ith_S(mParameters, 12) / (var_chaste_interface__calcium_dynamics__Ca_i + var_calcium_pump_current__K_pCa); // picoA_per_picoF
  const double var_calcium_pump_current__i_p_Ca_converted = HeartConfig::Instance()->GetCapacitance() * var_calcium_pump_current__i_p_Ca; // uA_per_cm2
  const double var_membrane__Ca_i_tot = var_calcium_dynamics__Buf_c * var_chaste_interface__calcium_dynamics__Ca_i / (var_chaste_interface__calcium_dynamics__Ca_i + var_calcium_dynamics__K_buf_c) + var_chaste_interface__calcium_dynamics__Ca_i; // millimolar
  const double var_membrane__Ca_sr_tot = var_calcium_dynamics__Buf_sr * var_chaste_interface__calcium_dynamics__Ca_SR / (var_chaste_interface__calcium_dynamics__Ca_SR + var_calcium_dynamics__K_buf_sr) + var_chaste_interface__calcium_dynamics__Ca_SR; // millimolar
  const double var_membrane__F = 96485.341499999995; // coulomb_per_millimole
  const double var_membrane__R = 8314.4719999999998; // joule_per_mole_kelvin
  const double var_membrane__T = 310.0; // kelvin
  const double var_L_type_Ca_current__B = 2.0 * var_membrane__F / (var_membrane__R * var_membrane__T); // per_millivolt
  const double var_L_type_Ca_current__A = 4.0 * pow(var_membrane__F, 2) * (-0.34100000000000003 * NV_Ith_S(mParameters, 5) + var_chaste_interface__calcium_dynamics__Ca_i * exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 8) * var_chaste_interface__L_type_Ca_current_d_gate__d * var_chaste_interface__L_type_Ca_current_fCa_gate__fCa * var_chaste_interface__L_type_Ca_current_f_gate__f / (var_L_type_Ca_current__B * var_membrane__R * var_membrane__T); // picoA_per_picoF
  const double var_L_type_Ca_current__U = (-var_L_type_Ca_current__v0 + var_chaste_interface__membrane__V) * var_L_type_Ca_current__B; // dimensionless
  const double var_L_type_Ca_current__i_CaL = (((var_L_type_Ca_current__U >= -9.9999999999999995e-8) && (var_L_type_Ca_current__U <= 9.9999999999999995e-8)) ? ((1.0 - 0.5 * var_L_type_Ca_current__U) * var_L_type_Ca_current__A) : (var_L_type_Ca_current__A * var_L_type_Ca_current__U / (-1.0 + exp(var_L_type_Ca_current__U)))); // picoA_per_picoF
  const double var_L_type_Ca_current__i_CaL_converted = HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_current__i_CaL; // uA_per_cm2
  const double var_L_type_Ca_current_f_gate__tau_f = 80.0 + 165.0 / (1.0 + exp(2.5 - 0.10000000000000001 * var_chaste_interface__membrane__V)) + 1125.0 * exp(-3.0375000000000001 * pow((1 + 0.037037037037037035 * var_chaste_interface__membrane__V), 2)); // millisecond
  const double var_fast_sodium_current_h_gate__alpha_h = ((var_chaste_interface__membrane__V < -40.0) ? (0.057000000000000002 * exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__membrane__V)) : (0)); // per_millisecond
  const double var_fast_sodium_current_h_gate__beta_h = ((var_chaste_interface__membrane__V < -40.0) ? (310000.0 * exp(0.34849999999999998 * var_chaste_interface__membrane__V) + 2.7000000000000002 * exp(0.079000000000000001 * var_chaste_interface__membrane__V)) : (5.9230769230769234 / (1.0 + exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__membrane__V)))); // per_millisecond
  const double var_fast_sodium_current_h_gate__tau_h = 1 / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h); // millisecond
  const double var_fast_sodium_current_j_gate__alpha_j = ((var_chaste_interface__membrane__V < -40.0) ? ((37.780000000000001 + var_chaste_interface__membrane__V) * (-25428.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V) - 6.9480000000000002e-6 * exp(-0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V))) : (0)); // per_millisecond
  const double var_fast_sodium_current_j_gate__beta_j = ((var_chaste_interface__membrane__V < -40.0) ? (0.024240000000000001 * exp(-0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__membrane__V))) : (0.59999999999999998 * exp(0.057000000000000002 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_millisecond
  const double var_fast_sodium_current_j_gate__tau_j = 1 / (var_fast_sodium_current_j_gate__alpha_j + var_fast_sodium_current_j_gate__beta_j); // millisecond
  const double var_membrane__V_c = 0.016403999999999998; // micrometre3
  const double var_membrane__i_Stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
  const double var_reversal_potentials__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__calcium_dynamics__Ca_i) / var_membrane__F; // millivolt
  const double var_calcium_background_current__i_b_Ca = (-var_reversal_potentials__E_Ca + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 10); // picoA_per_picoF
  const double var_calcium_background_current__i_b_Ca_converted = HeartConfig::Instance()->GetCapacitance() * var_calcium_background_current__i_b_Ca; // uA_per_cm2
  const double var_reversal_potentials__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__potassium_dynamics__K_i) / var_membrane__F; // millivolt
  const double var_inward_rectifier_potassium_current__alpha_K1 = 0.10000000000000001 / (1.0 + exp(-12.0 + 0.059999999999999998 * var_chaste_interface__membrane__V - 0.059999999999999998 * var_reversal_potentials__E_K)); // per_millisecond
  const double var_inward_rectifier_potassium_current__beta_K1 = (exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__V - 0.10000000000000001 * var_reversal_potentials__E_K) + 3.0 * exp(0.02 + 0.00020000000000000001 * var_chaste_interface__membrane__V - 0.00020000000000000001 * var_reversal_potentials__E_K)) / (1.0 + exp(0.5 * var_reversal_potentials__E_K - 0.5 * var_chaste_interface__membrane__V)); // per_millisecond
  const double var_inward_rectifier_potassium_current__xK1_inf = var_inward_rectifier_potassium_current__alpha_K1 / (var_inward_rectifier_potassium_current__alpha_K1 + var_inward_rectifier_potassium_current__beta_K1); // dimensionless
  const double var_inward_rectifier_potassium_current__i_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 6)) * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 17) * var_inward_rectifier_potassium_current__xK1_inf; // picoA_per_picoF
  const double var_inward_rectifier_potassium_current__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_inward_rectifier_potassium_current__i_K1; // uA_per_cm2
  const double var_potassium_pump_current__i_p_K = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 18) / (1.0 + exp(4.1806020066889626 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // picoA_per_picoF
  const double var_potassium_pump_current__i_p_K_converted = HeartConfig::Instance()->GetCapacitance() * var_potassium_pump_current__i_p_K; // uA_per_cm2
  const double var_rapid_time_dependent_potassium_current__i_Kr = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 6)) * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 19) * var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 * var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2; // picoA_per_picoF
  const double var_rapid_time_dependent_potassium_current__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_rapid_time_dependent_potassium_current__i_Kr; // uA_per_cm2
  const double var_reversal_potentials__P_kna = 0.029999999999999999; // dimensionless
  const double var_sodium_calcium_exchanger_current__K_sat = 0.10000000000000001; // dimensionless
  const double var_sodium_calcium_exchanger_current__Km_Ca = 1.3799999999999999; // millimolar
  const double var_sodium_calcium_exchanger_current__Km_Nai = 87.5; // millimolar
  const double var_sodium_calcium_exchanger_current__alpha = 2.5; // dimensionless
  const double var_sodium_calcium_exchanger_current__gamma = 0.34999999999999998; // dimensionless
  const double var_membrane__potential = (2.0 * var_membrane__Ca_i_tot + 2.0 * var_calcium_dynamics__V_sr * var_membrane__Ca_sr_tot / var_membrane__V_c + var_chaste_interface__potassium_dynamics__K_i + var_chaste_interface__sodium_dynamics__Na_i) * var_membrane__F * var_membrane__V_c / NV_Ith_S(mParameters, 13); // millivolt
  const double var_membrane__sum_ext_charges = 2.0 * NV_Ith_S(mParameters, 5) + NV_Ith_S(mParameters, 6) + NV_Ith_S(mParameters, 7); // millimolar
  const double var_membrane__C0 = NV_Ith_S(mParameters, 0) + var_membrane__sum_ext_charges; // millimolar
  const double var_membrane__V2 = -var_membrane__C0 * var_membrane__F * var_membrane__V_c / NV_Ith_S(mParameters, 13) + var_membrane__potential; // millivolt
  const double var_reversal_potentials__E_Ks = var_membrane__R * var_membrane__T * log((var_reversal_potentials__P_kna * NV_Ith_S(mParameters, 7) + NV_Ith_S(mParameters, 6)) / (var_reversal_potentials__P_kna * var_chaste_interface__sodium_dynamics__Na_i + var_chaste_interface__potassium_dynamics__K_i)) / var_membrane__F; // millivolt
  const double var_reversal_potentials__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 7) / var_chaste_interface__sodium_dynamics__Na_i) / var_membrane__F; // millivolt
  const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_reversal_potentials__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 14) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // picoA_per_picoF
  const double var_fast_sodium_current__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na; // uA_per_cm2
  const double var_slow_time_dependent_potassium_current__i_Ks = pow(var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs, 2) * (-var_reversal_potentials__E_Ks + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 20); // picoA_per_picoF
  const double var_slow_time_dependent_potassium_current__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_slow_time_dependent_potassium_current__i_Ks; // uA_per_cm2
  const double var_sodium_background_current__i_b_Na = (-var_reversal_potentials__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 11); // picoA_per_picoF
  const double var_sodium_background_current__i_b_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_sodium_background_current__i_b_Na; // uA_per_cm2
  const double var_sodium_calcium_exchanger_current__i_NaCa = (pow(var_chaste_interface__sodium_dynamics__Na_i, 3) * NV_Ith_S(mParameters, 5) * exp(var_membrane__F * var_chaste_interface__membrane__V * var_sodium_calcium_exchanger_current__gamma / (var_membrane__R * var_membrane__T)) - pow(NV_Ith_S(mParameters, 7), 3) * var_chaste_interface__calcium_dynamics__Ca_i * var_sodium_calcium_exchanger_current__alpha * exp((-1.0 + var_sodium_calcium_exchanger_current__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 21) / ((1.0 + var_sodium_calcium_exchanger_current__K_sat * exp((-1.0 + var_sodium_calcium_exchanger_current__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * (pow(var_sodium_calcium_exchanger_current__Km_Nai, 3) + pow(NV_Ith_S(mParameters, 7), 3)) * (NV_Ith_S(mParameters, 5) + var_sodium_calcium_exchanger_current__Km_Ca)); // picoA_per_picoF
  const double var_sodium_calcium_exchanger_current__i_NaCa_converted = HeartConfig::Instance()->GetCapacitance() * var_sodium_calcium_exchanger_current__i_NaCa; // uA_per_cm2
  const double var_sodium_potassium_pump_current__K_mNa = 40.0; // millimolar
  const double var_sodium_potassium_pump_current__K_mk = 1.0; // millimolar
  const double var_sodium_potassium_pump_current__i_NaK = NV_Ith_S(mParameters, 6) * var_chaste_interface__sodium_dynamics__Na_i * NV_Ith_S(mParameters, 22) / ((NV_Ith_S(mParameters, 6) + var_sodium_potassium_pump_current__K_mk) * (var_chaste_interface__sodium_dynamics__Na_i + var_sodium_potassium_pump_current__K_mNa) * (1.0 + 0.035299999999999998 * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)))); // picoA_per_picoF
  const double var_sodium_potassium_pump_current__i_NaK_converted = HeartConfig::Instance()->GetCapacitance() * var_sodium_potassium_pump_current__i_NaK; // uA_per_cm2
  const double var_transient_outward_current__i_to = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 23) * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s; // picoA_per_picoF
  const double var_transient_outward_current__i_to_converted = HeartConfig::Instance()->GetCapacitance() * var_transient_outward_current__i_to; // uA_per_cm2

  N_Vector dqs = N_VNew_Serial(20);
  NV_Ith_S(dqs, 0) = var_membrane__C0;
  NV_Ith_S(dqs, 1) = var_calcium_dynamics__i_rel;
  NV_Ith_S(dqs, 2) = var_membrane__V2;
  NV_Ith_S(dqs, 3) = var_L_type_Ca_current__i_CaL_converted;
  NV_Ith_S(dqs, 4) = var_L_type_Ca_current_f_gate__tau_f;
  NV_Ith_S(dqs, 5) = var_calcium_background_current__i_b_Ca_converted;
  NV_Ith_S(dqs, 6) = var_sodium_background_current__i_b_Na_converted;
  NV_Ith_S(dqs, 7) = var_calcium_pump_current__i_p_Ca_converted;
  NV_Ith_S(dqs, 8) = var_fast_sodium_current__i_Na_converted;
  NV_Ith_S(dqs, 9) = var_fast_sodium_current_h_gate__tau_h;
  NV_Ith_S(dqs, 10) = var_fast_sodium_current_j_gate__tau_j;
  NV_Ith_S(dqs, 11) = var_inward_rectifier_potassium_current__i_K1_converted;
  NV_Ith_S(dqs, 12) = var_potassium_pump_current__i_p_K_converted;
  NV_Ith_S(dqs, 13) = var_rapid_time_dependent_potassium_current__i_Kr_converted;
  NV_Ith_S(dqs, 14) = var_slow_time_dependent_potassium_current__i_Ks_converted;
  NV_Ith_S(dqs, 15) = var_sodium_calcium_exchanger_current__i_NaCa_converted;
  NV_Ith_S(dqs, 16) = var_sodium_potassium_pump_current__i_NaK_converted;
  NV_Ith_S(dqs, 17) = var_membrane__i_Stim_converted;
  NV_Ith_S(dqs, 18) = var_transient_outward_current__i_to_converted;
  NV_Ith_S(dqs, 19) = var_chaste_interface__environment__time;
  return dqs;
}

template<>
void OdeSystemInformation<Cellten_tusscher_2004_epi_analytic_voltageFromCellMLCvode>::Initialise(void)
{
  this->mSystemName = "tentusscher_model_2004_epi_analytic_voltage";
  this->mFreeVariableName = "time";
  this->mFreeVariableUnits = "millisecond";

  // NV_Ith_S(rY, 0):
  this->mVariableNames.push_back("cytosolic_calcium_concentration");
  this->mVariableUnits.push_back("millimolar");
  this->mInitialConditions.push_back(0.0002);

  // NV_Ith_S(rY, 1):
  this->mVariableNames.push_back("rapid_time_dependent_potassium_current_Xr1_gate__Xr1");
  this->mVariableUnits.push_back("dimensionless");
  this->mInitialConditions.push_back(0.0);

  // NV_Ith_S(rY, 2):
  this->mVariableNames.push_back("rapid_time_dependent_potassium_current_Xr2_gate__Xr2");
  this->mVariableUnits.push_back("dimensionless");
  this->mInitialConditions.push_back(1.0);

  // NV_Ith_S(rY, 3):
  this->mVariableNames.push_back("slow_time_dependent_potassium_current_Xs_gate__Xs");
  this->mVariableUnits.push_back("dimensionless");
  this->mInitialConditions.push_back(0.0);

  // NV_Ith_S(rY, 4):
  this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
  this->mVariableUnits.push_back("dimensionless");
  this->mInitialConditions.push_back(0.0);

  // NV_Ith_S(rY, 5):
  this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
  this->mVariableUnits.push_back("dimensionless");
  this->mInitialConditions.push_back(0.75);

  // NV_Ith_S(rY, 6):
  this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
  this->mVariableUnits.push_back("dimensionless");
  this->mInitialConditions.push_back(0.75);

  // NV_Ith_S(rY, 7):
  this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
  this->mVariableUnits.push_back("dimensionless");
  this->mInitialConditions.push_back(0.0);

  // NV_Ith_S(rY, 8):
  this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
  this->mVariableUnits.push_back("dimensionless");
  this->mInitialConditions.push_back(1.0);

  // NV_Ith_S(rY, 9):
  this->mVariableNames.push_back("membrane_L_type_calcium_current_fCa_gate");
  this->mVariableUnits.push_back("dimensionless");
  this->mInitialConditions.push_back(1.0);

  // NV_Ith_S(rY, 10):
  this->mVariableNames.push_back("transient_outward_current_s_gate__s");
  this->mVariableUnits.push_back("dimensionless");
  this->mInitialConditions.push_back(1.0);

  // NV_Ith_S(rY, 11):
  this->mVariableNames.push_back("transient_outward_current_r_gate__r");
  this->mVariableUnits.push_back("dimensionless");
  this->mInitialConditions.push_back(0.0);

  // NV_Ith_S(rY, 12):
  this->mVariableNames.push_back("JSR_calcium_concentration");
  this->mVariableUnits.push_back("millimolar");
  this->mInitialConditions.push_back(0.2);

  // NV_Ith_S(rY, 13):
  this->mVariableNames.push_back("calcium_dynamics__g");
  this->mVariableUnits.push_back("dimensionless");
  this->mInitialConditions.push_back(1.0);

  // NV_Ith_S(rY, 14):
  this->mVariableNames.push_back("cytosolic_sodium_concentration");
  this->mVariableUnits.push_back("millimolar");
  this->mInitialConditions.push_back(11.6);

  // NV_Ith_S(rY, 15):
  this->mVariableNames.push_back("cytosolic_potassium_concentration");
  this->mVariableUnits.push_back("millimolar");
  this->mInitialConditions.push_back(138.3);

  // mParameters[0]:
  this->mParameterNames.push_back("Gamma0");
  this->mParameterUnits.push_back("millimolar");

  // mParameters[1]:
  this->mParameterNames.push_back("SR_leak_current_max");
  this->mParameterUnits.push_back("per_millisecond");

  // mParameters[2]:
  this->mParameterNames.push_back("SR_release_current_max");
  this->mParameterUnits.push_back("millimolar_per_millisecond");

  // mParameters[3]:
  this->mParameterNames.push_back("SR_uptake_current_max");
  this->mParameterUnits.push_back("millimolar_per_millisecond");

  // mParameters[4]:
  this->mParameterNames.push_back("concentration_clamp_onoff");
  this->mParameterUnits.push_back("dimensionless");

  // mParameters[5]:
  this->mParameterNames.push_back("extracellular_calcium_concentration");
  this->mParameterUnits.push_back("millimolar");

  // mParameters[6]:
  this->mParameterNames.push_back("extracellular_potassium_concentration");
  this->mParameterUnits.push_back("millimolar");

  // mParameters[7]:
  this->mParameterNames.push_back("extracellular_sodium_concentration");
  this->mParameterUnits.push_back("millimolar");

  // mParameters[8]:
  this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
  this->mParameterUnits.push_back("litre_per_farad_second");

  // mParameters[9]:
  this->mParameterNames.push_back("membrane_L_type_calcium_current_fCa_gate_tau");
  this->mParameterUnits.push_back("millisecond");

  // mParameters[10]:
  this->mParameterNames.push_back("membrane_background_calcium_current_conductance");
  this->mParameterUnits.push_back("nanoS_per_picoF");

  // mParameters[11]:
  this->mParameterNames.push_back("membrane_background_sodium_current_conductance");
  this->mParameterUnits.push_back("nanoS_per_picoF");

  // mParameters[12]:
  this->mParameterNames.push_back("membrane_calcium_pump_current_conductance");
  this->mParameterUnits.push_back("picoA_per_picoF");

  // mParameters[13]:
  this->mParameterNames.push_back("membrane_capacitance");
  this->mParameterUnits.push_back("microF");

  // mParameters[14]:
  this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
  this->mParameterUnits.push_back("nanoS_per_picoF");

  // mParameters[15]:
  this->mParameterNames.push_back("membrane_fast_sodium_current_reduced_inactivation");
  this->mParameterUnits.push_back("dimensionless");

  // mParameters[16]:
  this->mParameterNames.push_back("membrane_fast_sodium_current_shift_inactivation");
  this->mParameterUnits.push_back("millivolt");

  // mParameters[17]:
  this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
  this->mParameterUnits.push_back("nanoS_per_picoF");

  // mParameters[18]:
  this->mParameterNames.push_back("membrane_potassium_pump_current_conductance");
  this->mParameterUnits.push_back("nanoS_per_picoF");

  // mParameters[19]:
  this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
  this->mParameterUnits.push_back("nanoS_per_picoF");

  // mParameters[20]:
  this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
  this->mParameterUnits.push_back("nanoS_per_picoF");

  // mParameters[21]:
  this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
  this->mParameterUnits.push_back("picoA_per_picoF");

  // mParameters[22]:
  this->mParameterNames.push_back("membrane_sodium_potassium_pump_current_permeability");
  this->mParameterUnits.push_back("picoA_per_picoF");

  // mParameters[23]:
  this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
  this->mParameterUnits.push_back("nanoS_per_picoF");

  // Derived Quantity index [0]:
  this->mDerivedQuantityNames.push_back("C0");
  this->mDerivedQuantityUnits.push_back("millimolar");

  // Derived Quantity index [1]:
  this->mDerivedQuantityNames.push_back("SR_release_current");
  this->mDerivedQuantityUnits.push_back("millimolar_per_millisecond");

  // Derived Quantity index [2]:
  this->mDerivedQuantityNames.push_back("membrane_voltage");
  this->mDerivedQuantityUnits.push_back("millivolt");

  // Derived Quantity index [3]:
  this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
  this->mDerivedQuantityUnits.push_back("uA_per_cm2");

  // Derived Quantity index [4]:
  this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_f_gate_tau");
  this->mDerivedQuantityUnits.push_back("millisecond");

  // Derived Quantity index [5]:
  this->mDerivedQuantityNames.push_back("membrane_background_calcium_current");
  this->mDerivedQuantityUnits.push_back("uA_per_cm2");

  // Derived Quantity index [6]:
  this->mDerivedQuantityNames.push_back("membrane_background_sodium_current");
  this->mDerivedQuantityUnits.push_back("uA_per_cm2");

  // Derived Quantity index [7]:
  this->mDerivedQuantityNames.push_back("membrane_calcium_pump_current");
  this->mDerivedQuantityUnits.push_back("uA_per_cm2");

  // Derived Quantity index [8]:
  this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
  this->mDerivedQuantityUnits.push_back("uA_per_cm2");

  // Derived Quantity index [9]:
  this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_h_gate_tau");
  this->mDerivedQuantityUnits.push_back("millisecond");

  // Derived Quantity index [10]:
  this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_j_gate_tau");
  this->mDerivedQuantityUnits.push_back("millisecond");

  // Derived Quantity index [11]:
  this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
  this->mDerivedQuantityUnits.push_back("uA_per_cm2");

  // Derived Quantity index [12]:
  this->mDerivedQuantityNames.push_back("membrane_potassium_pump_current");
  this->mDerivedQuantityUnits.push_back("uA_per_cm2");

  // Derived Quantity index [13]:
  this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
  this->mDerivedQuantityUnits.push_back("uA_per_cm2");

  // Derived Quantity index [14]:
  this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
  this->mDerivedQuantityUnits.push_back("uA_per_cm2");

  // Derived Quantity index [15]:
  this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
  this->mDerivedQuantityUnits.push_back("uA_per_cm2");

  // Derived Quantity index [16]:
  this->mDerivedQuantityNames.push_back("membrane_sodium_potassium_pump_current");
  this->mDerivedQuantityUnits.push_back("uA_per_cm2");

  // Derived Quantity index [17]:
  this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
  this->mDerivedQuantityUnits.push_back("uA_per_cm2");

  // Derived Quantity index [18]:
  this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
  this->mDerivedQuantityUnits.push_back("uA_per_cm2");

  // Derived Quantity index [19]:
  this->mDerivedQuantityNames.push_back("time");
  this->mDerivedQuantityUnits.push_back("millisecond");

  this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellten_tusscher_2004_epi_analytic_voltageFromCellMLCvode)

#endif // CHASTE_CVODE
