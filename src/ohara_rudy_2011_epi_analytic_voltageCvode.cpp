#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version 0.6.3
//!
//! Model: ohara_rudy_2011_epi
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: NumericCvode)
//! on 2021-03-16 20:33:26
//!
//! <autogenerated>

#include "ohara_rudy_2011_epi_analytic_voltageCvode.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

static double CalculateAnalyticVoltage(const N_Vector& rY, const N_Vector& mParameters){
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__intracellular_ions__cai = NV_Ith_S(rY, 0);
        // Units: millimolar; Initial value: 0.0001
        double var_chaste_interface__intracellular_ions__nai = NV_Ith_S(rY, 2);
        // Units: millimolar; Initial value: 7.0
        double var_chaste_interface__intracellular_ions__nass = NV_Ith_S(rY, 3);
        // Units: millimolar; Initial value: 7.0
        double var_chaste_interface__intracellular_ions__ki = NV_Ith_S(rY, 4);
        // Units: millimolar; Initial value: 145.0
        double var_chaste_interface__intracellular_ions__kss = NV_Ith_S(rY, 5);
        // Units: millimolar; Initial value: 145.0
        double var_chaste_interface__intracellular_ions__cass = NV_Ith_S(rY, 6);
        // Units: millimolar; Initial value: 0.0001
        double var_chaste_interface__intracellular_ions__cansr = NV_Ith_S(rY, 7);
        // Units: millimolar; Initial value: 1.2
        double var_chaste_interface__intracellular_ions__cajsr = NV_Ith_S(rY, 8);
        // Units: millimolar; Initial value: 1.2
        // Mathematics
        const double var_cell_geometry__L = 0.01; // centimeter
        const double var_cell_geometry__rad = 0.0011000000000000001; // centimeter
        const double var_cell_geometry__Ageo = 6.2800000000000002 * pow(var_cell_geometry__rad, 2) + 6.2800000000000002 * var_cell_geometry__L * var_cell_geometry__rad; // centimeter_squared
        const double var_cell_geometry__Acap = 2.0 * var_cell_geometry__Ageo; // centimeter_squared
        const double var_cell_geometry__vcell = 3140.0 * pow(var_cell_geometry__rad, 2) * var_cell_geometry__L; // microliter
        const double var_cell_geometry__vjsr = 0.0047999999999999996 * var_cell_geometry__vcell; // microliter
        const double var_cell_geometry__vmyo = 0.68000000000000005 * var_cell_geometry__vcell; // microliter
        const double var_cell_geometry__vnsr = 0.055199999999999999 * var_cell_geometry__vcell; // microliter
        const double var_cell_geometry__vss = 0.02 * var_cell_geometry__vcell; // microliter
        const double var_environment__celltype = 1.0; // dimensionless

        const double var_extracellular__sum_of_ext_charges =2*NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 4) + NV_Ith_S(mParameters, 5); // millimolar
        const double var_intracellular_ions__BSLmax = 1.1240000000000001; // millimolar
        const double var_intracellular_ions__BSRmax = 0.047; // millimolar
        const double var_intracellular_ions__Cm = 1.0; // microF
        const double var_intracellular_ions__C0 = var_extracellular__sum_of_ext_charges + NV_Ith_S(mParameters, 0); // millimolar
        const double var_intracellular_ions__KmBSL = 0.0086999999999999994; // millimolar
        const double var_intracellular_ions__KmBSR = 0.00087000000000000001; // millimolar

        const double var_intracellular_ions__Ca_ss_tot = (1.0 + var_intracellular_ions__BSLmax / (var_intracellular_ions__KmBSL + var_chaste_interface__intracellular_ions__cass) + var_intracellular_ions__BSRmax / (var_intracellular_ions__KmBSR + var_chaste_interface__intracellular_ions__cass)) * var_chaste_interface__intracellular_ions__cass; // millimolar
        const double var_intracellular_ions__cmdnmax_b = 0.050000000000000003; // millimolar
        const double var_intracellular_ions__cmdnmax = ((var_environment__celltype == 1.0) ? (1.3 * var_intracellular_ions__cmdnmax_b) : (var_intracellular_ions__cmdnmax_b)); // millimolar
        const double var_intracellular_ions__csqnmax = 10.0; // millimolar
        const double var_intracellular_ions__kmcmdn = 0.0023800000000000002; // millimolar
        const double var_intracellular_ions__kmcsqn = 0.80000000000000004; // millimolar
        const double var_intracellular_ions__Ca_jsr_tot = (1.0 + var_intracellular_ions__csqnmax / (var_chaste_interface__intracellular_ions__cajsr + var_intracellular_ions__kmcsqn)) * var_chaste_interface__intracellular_ions__cajsr; // millimolar
        const double var_intracellular_ions__kmtrpn = 0.00050000000000000001; // millimolar
        const double var_intracellular_ions__trpnmax = 0.070000000000000007; // millimolar
        const double var_intracellular_ions__Ca_i_tot = (1.0 + var_intracellular_ions__cmdnmax / (var_chaste_interface__intracellular_ions__cai + var_intracellular_ions__kmcmdn) + var_intracellular_ions__trpnmax / (var_chaste_interface__intracellular_ions__cai + var_intracellular_ions__kmtrpn)) * var_chaste_interface__intracellular_ions__cai; // millimolar
        const double var_intracellular_ions__potential = (2.0 * var_intracellular_ions__Ca_i_tot + (2.0 * var_intracellular_ions__Ca_ss_tot + var_chaste_interface__intracellular_ions__kss + var_chaste_interface__intracellular_ions__nass) * var_cell_geometry__vss / var_cell_geometry__vmyo + 2.0 * var_cell_geometry__vjsr * var_intracellular_ions__Ca_jsr_tot / var_cell_geometry__vmyo + 2.0 * var_cell_geometry__vnsr * var_chaste_interface__intracellular_ions__cansr / var_cell_geometry__vmyo + var_chaste_interface__intracellular_ions__ki + var_chaste_interface__intracellular_ions__nai) * var_cell_geometry__vmyo * NV_Ith_S(mParameters, 6) / (var_cell_geometry__Acap * var_intracellular_ions__Cm); // mV
        const double var_intracellular_ions__V2 = -var_cell_geometry__vmyo * var_intracellular_ions__C0 * NV_Ith_S(mParameters, 6) / (var_cell_geometry__Acap * var_intracellular_ions__Cm) + var_intracellular_ions__potential; // mV

        return var_intracellular_ions__V2;
}

    boost::shared_ptr<RegularStimulus> Cellohara_rudy_2011_epi_analytic_voltageFromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__i_Stim_Amplitude_converted = -80.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__membrane__i_Stim_End = 1.0e+17; // millisecond
        const double var_chaste_interface__membrane__i_Stim_Period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__i_Stim_PulseDuration = 0.5; // millisecond
        const double var_chaste_interface__membrane__i_Stim_Start = 10.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__i_Stim_Amplitude_converted),
                var_chaste_interface__membrane__i_Stim_PulseDuration,
                var_chaste_interface__membrane__i_Stim_Period,
                var_chaste_interface__membrane__i_Stim_Start, var_chaste_interface__membrane__i_Stim_End
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }

    double Cellohara_rudy_2011_epi_analytic_voltageFromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 0);
    }

    Cellohara_rudy_2011_epi_analytic_voltageFromCellMLCvode::Cellohara_rudy_2011_epi_analytic_voltageFromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                40,
                99999,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellohara_rudy_2011_epi_analytic_voltageFromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;

        NV_Ith_S(this->mParameters, 0) = 7.80222863745371; // (var_intracellular_ions__Gamma0) [millimolar]
        NV_Ith_S(this->mParameters, 1) = 1.0; // (var_ryr__Jrel_scaling_factor) [dimensionless]
        NV_Ith_S(this->mParameters, 2) = 1.0; // (var_SERCA__Jup_b) [dimensionless]
        NV_Ith_S(this->mParameters, 3) = 1.8; // (var_extracellular__cao) [millimolar]
        NV_Ith_S(this->mParameters, 4) = 5.4000000000000004; // (var_extracellular__ko) [millimolar]
        NV_Ith_S(this->mParameters, 5) = 140.0; // (var_extracellular__nao) [millimolar]
        NV_Ith_S(this->mParameters, 6) = 96485.0; // (var_physical_constants__F) [coulomb_per_mole]
        NV_Ith_S(this->mParameters, 7) = 8314.0; // (var_physical_constants__R) [joule_per_kilomole_kelvin]
        NV_Ith_S(this->mParameters, 8) = 0.0001; // (var_ICaL__PCa_b) [dimensionless]
        NV_Ith_S(this->mParameters, 9) = 2.4999999999999999e-8; // (var_ICab__PCab) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 10) = 0.0030000000000000001; // (var_IKb__GKb_b) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 11) = 0.00050000000000000001; // (var_IpCa__GpCa) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 12) = 75.0; // (var_INa__GNa) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 13) = 0.1908; // (var_IK1__GK1_b) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 14) = 0.0074999999999999997; // (var_INaL__GNaL_b) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 15) = 0.045999999999999999; // (var_IKr__GKr_b) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 16) = 0.0033999999999999998; // (var_IKs__GKs_b) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 17) = 0.00080000000000000004; // (var_INaCa_i__Gncx_b) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 18) = 30.0; // (var_INaK__Pnak_b) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 19) = 0.02; // (var_Ito__Gto_b) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 20) = 310.0; // (var_physical_constants__T) [kelvin]
    }

    Cellohara_rudy_2011_epi_analytic_voltageFromCellMLCvode::~Cellohara_rudy_2011_epi_analytic_voltageFromCellMLCvode()
    {
    }


    double Cellohara_rudy_2011_epi_analytic_voltageFromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__intracellular_ions__cai = NV_Ith_S(rY, 0);
        // Units: millimolar; Initial value: 0.0001
        double var_chaste_interface__CaMK__CaMKt = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0
        double var_chaste_interface__intracellular_ions__nai = NV_Ith_S(rY, 2);
        // Units: millimolar; Initial value: 7.0
        double var_chaste_interface__intracellular_ions__nass = NV_Ith_S(rY, 3);
        // Units: millimolar; Initial value: 7.0
        double var_chaste_interface__intracellular_ions__ki = NV_Ith_S(rY, 4);
        // Units: millimolar; Initial value: 145.0
        double var_chaste_interface__intracellular_ions__kss = NV_Ith_S(rY, 5);
        // Units: millimolar; Initial value: 145.0
        double var_chaste_interface__intracellular_ions__cass = NV_Ith_S(rY, 6);
        // Units: millimolar; Initial value: 0.0001
        double var_chaste_interface__INa__m = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__INa__hf = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__hs = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__j = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__hsp = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__jp = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INaL__mL = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__INaL__hL = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INaL__hLp = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__a = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__Ito__iF = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__iS = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__ap = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__Ito__iFp = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__iSp = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__d = NV_Ith_S(rY, 24);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ICaL__ff = NV_Ith_S(rY, 25);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fs = NV_Ith_S(rY, 26);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcaf = NV_Ith_S(rY, 27);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcas = NV_Ith_S(rY, 28);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__jca = NV_Ith_S(rY, 29);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__ffp = NV_Ith_S(rY, 30);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcafp = NV_Ith_S(rY, 31);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__nca = NV_Ith_S(rY, 32);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKr__xrf = NV_Ith_S(rY, 33);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKr__xrs = NV_Ith_S(rY, 34);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKs__xs1 = NV_Ith_S(rY, 35);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKs__xs2 = NV_Ith_S(rY, 36);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IK1__xk1 = NV_Ith_S(rY, 37);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : CalculateAnalyticVoltage(rY, mParameters));
        // Units: mV; Initial value: -87.0

        const double var_CaMK__CaMKo = 0.050000000000000003; // dimensionless
        const double var_CaMK__KmCaM = 0.0015; // millimolar
        const double var_CaMK__KmCaMK = 0.14999999999999999; // millimolar
        const double var_ICaL__Aff = 0.59999999999999998; // dimensionless
        const double var_ICaL__Afs = 1.0 - var_ICaL__Aff; // dimensionless
        const double var_ICaL__f = var_ICaL__Aff * var_chaste_interface__ICaL__ff + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_ICaL__fp = var_ICaL__Aff * var_chaste_interface__ICaL__ffp + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_INa__Ahf = 0.98999999999999999; // dimensionless
        const double var_INa__Ahs = 1.0 - var_INa__Ahf; // dimensionless
        const double var_INa__h = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hs; // dimensionless
        const double var_INa__hp = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hsp; // dimensionless
        const double var_INaCa_i__KmCaAct = 0.00014999999999999999; // millimolar
        const double var_INaCa_i__kasymm = 12.5; // dimensionless
        const double var_INaCa_i__kcaoff = 5000.0; // per_millisecond
        const double var_INaCa_i__k2_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k2_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__kcaon = 1500000.0; // per_millisecond
        const double var_INaCa_i__kna1 = 15.0; // per_millisecond
        const double var_INaCa_i__kna2 = 5.0; // per_millisecond
        const double var_INaCa_i__kna3 = 88.120000000000005; // per_millisecond
        const double var_INaCa_i__qca = 0.16700000000000001; // dimensionless
        const double var_INaCa_i__qna = 0.52239999999999998; // dimensionless
        const double var_INaCa_i__wca = 60000.0; // dimensionless
        const double var_INaCa_i__wna = 60000.0; // dimensionless
        const double var_INaCa_i__wnaca = 5000.0; // dimensionless
        const double var_INaK__H = 9.9999999999999995e-8; // millimolar
        const double var_INaK__Khp = 1.698e-7; // millimolar
        const double var_INaK__Kki = 0.5; // per_millisecond
        const double var_INaK__Kko = 0.35820000000000002; // per_millisecond
        const double var_INaK__Kmgatp = 1.698e-7; // millimolar
        const double var_INaK__Knai0 = 9.0730000000000004; // millimolar
        const double var_INaK__Knao0 = 27.780000000000001; // millimolar
        const double var_INaK__Knap = 224.0; // millimolar
        const double var_INaK__Kxkur = 292.0; // millimolar
        const double var_INaK__MgADP = 0.050000000000000003; // millimolar
        const double var_INaK__MgATP = 9.8000000000000007; // millimolar
        const double var_INaK__delta = -0.155; // mV
        const double var_INaK__eP = 4.2000000000000002; // dimensionless
        const double var_INaK__k1m = 182.40000000000001; // per_millisecond
        const double var_INaK__b1 = var_INaK__MgADP * var_INaK__k1m; // dimensionless
        const double var_INaK__k1p = 949.5; // per_millisecond
        const double var_INaK__k2m = 39.399999999999999; // per_millisecond
        const double var_INaK__k2p = 687.20000000000005; // per_millisecond
        const double var_INaK__a2 = var_INaK__k2p; // dimensionless
        const double var_INaK__k3m = 79300.0; // per_millisecond
        const double var_INaK__k3p = 1899.0; // per_millisecond
        const double var_INaK__k4m = 40.0; // per_millisecond
        const double var_INaK__k4p = 639.0; // per_millisecond
        const double var_INaK__a4 = var_INaK__MgATP * var_INaK__k4p / ((1.0 + var_INaK__MgATP / var_INaK__Kmgatp) * var_INaK__Kmgatp); // dimensionless
        const double var_IpCa__KmCap = 0.00050000000000000001; // millimolar
        const double var_environment__celltype = 1.0; // dimensionless
        const double var_ICaL__PCa = ((var_environment__celltype == 1.0) ? (1.2 * NV_Ith_S(mParameters, 8)) : ((var_environment__celltype == 2.0) ? (2.5 * NV_Ith_S(mParameters, 8)) : (NV_Ith_S(mParameters, 8)))); // dimensionless
        const double var_ICaL__PCaK = 0.00035740000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaNa = 0.00125 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaKp = 0.00035740000000000001 * var_ICaL__PCap; // dimensionless
        const double var_ICaL__PCaNap = 0.00125 * var_ICaL__PCap; // dimensionless
        const double var_IK1__GK1 = ((var_environment__celltype == 1.0) ? (1.2 * NV_Ith_S(mParameters, 13)) : ((var_environment__celltype == 2.0) ? (1.3 * NV_Ith_S(mParameters, 13)) : (NV_Ith_S(mParameters, 13)))); // milliS_per_microF
        const double var_IKb__GKb = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * NV_Ith_S(mParameters, 10)) : (NV_Ith_S(mParameters, 10))); // milliS_per_microF
        const double var_IKr__GKr = ((var_environment__celltype == 1.0) ? (1.3 * NV_Ith_S(mParameters, 15)) : ((var_environment__celltype == 2.0) ? (0.80000000000000004 * NV_Ith_S(mParameters, 15)) : (NV_Ith_S(mParameters, 15)))); // milliS_per_microF
        const double var_IKs__GKs = ((var_environment__celltype == 1.0) ? (1.3999999999999999 * NV_Ith_S(mParameters, 16)) : (NV_Ith_S(mParameters, 16))); // milliS_per_microF
        const double var_INaCa_i__Gncx = ((var_environment__celltype == 1.0) ? (1.1000000000000001 * NV_Ith_S(mParameters, 17)) : ((var_environment__celltype == 2.0) ? (1.3999999999999999 * NV_Ith_S(mParameters, 17)) : (NV_Ith_S(mParameters, 17)))); // milliS_per_microF
        const double var_INaK__Pnak = ((var_environment__celltype == 1.0) ? (0.90000000000000002 * NV_Ith_S(mParameters, 18)) : ((var_environment__celltype == 2.0) ? (0.69999999999999996 * NV_Ith_S(mParameters, 18)) : (NV_Ith_S(mParameters, 18)))); // milliS_per_microF
        const double var_INaL__GNaL = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * NV_Ith_S(mParameters, 14)) : (NV_Ith_S(mParameters, 14))); // milliS_per_microF
        const double var_Ito__Gto = (((var_environment__celltype == 1.0) || (var_environment__celltype == 2.0)) ? (4.0 * NV_Ith_S(mParameters, 19)) : (NV_Ith_S(mParameters, 19))); // milliS_per_microF
        const double var_IK1__GK1_total = sqrt(NV_Ith_S(mParameters, 4)) * var_IK1__GK1; // milliS_per_microF
        const double var_IKr__GKr_total = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 4)) * var_IKr__GKr; // milliS_per_microF
        const double var_INaCa_i__h10_i = 1.0 + (1.0 + NV_Ith_S(mParameters, 5) / var_INaCa_i__kna2) * NV_Ith_S(mParameters, 5) / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h10_ss = 1.0 + (1.0 + NV_Ith_S(mParameters, 5) / var_INaCa_i__kna2) * NV_Ith_S(mParameters, 5) / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h11_i = pow(NV_Ith_S(mParameters, 5), 2) / (var_INaCa_i__h10_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h11_ss = pow(NV_Ith_S(mParameters, 5), 2) / (var_INaCa_i__h10_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h12_i = 1 / var_INaCa_i__h10_i; // dimensionless
        const double var_INaCa_i__h12_ss = 1 / var_INaCa_i__h10_ss; // dimensionless
        const double var_INaCa_i__k1_i = var_INaCa_i__h12_i * var_INaCa_i__kcaon * NV_Ith_S(mParameters, 3); // dimensionless
        const double var_INaCa_i__k1_ss = var_INaCa_i__h12_ss * var_INaCa_i__kcaon * NV_Ith_S(mParameters, 3); // dimensionless
        const double var_IKs__KsCa = 1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__intracellular_ions__cai), 1.3999999999999999)); // dimensionless
        const double var_IKs__GKs_total = var_IKs__GKs * var_IKs__KsCa; // milliS_per_microF
        const double var_INaCa_i__allo_i = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cai, 2)); // dimensionless
        const double var_IpCa__IpCa = NV_Ith_S(mParameters, 11) * var_chaste_interface__intracellular_ions__cai / (var_IpCa__KmCap + var_chaste_interface__intracellular_ions__cai); // microA_per_microF
        const double var_IpCa__IpCa_converted = HeartConfig::Instance()->GetCapacitance() * var_IpCa__IpCa; // uA_per_cm2
        const double var_CaMK__CaMKb = (1.0 - var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKo / (1.0 + var_CaMK__KmCaM / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_ICaL__fICaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INa__fINap = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INaCa_i__allo_ss = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cass, 2)); // dimensionless
        const double var_INaL__fINaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_Ito__fItop = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INaCa_i__h4_i = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_i = pow(var_chaste_interface__intracellular_ions__nai, 2) / (var_INaCa_i__h4_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_i = 1 / var_INaCa_i__h4_i; // dimensionless
        const double var_INaCa_i__k6_i = var_INaCa_i__h6_i * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cai; // dimensionless
        const double var_INaK__P = var_INaK__eP / (1.0 + var_INaK__H / var_INaK__Khp + var_chaste_interface__intracellular_ions__nai / var_INaK__Knap + var_chaste_interface__intracellular_ions__ki / var_INaK__Kxkur); // dimensionless
        const double var_INaK__b3 = var_INaK__H * var_INaK__P * var_INaK__k3m / (1.0 + var_INaK__MgATP / var_INaK__Kmgatp); // dimensionless
        const double var_INaCa_i__h4_ss = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_ss = pow(var_chaste_interface__intracellular_ions__nass, 2) / (var_INaCa_i__h4_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_ss = 1 / var_INaCa_i__h4_ss; // dimensionless
        const double var_INaCa_i__k6_ss = var_INaCa_i__h6_ss * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cass; // dimensionless
        const double var_ICaL__Afcaf = 0.29999999999999999 + 0.59999999999999998 / (1.0 + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__Afcas = 1.0 - var_ICaL__Afcaf; // dimensionless
        const double var_ICaL__fca = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcaf + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__fcap = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcafp + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_IK1__rk1 = 1 / (1.0 + exp(11.145054250500367 + 0.10534077741493732 * var_chaste_interface__membrane__v - 0.27388602127883704 * NV_Ith_S(mParameters, 4))); // millisecond
        const double var_IKb__xkb = 1 / (1.0 + exp(0.78953107960741553 - 0.054525627044711013 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_IKr__Axrf = 1 / (1.0 + exp(1.4344412457471867 + 0.026171159382360639 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_IKr__Axrs = 1.0 - var_IKr__Axrf; // dimensionless
        const double var_IKr__rkr = 1 / ((1.0 + exp(0.73333333333333328 + 0.013333333333333334 * var_chaste_interface__membrane__v)) * (1.0 + exp(-0.33333333333333331 + 0.033333333333333333 * var_chaste_interface__membrane__v))); // dimensionless
        const double var_IKr__xr = var_IKr__Axrf * var_chaste_interface__IKr__xrf + var_IKr__Axrs * var_chaste_interface__IKr__xrs; // dimensionless
        const double var_Ito__AiF = 1 / (1.0 + exp(-1.4126984126984128 + 0.0066137566137566143 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__AiS = 1.0 - var_Ito__AiF; // dimensionless
        const double var_Ito__i = var_Ito__AiF * var_chaste_interface__Ito__iF + var_Ito__AiS * var_chaste_interface__Ito__iS; // dimensionless
        const double var_Ito__ip = var_Ito__AiF * var_chaste_interface__Ito__iFp + var_Ito__AiS * var_chaste_interface__Ito__iSp; // dimensionless
        const double var_ICaL__PhiCaK = ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6))) ? (-9.9999999999999995e-8 * (-0.75 * NV_Ith_S(mParameters, 4) + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * NV_Ith_S(mParameters, 4) + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * NV_Ith_S(mParameters, 4) + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6) + var_chaste_interface__membrane__v) * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))) : (pow(NV_Ith_S(mParameters, 6), 2) * (-0.75 * NV_Ith_S(mParameters, 4) + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))); // dimensionless
        const double var_ICaL__ICaK = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaK * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaKp * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaK_converted = HeartConfig::Instance()->GetCapacitance() * var_ICaL__ICaK; // uA_per_cm2
        const double var_ICaL__PhiCaL = ((fabs(var_chaste_interface__membrane__v) < 4.9999999999999998e-8 * fabs(NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6))) ? (-1.9999999999999999e-7 * (-0.34100000000000003 * NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6) + var_chaste_interface__membrane__v) * (1.9999999999999999e-7 * (-0.34100000000000003 * NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_ions__cass * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(9.9999999999999995e-8)) + 1.9999999999999999e-7 * (-0.34100000000000003 * NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8))) * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))) : (4.0 * pow(NV_Ith_S(mParameters, 6), 2) * (-0.34100000000000003 * NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_ions__cass * exp(2.0 * var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * var_chaste_interface__membrane__v / ((-1.0 + exp(2.0 * var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))); // dimensionless
        const double var_ICaL__ICaL = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCa * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCap * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaL_converted = HeartConfig::Instance()->GetCapacitance() * var_ICaL__ICaL; // uA_per_cm2
        const double var_ICaL__PhiCaNa = ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6))) ? (-9.9999999999999995e-8 * (-0.75 * NV_Ith_S(mParameters, 5) + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * NV_Ith_S(mParameters, 5) + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * NV_Ith_S(mParameters, 5) + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6) + var_chaste_interface__membrane__v) * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))) : (pow(NV_Ith_S(mParameters, 6), 2) * (-0.75 * NV_Ith_S(mParameters, 5) + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))); // dimensionless
        const double var_ICaL__ICaNa = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNa * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNap * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaNa_converted = HeartConfig::Instance()->GetCapacitance() * var_ICaL__ICaNa; // uA_per_cm2
        const double var_ICab__ICab = ((fabs(var_chaste_interface__membrane__v) < 4.9999999999999998e-8 * fabs(NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6))) ? (-1.9999999999999999e-7 * (-0.34100000000000003 * NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 9) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6) + var_chaste_interface__membrane__v) * (1.9999999999999999e-7 * (-0.34100000000000003 * NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_ions__cai * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 9) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(9.9999999999999995e-8)) + 1.9999999999999999e-7 * (-0.34100000000000003 * NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 9) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8))) * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))) : (4.0 * pow(NV_Ith_S(mParameters, 6), 2) * (-0.34100000000000003 * NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_ions__cai * exp(2.0 * var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * NV_Ith_S(mParameters, 9) * var_chaste_interface__membrane__v / ((-1.0 + exp(2.0 * var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))); // microA_per_microF
        const double var_ICab__ICab_converted = HeartConfig::Instance()->GetCapacitance() * var_ICab__ICab; // uA_per_cm2
        const double var_INaCa_i__hca = exp(var_INaCa_i__qca * var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))); // dimensionless
        const double var_INaCa_i__hna = exp(var_INaCa_i__qna * var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))); // dimensionless
        const double var_INaCa_i__h1_i = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h1_ss = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h2_i = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nai / (var_INaCa_i__h1_i * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h2_ss = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nass / (var_INaCa_i__h1_ss * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h3_i = 1 / var_INaCa_i__h1_i; // dimensionless
        const double var_INaCa_i__h3_ss = 1 / var_INaCa_i__h1_ss; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * NV_Ith_S(mParameters, 5) / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * NV_Ith_S(mParameters, 5) / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h8_i = NV_Ith_S(mParameters, 5) / (var_INaCa_i__h7_i * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h8_ss = NV_Ith_S(mParameters, 5) / (var_INaCa_i__h7_ss * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h9_i = 1 / var_INaCa_i__h7_i; // dimensionless
        const double var_INaCa_i__h9_ss = 1 / var_INaCa_i__h7_ss; // dimensionless
        const double var_INaCa_i__k3p_i = var_INaCa_i__h9_i * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3p_ss = var_INaCa_i__h9_ss * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3pp_i = var_INaCa_i__h8_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_i = var_INaCa_i__k3p_i + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__k3pp_ss = var_INaCa_i__h8_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_ss = var_INaCa_i__k3p_ss + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__k4p_i = var_INaCa_i__h3_i * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4p_ss = var_INaCa_i__h3_ss * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4pp_i = var_INaCa_i__h2_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_i = var_INaCa_i__k4p_i + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k4pp_ss = var_INaCa_i__h2_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_ss = var_INaCa_i__k4p_ss + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__k7_i = var_INaCa_i__h2_i * var_INaCa_i__h5_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k7_ss = var_INaCa_i__h2_ss * var_INaCa_i__h5_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_i = var_INaCa_i__h11_i * var_INaCa_i__h8_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_ss = var_INaCa_i__h11_ss * var_INaCa_i__h8_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__x1_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k5_i * var_INaCa_i__k7_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k2_i * var_INaCa_i__k4_i; // dimensionless
        const double var_INaCa_i__x1_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k5_ss * var_INaCa_i__k7_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k4_ss; // dimensionless
        const double var_INaCa_i__x2_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k4_i * var_INaCa_i__k6_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k1_i * var_INaCa_i__k7_i; // dimensionless
        const double var_INaCa_i__x2_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k4_ss * var_INaCa_i__k6_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k7_ss; // dimensionless
        const double var_INaCa_i__x3_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k6_i * var_INaCa_i__k8_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k1_i * var_INaCa_i__k3_i; // dimensionless
        const double var_INaCa_i__x3_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k6_ss * var_INaCa_i__k8_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k3_ss; // dimensionless
        const double var_INaCa_i__x4_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k3_i * var_INaCa_i__k5_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k2_i * var_INaCa_i__k8_i; // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E3_i = var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E4_i = var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__JncxCa_i = var_INaCa_i__E2_i * var_INaCa_i__k2_i - var_INaCa_i__E1_i * var_INaCa_i__k1_i; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_i = var_INaCa_i__E3_i * var_INaCa_i__k4pp_i - var_INaCa_i__E2_i * var_INaCa_i__k3pp_i + 3.0 * var_INaCa_i__E4_i * var_INaCa_i__k7_i - 3.0 * var_INaCa_i__E1_i * var_INaCa_i__k8_i; // millimolar_per_millisecond
        const double var_INaCa_i__x4_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k3_ss * var_INaCa_i__k5_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k8_ss; // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E3_ss = var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E4_ss = var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__JncxCa_ss = var_INaCa_i__E2_ss * var_INaCa_i__k2_ss - var_INaCa_i__E1_ss * var_INaCa_i__k1_ss; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_ss = var_INaCa_i__E3_ss * var_INaCa_i__k4pp_ss - var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss + 3.0 * var_INaCa_i__E4_ss * var_INaCa_i__k7_ss - 3.0 * var_INaCa_i__E1_ss * var_INaCa_i__k8_ss; // millimolar_per_millisecond
        const double var_INaK__Knai = var_INaK__Knai0 * exp(0.33333333333333331 * var_INaK__delta * var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))); // millimolar
        const double var_INaK__Knao = var_INaK__Knao0 * exp(0.33333333333333331 * (1.0 - var_INaK__delta) * var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))); // millimolar
        const double var_INaK__a1 = pow(var_chaste_interface__intracellular_ions__nai, 3) * var_INaK__k1p / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Knai, 3)); // dimensionless
        const double var_INaK__a3 = pow(NV_Ith_S(mParameters, 4), 2) * var_INaK__k3p / ((-1.0 + pow((1.0 + NV_Ith_S(mParameters, 4) / var_INaK__Kko), 2) + pow((1.0 + NV_Ith_S(mParameters, 5) / var_INaK__Knao), 3)) * pow(var_INaK__Kko, 2)); // dimensionless
        const double var_INaK__b2 = pow(NV_Ith_S(mParameters, 5), 3) * var_INaK__k2m / ((-1.0 + pow((1.0 + NV_Ith_S(mParameters, 4) / var_INaK__Kko), 2) + pow((1.0 + NV_Ith_S(mParameters, 5) / var_INaK__Knao), 3)) * pow(var_INaK__Knao, 3)); // dimensionless
        const double var_INaK__b4 = pow(var_chaste_interface__intracellular_ions__ki, 2) * var_INaK__k4m / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Kki, 2)); // dimensionless
        const double var_INaK__x1 = var_INaK__a1 * var_INaK__a2 * var_INaK__a4 + var_INaK__a1 * var_INaK__a2 * var_INaK__b3 + var_INaK__a2 * var_INaK__b3 * var_INaK__b4 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__x2 = var_INaK__a1 * var_INaK__a2 * var_INaK__a3 + var_INaK__a2 * var_INaK__a3 * var_INaK__b4 + var_INaK__a3 * var_INaK__b1 * var_INaK__b4 + var_INaK__b1 * var_INaK__b2 * var_INaK__b4; // dimensionless
        const double var_INaK__x3 = var_INaK__a2 * var_INaK__a3 * var_INaK__a4 + var_INaK__a3 * var_INaK__a4 * var_INaK__b1 + var_INaK__a4 * var_INaK__b1 * var_INaK__b2 + var_INaK__b1 * var_INaK__b2 * var_INaK__b3; // dimensionless
        const double var_INaK__x4 = var_INaK__a1 * var_INaK__a3 * var_INaK__a4 + var_INaK__a1 * var_INaK__a4 * var_INaK__b2 + var_INaK__a1 * var_INaK__b2 * var_INaK__b3 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__E1 = var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E2 = var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E3 = var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E4 = var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__JnakK = 2.0 * var_INaK__E4 * var_INaK__b1 - 2.0 * var_INaK__E3 * var_INaK__a1; // millimolar_per_millisecond
        const double var_INaK__JnakNa = 3.0 * var_INaK__E1 * var_INaK__a3 - 3.0 * var_INaK__E2 * var_INaK__b3; // millimolar_per_millisecond
        const double var_INab__INab = ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6))) ? (-3.7499999999999999e-17 * (-NV_Ith_S(mParameters, 5) + var_chaste_interface__intracellular_ions__nai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6) + var_chaste_interface__membrane__v) * (3.7499999999999999e-17 * (-NV_Ith_S(mParameters, 5) + var_chaste_interface__intracellular_ions__nai * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(9.9999999999999995e-8)) + 3.7499999999999999e-17 * (-NV_Ith_S(mParameters, 5) + var_chaste_interface__intracellular_ions__nai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8))) * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))) : (3.75e-10 * pow(NV_Ith_S(mParameters, 6), 2) * (-NV_Ith_S(mParameters, 5) + var_chaste_interface__intracellular_ions__nai * exp(var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))); // microA_per_microF
        const double var_physical_constants__zca = 2.0; // dimensionless
        const double var_physical_constants__zk = 1.0; // dimensionless
        const double var_physical_constants__zna = 1.0; // dimensionless
        const double var_INaCa_i__INaCa_i = 0.80000000000000004 * (var_INaCa_i__JncxCa_i * var_physical_constants__zca + var_INaCa_i__JncxNa_i * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_i; // microA_per_microF
        const double var_INaCa_i__INaCa_i_converted = HeartConfig::Instance()->GetCapacitance() * var_INaCa_i__INaCa_i; // uA_per_cm2
        const double var_INaCa_i__INaCa_ss = 0.20000000000000001 * (var_INaCa_i__JncxCa_ss * var_physical_constants__zca + var_INaCa_i__JncxNa_ss * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_ss; // microA_per_microF
        const double var_INaCa_i__INaCa_ss_converted = HeartConfig::Instance()->GetCapacitance() * var_INaCa_i__INaCa_ss; // uA_per_cm2
        const double var_INaK__INaK = (var_INaK__JnakK * var_physical_constants__zk + var_INaK__JnakNa * var_physical_constants__zna) * var_INaK__Pnak; // microA_per_microF
        const double var_INaK__INaK_converted = HeartConfig::Instance()->GetCapacitance() * var_INaK__INaK; // uA_per_cm2
        const double var_reversal_potentials__EK = NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__intracellular_ions__ki) / NV_Ith_S(mParameters, 6); // mV
        const double var_IK1__IK1 = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IK1__GK1_total * var_IK1__rk1 * var_chaste_interface__IK1__xk1; // microA_per_microF
        const double var_IK1__IK1_converted = HeartConfig::Instance()->GetCapacitance() * var_IK1__IK1; // uA_per_cm2
        const double var_IKb__IKb = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKb__GKb * var_IKb__xkb; // microA_per_microF
        const double var_IKb__IKb_converted = HeartConfig::Instance()->GetCapacitance() * var_IKb__IKb; // uA_per_cm2
        const double var_IKr__IKr = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKr__GKr_total * var_IKr__rkr * var_IKr__xr; // microA_per_microF
        const double var_IKr__IKr_converted = HeartConfig::Instance()->GetCapacitance() * var_IKr__IKr; // uA_per_cm2
        const double var_Ito__Ito = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * ((1.0 - var_Ito__fItop) * var_chaste_interface__Ito__a * var_Ito__i + var_chaste_interface__Ito__ap * var_Ito__fItop * var_Ito__ip) * var_Ito__Gto; // microA_per_microF
        const double var_reversal_potentials__ENa = NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__intracellular_ions__nai) / NV_Ith_S(mParameters, 6); // mV
        const double var_INa__INa = pow(var_chaste_interface__INa__m, 3) * (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INa__fINap) * var_INa__h * var_chaste_interface__INa__j + var_INa__fINap * var_INa__hp * var_chaste_interface__INa__jp) * NV_Ith_S(mParameters, 12); // microA_per_microF
        const double var_INa__INa_converted = HeartConfig::Instance()->GetCapacitance() * var_INa__INa; // uA_per_cm2
        const double var_INaL__INaL = (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL + var_INaL__fINaLp * var_chaste_interface__INaL__hLp) * var_INaL__GNaL * var_chaste_interface__INaL__mL; // microA_per_microF
        const double var_INaL__INaL_converted = HeartConfig::Instance()->GetCapacitance() * var_INaL__INaL; // uA_per_cm2
        const double var_reversal_potentials__PKNa = 0.018329999999999999; // dimensionless
        const double var_reversal_potentials__EKs = NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) * log((NV_Ith_S(mParameters, 5) * var_reversal_potentials__PKNa + NV_Ith_S(mParameters, 4)) / (var_chaste_interface__intracellular_ions__nai * var_reversal_potentials__PKNa + var_chaste_interface__intracellular_ions__ki)) / NV_Ith_S(mParameters, 6); // mV
        const double var_IKs__IKs = (-var_reversal_potentials__EKs + var_chaste_interface__membrane__v) * var_IKs__GKs_total * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2; // microA_per_microF
        const double var_IKs__IKs_converted = HeartConfig::Instance()->GetCapacitance() * var_IKs__IKs; // uA_per_cm2
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_INab__INab + HeartConfig::Instance()->GetCapacitance() * var_Ito__Ito + var_ICaL__ICaK_converted + var_ICaL__ICaL_converted + var_ICaL__ICaNa_converted + var_ICab__ICab_converted + var_IK1__IK1_converted + var_IKb__IKb_converted + var_IKr__IKr_converted + var_IKs__IKs_converted + var_INa__INa_converted + var_INaCa_i__INaCa_i_converted + var_INaCa_i__INaCa_ss_converted + var_INaK__INaK_converted + var_INaL__INaL_converted + var_IpCa__IpCa_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellohara_rudy_2011_epi_analytic_voltageFromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__intracellular_ions__cai = NV_Ith_S(rY, 0);
        // Units: millimolar; Initial value: 0.0001
        double var_chaste_interface__CaMK__CaMKt = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0
        double var_chaste_interface__intracellular_ions__nai = NV_Ith_S(rY, 2);
        // Units: millimolar; Initial value: 7.0
        double var_chaste_interface__intracellular_ions__nass = NV_Ith_S(rY, 3);
        // Units: millimolar; Initial value: 7.0
        double var_chaste_interface__intracellular_ions__ki = NV_Ith_S(rY, 4);
        // Units: millimolar; Initial value: 145.0
        double var_chaste_interface__intracellular_ions__kss = NV_Ith_S(rY, 5);
        // Units: millimolar; Initial value: 145.0
        double var_chaste_interface__intracellular_ions__cass = NV_Ith_S(rY, 6);
        // Units: millimolar; Initial value: 0.0001
        double var_chaste_interface__intracellular_ions__cansr = NV_Ith_S(rY, 7);
        // Units: millimolar; Initial value: 1.2
        double var_chaste_interface__intracellular_ions__cajsr = NV_Ith_S(rY, 8);
        // Units: millimolar; Initial value: 1.2
        double var_chaste_interface__INa__m = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__INa__hf = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__hs = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__j = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__hsp = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__jp = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INaL__mL = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__INaL__hL = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INaL__hLp = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__a = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__Ito__iF = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__iS = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__ap = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__Ito__iFp = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__iSp = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__d = NV_Ith_S(rY, 24);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ICaL__ff = NV_Ith_S(rY, 25);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fs = NV_Ith_S(rY, 26);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcaf = NV_Ith_S(rY, 27);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcas = NV_Ith_S(rY, 28);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__jca = NV_Ith_S(rY, 29);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__ffp = NV_Ith_S(rY, 30);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcafp = NV_Ith_S(rY, 31);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__nca = NV_Ith_S(rY, 32);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKr__xrf = NV_Ith_S(rY, 33);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKr__xrs = NV_Ith_S(rY, 34);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKs__xs1 = NV_Ith_S(rY, 35);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKs__xs2 = NV_Ith_S(rY, 36);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IK1__xk1 = NV_Ith_S(rY, 37);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ryr__Jrelnp = NV_Ith_S(rY, 38);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ryr__Jrelp = NV_Ith_S(rY, 39);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : CalculateAnalyticVoltage(rY, mParameters));
        // Units: mV; Initial value: -87.0

        // Mathematics
        const double var_CaMK__CaMKo = 0.050000000000000003; // dimensionless
        const double var_CaMK__KmCaM = 0.0015; // millimolar
        const double var_CaMK__KmCaMK = 0.14999999999999999; // millimolar
        const double var_CaMK__aCaMK = 0.050000000000000003; // per_millimolar_per_millisecond
        const double var_CaMK__bCaMK = 0.00068000000000000005; // per_millisecond
        const double var_ICaL__Aff = 0.59999999999999998; // dimensionless
        const double var_ICaL__Afs = 1.0 - var_ICaL__Aff; // dimensionless
        const double var_ICaL__Kmn = 0.002; // millimolar
        const double var_ICaL__f = var_ICaL__Aff * var_chaste_interface__ICaL__ff + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_ICaL__fp = var_ICaL__Aff * var_chaste_interface__ICaL__ffp + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_ICaL__k2n = 1000.0; // per_millisecond
        const double var_ICaL__km2n = var_chaste_interface__ICaL__jca; // per_millisecond
        const double var_ICaL__tjca = 75.0; // millisecond
        const double var_IKs__txs1_max = 817.29999999999995; // millisecond
        const double var_INa__Ahf = 0.98999999999999999; // dimensionless
        const double var_INa__Ahs = 1.0 - var_INa__Ahf; // dimensionless
        const double var_INa__h = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hs; // dimensionless
        const double var_INa__hp = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hsp; // dimensionless
        const double var_INa__hssV1 = 82.900000000000006; // mV
        const double var_INa__hssV2 = 6.0860000000000003; // mV
        const double var_INa__mssV1 = 39.57; // mV
        const double var_INa__mssV2 = 9.8710000000000004; // mV
        const double var_INa__mtD1 = 6.7649999999999997; // dimensionless
        const double var_INa__mtD2 = 8.5519999999999996; // dimensionless
        const double var_INa__mtV1 = 11.640000000000001; // mV
        const double var_INa__mtV2 = 34.770000000000003; // mV
        const double var_INa__mtV3 = 77.420000000000002; // mV
        const double var_INa__mtV4 = 5.9550000000000001; // mV
        const double var_INaCa_i__KmCaAct = 0.00014999999999999999; // millimolar
        const double var_INaCa_i__kasymm = 12.5; // dimensionless
        const double var_INaCa_i__kcaoff = 5000.0; // per_millisecond
        const double var_INaCa_i__k2_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k2_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__kcaon = 1500000.0; // per_millisecond
        const double var_INaCa_i__kna1 = 15.0; // per_millisecond
        const double var_INaCa_i__kna2 = 5.0; // per_millisecond
        const double var_INaCa_i__kna3 = 88.120000000000005; // per_millisecond
        const double var_INaCa_i__qca = 0.16700000000000001; // dimensionless
        const double var_INaCa_i__qna = 0.52239999999999998; // dimensionless
        const double var_INaCa_i__wca = 60000.0; // dimensionless
        const double var_INaCa_i__wna = 60000.0; // dimensionless
        const double var_INaCa_i__wnaca = 5000.0; // dimensionless
        const double var_INaK__H = 9.9999999999999995e-8; // millimolar
        const double var_INaK__Khp = 1.698e-7; // millimolar
        const double var_INaK__Kki = 0.5; // per_millisecond
        const double var_INaK__Kko = 0.35820000000000002; // per_millisecond
        const double var_INaK__Kmgatp = 1.698e-7; // millimolar
        const double var_INaK__Knai0 = 9.0730000000000004; // millimolar
        const double var_INaK__Knao0 = 27.780000000000001; // millimolar
        const double var_INaK__Knap = 224.0; // millimolar
        const double var_INaK__Kxkur = 292.0; // millimolar
        const double var_INaK__MgADP = 0.050000000000000003; // millimolar
        const double var_INaK__MgATP = 9.8000000000000007; // millimolar
        const double var_INaK__delta = -0.155; // mV
        const double var_INaK__eP = 4.2000000000000002; // dimensionless
        const double var_INaK__k1m = 182.40000000000001; // per_millisecond
        const double var_INaK__b1 = var_INaK__MgADP * var_INaK__k1m; // dimensionless
        const double var_INaK__k1p = 949.5; // per_millisecond
        const double var_INaK__k2m = 39.399999999999999; // per_millisecond
        const double var_INaK__k2p = 687.20000000000005; // per_millisecond
        const double var_INaK__a2 = var_INaK__k2p; // dimensionless
        const double var_INaK__k3m = 79300.0; // per_millisecond
        const double var_INaK__k3p = 1899.0; // per_millisecond
        const double var_INaK__k4m = 40.0; // per_millisecond
        const double var_INaK__k4p = 639.0; // per_millisecond
        const double var_INaK__a4 = var_INaK__MgATP * var_INaK__k4p / ((1.0 + var_INaK__MgATP / var_INaK__Kmgatp) * var_INaK__Kmgatp); // dimensionless
        const double var_INaL__thL = 200.0; // millisecond
        const double var_INaL__thLp = 3.0 * var_INaL__thL; // millisecond
        const double var_IpCa__KmCap = 0.00050000000000000001; // millimolar
        const double var_cell_geometry__L = 0.01; // centimeter
        const double var_cell_geometry__rad = 0.0011000000000000001; // centimeter
        const double var_cell_geometry__Ageo = 6.2800000000000002 * pow(var_cell_geometry__rad, 2) + 6.2800000000000002 * var_cell_geometry__L * var_cell_geometry__rad; // centimeter_squared
        const double var_cell_geometry__Acap = 2.0 * var_cell_geometry__Ageo; // centimeter_squared
        const double var_cell_geometry__vcell = 3140.0 * pow(var_cell_geometry__rad, 2) * var_cell_geometry__L; // microliter
        const double var_cell_geometry__vjsr = 0.0047999999999999996 * var_cell_geometry__vcell; // microliter
        const double var_cell_geometry__vmyo = 0.68000000000000005 * var_cell_geometry__vcell; // microliter
        const double var_cell_geometry__vnsr = 0.055199999999999999 * var_cell_geometry__vcell; // microliter
        const double var_cell_geometry__vss = 0.02 * var_cell_geometry__vcell; // microliter
        const double var_environment__celltype = 1.0; // dimensionless
        const double var_ICaL__PCa = ((var_environment__celltype == 1.0) ? (1.2 * NV_Ith_S(mParameters, 8)) : ((var_environment__celltype == 2.0) ? (2.5 * NV_Ith_S(mParameters, 8)) : (NV_Ith_S(mParameters, 8)))); // dimensionless
        const double var_ICaL__PCaK = 0.00035740000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaNa = 0.00125 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaKp = 0.00035740000000000001 * var_ICaL__PCap; // dimensionless
        const double var_ICaL__PCaNap = 0.00125 * var_ICaL__PCap; // dimensionless
        const double var_IK1__GK1 = ((var_environment__celltype == 1.0) ? (1.2 * NV_Ith_S(mParameters, 13)) : ((var_environment__celltype == 2.0) ? (1.3 * NV_Ith_S(mParameters, 13)) : (NV_Ith_S(mParameters, 13)))); // milliS_per_microF
        const double var_IKb__GKb = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * NV_Ith_S(mParameters, 10)) : (NV_Ith_S(mParameters, 10))); // milliS_per_microF
        const double var_IKr__GKr = ((var_environment__celltype == 1.0) ? (1.3 * NV_Ith_S(mParameters, 15)) : ((var_environment__celltype == 2.0) ? (0.80000000000000004 * NV_Ith_S(mParameters, 15)) : (NV_Ith_S(mParameters, 15)))); // milliS_per_microF
        const double var_IKs__GKs = ((var_environment__celltype == 1.0) ? (1.3999999999999999 * NV_Ith_S(mParameters, 16)) : (NV_Ith_S(mParameters, 16))); // milliS_per_microF
        const double var_INaCa_i__Gncx = ((var_environment__celltype == 1.0) ? (1.1000000000000001 * NV_Ith_S(mParameters, 17)) : ((var_environment__celltype == 2.0) ? (1.3999999999999999 * NV_Ith_S(mParameters, 17)) : (NV_Ith_S(mParameters, 17)))); // milliS_per_microF
        const double var_INaK__Pnak = ((var_environment__celltype == 1.0) ? (0.90000000000000002 * NV_Ith_S(mParameters, 18)) : ((var_environment__celltype == 2.0) ? (0.69999999999999996 * NV_Ith_S(mParameters, 18)) : (NV_Ith_S(mParameters, 18)))); // milliS_per_microF
        const double var_INaL__GNaL = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * NV_Ith_S(mParameters, 14)) : (NV_Ith_S(mParameters, 14))); // milliS_per_microF
        const double var_Ito__Gto = (((var_environment__celltype == 1.0) || (var_environment__celltype == 2.0)) ? (4.0 * NV_Ith_S(mParameters, 19)) : (NV_Ith_S(mParameters, 19))); // milliS_per_microF
        const double var_SERCA__upScale = ((var_environment__celltype == 1.0) ? (1.3) : (1.0)); // dimensionless
        const double var_IK1__GK1_total = sqrt(NV_Ith_S(mParameters, 4)) * var_IK1__GK1; // milliS_per_microF
        const double var_IKr__GKr_total = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 4)) * var_IKr__GKr; // milliS_per_microF
        const double var_INaCa_i__h10_i = 1.0 + (1.0 + NV_Ith_S(mParameters, 5) / var_INaCa_i__kna2) * NV_Ith_S(mParameters, 5) / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h10_ss = 1.0 + (1.0 + NV_Ith_S(mParameters, 5) / var_INaCa_i__kna2) * NV_Ith_S(mParameters, 5) / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h11_i = pow(NV_Ith_S(mParameters, 5), 2) / (var_INaCa_i__h10_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h11_ss = pow(NV_Ith_S(mParameters, 5), 2) / (var_INaCa_i__h10_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h12_i = 1 / var_INaCa_i__h10_i; // dimensionless
        const double var_INaCa_i__h12_ss = 1 / var_INaCa_i__h10_ss; // dimensionless
        const double var_INaCa_i__k1_i = var_INaCa_i__h12_i * var_INaCa_i__kcaon * NV_Ith_S(mParameters, 3); // dimensionless
        const double var_INaCa_i__k1_ss = var_INaCa_i__h12_ss * var_INaCa_i__kcaon * NV_Ith_S(mParameters, 3); // dimensionless
        const double var_intracellular_ions__BSLmax = 1.1240000000000001; // millimolar
        const double var_intracellular_ions__BSRmax = 0.047; // millimolar
        const double var_intracellular_ions__KmBSL = 0.0086999999999999994; // millimolar
        const double var_intracellular_ions__KmBSR = 0.00087000000000000001; // millimolar
        const double var_IKs__KsCa = 1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__intracellular_ions__cai), 1.3999999999999999)); // dimensionless
        const double var_IKs__GKs_total = var_IKs__GKs * var_IKs__KsCa; // milliS_per_microF
        const double var_INaCa_i__allo_i = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cai, 2)); // dimensionless
        const double var_IpCa__IpCa = NV_Ith_S(mParameters, 11) * var_chaste_interface__intracellular_ions__cai / (var_IpCa__KmCap + var_chaste_interface__intracellular_ions__cai); // microA_per_microF
        const double var_SERCA__Jupnp = 0.0043750000000000004 * var_SERCA__upScale * var_chaste_interface__intracellular_ions__cai / (0.00092000000000000003 + var_chaste_interface__intracellular_ions__cai); // millimolar_per_millisecond
        const double var_SERCA__Jupp = 0.01203125 * var_SERCA__upScale * var_chaste_interface__intracellular_ions__cai / (0.00075000000000000002 + var_chaste_interface__intracellular_ions__cai); // millimolar_per_millisecond
        const double var_SERCA__Jleak = 0.00026249999999999998 * var_chaste_interface__intracellular_ions__cansr; // millimolar_per_millisecond
        const double var_CaMK__CaMKb = (1.0 - var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKo / (1.0 + var_CaMK__KmCaM / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double d_dt_chaste_interface_var_CaMK__CaMKt = -var_chaste_interface__CaMK__CaMKt * var_CaMK__bCaMK + (var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKb * var_CaMK__aCaMK; // millimolar / millisecond
        const double var_ICaL__anca = 1 / (pow((1.0 + var_ICaL__Kmn / var_chaste_interface__intracellular_ions__cass), 4) + var_ICaL__k2n / var_ICaL__km2n); // dimensionless
        const double d_dt_chaste_interface_var_ICaL__nca = var_ICaL__anca * var_ICaL__k2n - var_ICaL__km2n * var_chaste_interface__ICaL__nca; // 1 / millisecond
        const double var_ICaL__fICaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INa__fINap = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INaCa_i__allo_ss = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cass, 2)); // dimensionless
        const double var_INaL__fINaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_Ito__fItop = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_SERCA__fJupp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_SERCA__Jup = (-var_SERCA__Jleak + (1.0 - var_SERCA__fJupp) * var_SERCA__Jupnp + var_SERCA__Jupp * var_SERCA__fJupp) * NV_Ith_S(mParameters, 2); // millimolar_per_millisecond
        const double var_diff__Jdiff = 5.0 * var_chaste_interface__intracellular_ions__cass - 5.0 * var_chaste_interface__intracellular_ions__cai; // millimolar_per_millisecond
        const double var_intracellular_ions__Bcass = 1 / (1.0 + var_intracellular_ions__BSLmax * var_intracellular_ions__KmBSL / pow((var_intracellular_ions__KmBSL + var_chaste_interface__intracellular_ions__cass), 2) + var_intracellular_ions__BSRmax * var_intracellular_ions__KmBSR / pow((var_intracellular_ions__KmBSR + var_chaste_interface__intracellular_ions__cass), 2)); // dimensionless
        const double var_intracellular_ions__cm = 1.0; // microF_per_centimeter_squared
        const double var_intracellular_ions__cmdnmax_b = 0.050000000000000003; // millimolar
        const double var_intracellular_ions__cmdnmax = ((var_environment__celltype == 1.0) ? (1.3 * var_intracellular_ions__cmdnmax_b) : (var_intracellular_ions__cmdnmax_b)); // millimolar
        const double var_intracellular_ions__csqnmax = 10.0; // millimolar
        const double var_intracellular_ions__kmcmdn = 0.0023800000000000002; // millimolar
        const double var_intracellular_ions__kmcsqn = 0.80000000000000004; // millimolar
        const double var_intracellular_ions__Bcajsr = 1 / (1.0 + var_intracellular_ions__csqnmax * var_intracellular_ions__kmcsqn / pow((var_chaste_interface__intracellular_ions__cajsr + var_intracellular_ions__kmcsqn), 2)); // dimensionless
        const double var_intracellular_ions__kmtrpn = 0.00050000000000000001; // millimolar
        const double var_diff__JdiffK = 0.5 * var_chaste_interface__intracellular_ions__kss - 0.5 * var_chaste_interface__intracellular_ions__ki; // millimolar_per_millisecond
        const double var_INaCa_i__h4_i = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_i = pow(var_chaste_interface__intracellular_ions__nai, 2) / (var_INaCa_i__h4_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_i = 1 / var_INaCa_i__h4_i; // dimensionless
        const double var_INaCa_i__k6_i = var_INaCa_i__h6_i * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cai; // dimensionless
        const double var_INaK__P = var_INaK__eP / (1.0 + var_INaK__H / var_INaK__Khp + var_chaste_interface__intracellular_ions__nai / var_INaK__Knap + var_chaste_interface__intracellular_ions__ki / var_INaK__Kxkur); // dimensionless
        const double var_INaK__b3 = var_INaK__H * var_INaK__P * var_INaK__k3m / (1.0 + var_INaK__MgATP / var_INaK__Kmgatp); // dimensionless
        const double var_INaCa_i__h4_ss = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_ss = pow(var_chaste_interface__intracellular_ions__nass, 2) / (var_INaCa_i__h4_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_ss = 1 / var_INaCa_i__h4_ss; // dimensionless
        const double var_INaCa_i__k6_ss = var_INaCa_i__h6_ss * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cass; // dimensionless
        const double var_diff__JdiffNa = 0.5 * var_chaste_interface__intracellular_ions__nass - 0.5 * var_chaste_interface__intracellular_ions__nai; // millimolar_per_millisecond
        const double var_intracellular_ions__trpnmax = 0.070000000000000007; // millimolar
        const double var_intracellular_ions__Bcai = 1 / (1.0 + var_intracellular_ions__cmdnmax * var_intracellular_ions__kmcmdn / pow((var_chaste_interface__intracellular_ions__cai + var_intracellular_ions__kmcmdn), 2) + var_intracellular_ions__kmtrpn * var_intracellular_ions__trpnmax / pow((var_chaste_interface__intracellular_ions__cai + var_intracellular_ions__kmtrpn), 2)); // dimensionless
        const double var_membrane__Istim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_membrane__Istim = var_membrane__Istim_converted / HeartConfig::Instance()->GetCapacitance(); // microA_per_microF
        const double var_ICaL__Afcaf = 0.29999999999999999 + 0.59999999999999998 / (1.0 + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__Afcas = 1.0 - var_ICaL__Afcaf; // dimensionless
        const double var_ICaL__dss = 1 / (1.0 + exp(-0.93144208037825049 - 0.23640661938534277 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__fca = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcaf + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__fcap = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcafp + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__fss = 1 / (1.0 + exp(5.2976190476190466 + 0.27056277056277056 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__fcass = var_ICaL__fss; // dimensionless
        const double d_dt_chaste_interface_var_ICaL__jca = (-var_chaste_interface__ICaL__jca + var_ICaL__fcass) / var_ICaL__tjca; // 1 / millisecond
        const double var_ICaL__td = 0.59999999999999998 + 1 / (exp(1.26 + 0.089999999999999997 * var_chaste_interface__membrane__v) + exp(-0.30000000000000004 - 0.050000000000000003 * var_chaste_interface__membrane__v)); // millisecond
        const double d_dt_chaste_interface_var_ICaL__d = (-var_chaste_interface__ICaL__d + var_ICaL__dss) / var_ICaL__td; // 1 / millisecond
        const double var_ICaL__tfcaf = 7.0 + 1 / (0.040000000000000001 * exp(0.5714285714285714 - 0.14285714285714285 * var_chaste_interface__membrane__v) + 0.040000000000000001 * exp(-0.5714285714285714 + 0.14285714285714285 * var_chaste_interface__membrane__v)); // millisecond
        const double d_dt_chaste_interface_var_ICaL__fcaf = (-var_chaste_interface__ICaL__fcaf + var_ICaL__fcass) / var_ICaL__tfcaf; // 1 / millisecond
        const double var_ICaL__tfcafp = 2.5 * var_ICaL__tfcaf; // millisecond
        const double d_dt_chaste_interface_var_ICaL__fcafp = (-var_chaste_interface__ICaL__fcafp + var_ICaL__fcass) / var_ICaL__tfcafp; // 1 / millisecond
        const double var_ICaL__tfcas = 100.0 + 1 / (0.00012 * exp(0.14285714285714285 * var_chaste_interface__membrane__v) + 0.00012 * exp(-0.33333333333333331 * var_chaste_interface__membrane__v)); // millisecond
        const double d_dt_chaste_interface_var_ICaL__fcas = (-var_chaste_interface__ICaL__fcas + var_ICaL__fcass) / var_ICaL__tfcas; // 1 / millisecond
        const double var_ICaL__tff = 7.0 + 1 / (0.0044999999999999997 * exp(2.0 + 0.10000000000000001 * var_chaste_interface__membrane__v) + 0.0044999999999999997 * exp(-2.0 - 0.10000000000000001 * var_chaste_interface__membrane__v)); // millisecond
        const double d_dt_chaste_interface_var_ICaL__ff = (-var_chaste_interface__ICaL__ff + var_ICaL__fss) / var_ICaL__tff; // 1 / millisecond
        const double var_ICaL__tffp = 2.5 * var_ICaL__tff; // millisecond
        const double d_dt_chaste_interface_var_ICaL__ffp = (-var_chaste_interface__ICaL__ffp + var_ICaL__fss) / var_ICaL__tffp; // 1 / millisecond
        const double var_ICaL__tfs = 1000.0 + 1 / (3.4999999999999997e-5 * exp(0.83333333333333337 + 0.16666666666666666 * var_chaste_interface__membrane__v) + 3.4999999999999997e-5 * exp(-1.25 - 0.25 * var_chaste_interface__membrane__v)); // millisecond
        const double d_dt_chaste_interface_var_ICaL__fs = (-var_chaste_interface__ICaL__fs + var_ICaL__fss) / var_ICaL__tfs; // 1 / millisecond
        const double var_IK1__rk1 = 1 / (1.0 + exp(11.145054250500367 + 0.10534077741493732 * var_chaste_interface__membrane__v - 0.27388602127883704 * NV_Ith_S(mParameters, 4))); // millisecond
        const double var_IK1__txk1 = 122.2 / (exp(3.4155488244627148 + 0.014423770373575654 * var_chaste_interface__membrane__v) + exp(-6.2475442043222005 - 0.049115913555992145 * var_chaste_interface__membrane__v)); // millisecond
        const double var_IK1__xk1ss = 1 / (1.0 + exp((-144.59 - var_chaste_interface__membrane__v - 2.5537999999999998 * NV_Ith_S(mParameters, 4)) / (3.8115000000000001 + 1.5691999999999999 * NV_Ith_S(mParameters, 4)))); // dimensionless
        const double d_dt_chaste_interface_var_IK1__xk1 = (-var_chaste_interface__IK1__xk1 + var_IK1__xk1ss) / var_IK1__txk1; // 1 / millisecond
        const double var_IKb__xkb = 1 / (1.0 + exp(0.78953107960741553 - 0.054525627044711013 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_IKr__Axrf = 1 / (1.0 + exp(1.4344412457471867 + 0.026171159382360639 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_IKr__Axrs = 1.0 - var_IKr__Axrf; // dimensionless
        const double var_IKr__rkr = 1 / ((1.0 + exp(0.73333333333333328 + 0.013333333333333334 * var_chaste_interface__membrane__v)) * (1.0 + exp(-0.33333333333333331 + 0.033333333333333333 * var_chaste_interface__membrane__v))); // dimensionless
        const double var_IKr__txrf = 12.98 + 1 / (4.1230000000000003e-5 * exp(2.3444553483807655 - 0.049067713444553483 * var_chaste_interface__membrane__v) + 0.36520000000000002 * exp(-8.182993021452571 + 0.25846471956577927 * var_chaste_interface__membrane__v)); // millisecond
        const double var_IKr__txrs = 1.865 + 1 / (1.128e-5 * exp(1.146491904394757 - 0.038550501156515031 * var_chaste_interface__membrane__v) + 0.066290000000000002 * exp(-4.7178789938817136 + 0.13596193065941536 * var_chaste_interface__membrane__v)); // millisecond
        const double var_IKr__xr = var_IKr__Axrf * var_chaste_interface__IKr__xrf + var_IKr__Axrs * var_chaste_interface__IKr__xrs; // dimensionless
        const double var_IKr__xrss = 1 / (1.0 + exp(-1.2280159080866107 - 0.14729709824716453 * var_chaste_interface__membrane__v)); // dimensionless
        const double d_dt_chaste_interface_var_IKr__xrf = (-var_chaste_interface__IKr__xrf + var_IKr__xrss) / var_IKr__txrf; // 1 / millisecond
        const double d_dt_chaste_interface_var_IKr__xrs = (-var_chaste_interface__IKr__xrs + var_IKr__xrss) / var_IKr__txrs; // 1 / millisecond
        const double var_IKs__txs1 = 1 / (0.001292 * exp(-0.91304347826086951 - 0.0043478260869565218 * var_chaste_interface__membrane__v) + 0.00023259999999999999 * exp(2.7123595505617977 + 0.056179775280898875 * var_chaste_interface__membrane__v)) + var_IKs__txs1_max; // millisecond
        const double var_IKs__txs2 = 1 / (0.019300000000000001 * exp(-2.1464516129032258 - 0.032258064516129031 * var_chaste_interface__membrane__v) + 0.01 * exp(-2.5 + 0.050000000000000003 * var_chaste_interface__membrane__v)); // millisecond
        const double var_IKs__xs1ss = 1 / (1.0 + exp(-1.2987012987012987 - 0.11195700850873264 * var_chaste_interface__membrane__v)); // dimensionless
        const double d_dt_chaste_interface_var_IKs__xs1 = (-var_chaste_interface__IKs__xs1 + var_IKs__xs1ss) / var_IKs__txs1; // 1 / millisecond
        const double var_IKs__xs2ss = var_IKs__xs1ss; // dimensionless
        const double d_dt_chaste_interface_var_IKs__xs2 = (-var_chaste_interface__IKs__xs2 + var_IKs__xs2ss) / var_IKs__txs2; // 1 / millisecond
        const double var_INa__hss = 1 / (1.0 + exp((var_INa__hssV1 + var_chaste_interface__membrane__v) / var_INa__hssV2)); // dimensionless
        const double var_INa__hssp = 1 / (1.0 + exp(14.640157739073281 + 0.16431153466973381 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_INa__jss = var_INa__hss; // dimensionless
        const double var_INa__mss = 1 / (1.0 + exp((-var_INa__mssV1 - var_chaste_interface__membrane__v) / var_INa__mssV2)); // dimensionless
        const double var_INa__thf = 1 / (6.149 * exp(0.025140601874691665 + 0.049333991119881598 * var_chaste_interface__membrane__v) + 1.432e-5 * exp(-0.19029435163086714 - 0.15910898965791567 * var_chaste_interface__membrane__v)); // millisecond
        const double d_dt_chaste_interface_var_INa__hf = (-var_chaste_interface__INa__hf + var_INa__hss) / var_INa__thf; // 1 / millisecond
        const double var_INa__ths = 1 / (0.0097940000000000006 * exp(-0.63992869875222813 - 0.035650623885918005 * var_chaste_interface__membrane__v) + 0.33429999999999999 * exp(0.10112954465231205 + 0.017649135192375574 * var_chaste_interface__membrane__v)); // millisecond
        const double d_dt_chaste_interface_var_INa__hs = (-var_chaste_interface__INa__hs + var_INa__hss) / var_INa__ths; // 1 / millisecond
        const double var_INa__thsp = 3.0 * var_INa__ths; // millisecond
        const double d_dt_chaste_interface_var_INa__hsp = (-var_chaste_interface__INa__hsp + var_INa__hssp) / var_INa__thsp; // 1 / millisecond
        const double var_INa__tj = 2.0379999999999998 + 1 / (0.30520000000000003 * exp(0.025854356306892066 + 0.02600780234070221 * var_chaste_interface__membrane__v) + 0.021360000000000001 * exp(-12.148291269170388 - 0.12075836251660427 * var_chaste_interface__membrane__v)); // millisecond
        const double d_dt_chaste_interface_var_INa__j = (-var_chaste_interface__INa__j + var_INa__jss) / var_INa__tj; // 1 / millisecond
        const double var_INa__tjp = 1.46 * var_INa__tj; // millisecond
        const double d_dt_chaste_interface_var_INa__jp = (-var_chaste_interface__INa__jp + var_INa__jss) / var_INa__tjp; // 1 / millisecond
        const double var_INa__tm = 1 / (var_INa__mtD1 * exp((var_INa__mtV1 + var_chaste_interface__membrane__v) / var_INa__mtV2) + var_INa__mtD2 * exp((-var_INa__mtV3 - var_chaste_interface__membrane__v) / var_INa__mtV4)); // millisecond
        const double d_dt_chaste_interface_var_INa__m = (-var_chaste_interface__INa__m + var_INa__mss) / var_INa__tm; // 1 / millisecond
        const double var_INaL__hLss = 1 / (1.0 + exp(11.700053418803417 + 0.13354700854700854 * var_chaste_interface__membrane__v)); // dimensionless
        const double d_dt_chaste_interface_var_INaL__hL = (-var_chaste_interface__INaL__hL + var_INaL__hLss) / var_INaL__thL; // 1 / millisecond
        const double var_INaL__hLssp = 1 / (1.0 + exp(12.528044871794872 + 0.13354700854700854 * var_chaste_interface__membrane__v)); // dimensionless
        const double d_dt_chaste_interface_var_INaL__hLp = (-var_chaste_interface__INaL__hLp + var_INaL__hLssp) / var_INaL__thLp; // 1 / millisecond
        const double var_INaL__mLss = 1 / (1.0 + exp(-8.1401975683890573 - 0.18996960486322187 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_INaL__tmL = var_INa__tm; // millisecond
        const double d_dt_chaste_interface_var_INaL__mL = (-var_chaste_interface__INaL__mL + var_INaL__mLss) / var_INaL__tmL; // 1 / millisecond
        const double var_Ito__AiF = 1 / (1.0 + exp(-1.4126984126984128 + 0.0066137566137566143 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__AiS = 1.0 - var_Ito__AiF; // dimensionless
        const double var_Ito__ass = 1 / (1.0 + exp(0.96761133603238858 - 0.067476383265856948 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__assp = 1 / (1.0 + exp(1.6423751686909582 - 0.067476383265856948 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__delta_epi = ((var_environment__celltype == 1.0) ? (1.0 - 0.94999999999999996 / (1.0 + exp(14.0 + 0.20000000000000001 * var_chaste_interface__membrane__v))) : (1.0)); // dimensionless
        const double var_Ito__dti_develop = 1.3540000000000001 + 0.0001 / (exp(56.77808727948004 - 4.6425255338904359 * var_chaste_interface__membrane__v) + exp(-10.534927627438641 + 0.062932662051604776 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__dti_recover = 1.0 - 0.5 / (1.0 + exp(3.5 + 0.050000000000000003 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__i = var_Ito__AiF * var_chaste_interface__Ito__iF + var_Ito__AiS * var_chaste_interface__Ito__iS; // dimensionless
        const double var_Ito__ip = var_Ito__AiF * var_chaste_interface__Ito__iFp + var_Ito__AiS * var_chaste_interface__Ito__iSp; // dimensionless
        const double var_Ito__iss = 1 / (1.0 + exp(7.6939240063036234 + 0.17510068289266328 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__ta = 1.0515000000000001 / (3.5 / (1.0 + exp(3.403513787634354 + 0.034035137876343539 * var_chaste_interface__membrane__v)) + 0.82719827942757873 / (1.0 + exp(0.62658348478969694 - 0.034035137876343539 * var_chaste_interface__membrane__v))); // millisecond
        const double d_dt_chaste_interface_var_Ito__a = (-var_chaste_interface__Ito__a + var_Ito__ass) / var_Ito__ta; // 1 / millisecond
        const double d_dt_chaste_interface_var_Ito__ap = (-var_chaste_interface__Ito__ap + var_Ito__assp) / var_Ito__ta; // 1 / millisecond
        const double var_Ito__tiF_b = 4.5620000000000003 + 1 / (0.39329999999999998 * exp(-1.0 - 0.01 * var_chaste_interface__membrane__v) + 0.08004 * exp(3.0138637733574445 + 0.060277275467148887 * var_chaste_interface__membrane__v)); // millisecond
        const double var_Ito__tiF = var_Ito__delta_epi * var_Ito__tiF_b; // millisecond
        const double d_dt_chaste_interface_var_Ito__iF = (-var_chaste_interface__Ito__iF + var_Ito__iss) / var_Ito__tiF; // 1 / millisecond
        const double var_Ito__tiFp = var_Ito__dti_develop * var_Ito__dti_recover * var_Ito__tiF; // millisecond
        const double d_dt_chaste_interface_var_Ito__iFp = (-var_chaste_interface__Ito__iFp + var_Ito__iss) / var_Ito__tiFp; // 1 / millisecond
        const double var_Ito__tiS_b = 23.620000000000001 + 1 / (1.7800000000000001e-8 * exp(14.123035029087756 + 0.12377769525931426 * var_chaste_interface__membrane__v) + 0.0014159999999999999 * exp(-1.6345469940728197 - 0.016934801016088061 * var_chaste_interface__membrane__v)); // millisecond
        const double var_Ito__tiS = var_Ito__delta_epi * var_Ito__tiS_b; // millisecond
        const double d_dt_chaste_interface_var_Ito__iS = (-var_chaste_interface__Ito__iS + var_Ito__iss) / var_Ito__tiS; // 1 / millisecond
        const double var_Ito__tiSp = var_Ito__dti_develop * var_Ito__dti_recover * var_Ito__tiS; // millisecond
        const double d_dt_chaste_interface_var_Ito__iSp = (-var_chaste_interface__Ito__iSp + var_Ito__iss) / var_Ito__tiSp; // 1 / millisecond
        const double var_ICaL__PhiCaK = ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6))) ? (-9.9999999999999995e-8 * (-0.75 * NV_Ith_S(mParameters, 4) + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * NV_Ith_S(mParameters, 4) + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * NV_Ith_S(mParameters, 4) + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6) + var_chaste_interface__membrane__v) * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))) : (pow(NV_Ith_S(mParameters, 6), 2) * (-0.75 * NV_Ith_S(mParameters, 4) + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))); // dimensionless
        const double var_ICaL__ICaK = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaK * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaKp * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ions__kss = -var_diff__JdiffK - var_ICaL__ICaK * var_cell_geometry__Acap * var_intracellular_ions__cm / (var_cell_geometry__vss * NV_Ith_S(mParameters, 6)); // millimolar / millisecond
        const double var_ICaL__PhiCaL = ((fabs(var_chaste_interface__membrane__v) < 4.9999999999999998e-8 * fabs(NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6))) ? (-1.9999999999999999e-7 * (-0.34100000000000003 * NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6) + var_chaste_interface__membrane__v) * (1.9999999999999999e-7 * (-0.34100000000000003 * NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_ions__cass * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(9.9999999999999995e-8)) + 1.9999999999999999e-7 * (-0.34100000000000003 * NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8))) * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))) : (4.0 * pow(NV_Ith_S(mParameters, 6), 2) * (-0.34100000000000003 * NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_ions__cass * exp(2.0 * var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * var_chaste_interface__membrane__v / ((-1.0 + exp(2.0 * var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))); // dimensionless
        const double var_ICaL__ICaL = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCa * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCap * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__PhiCaNa = ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6))) ? (-9.9999999999999995e-8 * (-0.75 * NV_Ith_S(mParameters, 5) + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * NV_Ith_S(mParameters, 5) + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * NV_Ith_S(mParameters, 5) + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6) + var_chaste_interface__membrane__v) * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))) : (pow(NV_Ith_S(mParameters, 6), 2) * (-0.75 * NV_Ith_S(mParameters, 5) + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))); // dimensionless
        const double var_ICaL__ICaNa = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNa * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNap * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICab__ICab = ((fabs(var_chaste_interface__membrane__v) < 4.9999999999999998e-8 * fabs(NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6))) ? (-1.9999999999999999e-7 * (-0.34100000000000003 * NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 9) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6) + var_chaste_interface__membrane__v) * (1.9999999999999999e-7 * (-0.34100000000000003 * NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_ions__cai * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 9) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(9.9999999999999995e-8)) + 1.9999999999999999e-7 * (-0.34100000000000003 * NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 9) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8))) * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))) : (4.0 * pow(NV_Ith_S(mParameters, 6), 2) * (-0.34100000000000003 * NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_ions__cai * exp(2.0 * var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * NV_Ith_S(mParameters, 9) * var_chaste_interface__membrane__v / ((-1.0 + exp(2.0 * var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))); // microA_per_microF
        const double var_INaCa_i__hca = exp(var_INaCa_i__qca * var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))); // dimensionless
        const double var_INaCa_i__hna = exp(var_INaCa_i__qna * var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))); // dimensionless
        const double var_INaCa_i__h1_i = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h1_ss = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h2_i = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nai / (var_INaCa_i__h1_i * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h2_ss = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nass / (var_INaCa_i__h1_ss * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h3_i = 1 / var_INaCa_i__h1_i; // dimensionless
        const double var_INaCa_i__h3_ss = 1 / var_INaCa_i__h1_ss; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * NV_Ith_S(mParameters, 5) / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * NV_Ith_S(mParameters, 5) / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h8_i = NV_Ith_S(mParameters, 5) / (var_INaCa_i__h7_i * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h8_ss = NV_Ith_S(mParameters, 5) / (var_INaCa_i__h7_ss * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h9_i = 1 / var_INaCa_i__h7_i; // dimensionless
        const double var_INaCa_i__h9_ss = 1 / var_INaCa_i__h7_ss; // dimensionless
        const double var_INaCa_i__k3p_i = var_INaCa_i__h9_i * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3p_ss = var_INaCa_i__h9_ss * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3pp_i = var_INaCa_i__h8_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_i = var_INaCa_i__k3p_i + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__k3pp_ss = var_INaCa_i__h8_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_ss = var_INaCa_i__k3p_ss + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__k4p_i = var_INaCa_i__h3_i * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4p_ss = var_INaCa_i__h3_ss * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4pp_i = var_INaCa_i__h2_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_i = var_INaCa_i__k4p_i + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k4pp_ss = var_INaCa_i__h2_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_ss = var_INaCa_i__k4p_ss + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__k7_i = var_INaCa_i__h2_i * var_INaCa_i__h5_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k7_ss = var_INaCa_i__h2_ss * var_INaCa_i__h5_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_i = var_INaCa_i__h11_i * var_INaCa_i__h8_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_ss = var_INaCa_i__h11_ss * var_INaCa_i__h8_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__x1_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k5_i * var_INaCa_i__k7_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k2_i * var_INaCa_i__k4_i; // dimensionless
        const double var_INaCa_i__x1_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k5_ss * var_INaCa_i__k7_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k4_ss; // dimensionless
        const double var_INaCa_i__x2_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k4_i * var_INaCa_i__k6_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k1_i * var_INaCa_i__k7_i; // dimensionless
        const double var_INaCa_i__x2_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k4_ss * var_INaCa_i__k6_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k7_ss; // dimensionless
        const double var_INaCa_i__x3_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k6_i * var_INaCa_i__k8_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k1_i * var_INaCa_i__k3_i; // dimensionless
        const double var_INaCa_i__x3_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k6_ss * var_INaCa_i__k8_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k3_ss; // dimensionless
        const double var_INaCa_i__x4_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k3_i * var_INaCa_i__k5_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k2_i * var_INaCa_i__k8_i; // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E3_i = var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E4_i = var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__JncxCa_i = var_INaCa_i__E2_i * var_INaCa_i__k2_i - var_INaCa_i__E1_i * var_INaCa_i__k1_i; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_i = var_INaCa_i__E3_i * var_INaCa_i__k4pp_i - var_INaCa_i__E2_i * var_INaCa_i__k3pp_i + 3.0 * var_INaCa_i__E4_i * var_INaCa_i__k7_i - 3.0 * var_INaCa_i__E1_i * var_INaCa_i__k8_i; // millimolar_per_millisecond
        const double var_INaCa_i__x4_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k3_ss * var_INaCa_i__k5_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k8_ss; // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E3_ss = var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E4_ss = var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__JncxCa_ss = var_INaCa_i__E2_ss * var_INaCa_i__k2_ss - var_INaCa_i__E1_ss * var_INaCa_i__k1_ss; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_ss = var_INaCa_i__E3_ss * var_INaCa_i__k4pp_ss - var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss + 3.0 * var_INaCa_i__E4_ss * var_INaCa_i__k7_ss - 3.0 * var_INaCa_i__E1_ss * var_INaCa_i__k8_ss; // millimolar_per_millisecond
        const double var_INaK__Knai = var_INaK__Knai0 * exp(0.33333333333333331 * var_INaK__delta * var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))); // millimolar
        const double var_INaK__Knao = var_INaK__Knao0 * exp(0.33333333333333331 * (1.0 - var_INaK__delta) * var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))); // millimolar
        const double var_INaK__a1 = pow(var_chaste_interface__intracellular_ions__nai, 3) * var_INaK__k1p / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Knai, 3)); // dimensionless
        const double var_INaK__a3 = pow(NV_Ith_S(mParameters, 4), 2) * var_INaK__k3p / ((-1.0 + pow((1.0 + NV_Ith_S(mParameters, 4) / var_INaK__Kko), 2) + pow((1.0 + NV_Ith_S(mParameters, 5) / var_INaK__Knao), 3)) * pow(var_INaK__Kko, 2)); // dimensionless
        const double var_INaK__b2 = pow(NV_Ith_S(mParameters, 5), 3) * var_INaK__k2m / ((-1.0 + pow((1.0 + NV_Ith_S(mParameters, 4) / var_INaK__Kko), 2) + pow((1.0 + NV_Ith_S(mParameters, 5) / var_INaK__Knao), 3)) * pow(var_INaK__Knao, 3)); // dimensionless
        const double var_INaK__b4 = pow(var_chaste_interface__intracellular_ions__ki, 2) * var_INaK__k4m / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Kki, 2)); // dimensionless
        const double var_INaK__x1 = var_INaK__a1 * var_INaK__a2 * var_INaK__a4 + var_INaK__a1 * var_INaK__a2 * var_INaK__b3 + var_INaK__a2 * var_INaK__b3 * var_INaK__b4 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__x2 = var_INaK__a1 * var_INaK__a2 * var_INaK__a3 + var_INaK__a2 * var_INaK__a3 * var_INaK__b4 + var_INaK__a3 * var_INaK__b1 * var_INaK__b4 + var_INaK__b1 * var_INaK__b2 * var_INaK__b4; // dimensionless
        const double var_INaK__x3 = var_INaK__a2 * var_INaK__a3 * var_INaK__a4 + var_INaK__a3 * var_INaK__a4 * var_INaK__b1 + var_INaK__a4 * var_INaK__b1 * var_INaK__b2 + var_INaK__b1 * var_INaK__b2 * var_INaK__b3; // dimensionless
        const double var_INaK__x4 = var_INaK__a1 * var_INaK__a3 * var_INaK__a4 + var_INaK__a1 * var_INaK__a4 * var_INaK__b2 + var_INaK__a1 * var_INaK__b2 * var_INaK__b3 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__E1 = var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E2 = var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E3 = var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E4 = var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__JnakK = 2.0 * var_INaK__E4 * var_INaK__b1 - 2.0 * var_INaK__E3 * var_INaK__a1; // millimolar_per_millisecond
        const double var_INaK__JnakNa = 3.0 * var_INaK__E1 * var_INaK__a3 - 3.0 * var_INaK__E2 * var_INaK__b3; // millimolar_per_millisecond
        const double var_INab__INab = ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6))) ? (-3.7499999999999999e-17 * (-NV_Ith_S(mParameters, 5) + var_chaste_interface__intracellular_ions__nai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6) + var_chaste_interface__membrane__v) * (3.7499999999999999e-17 * (-NV_Ith_S(mParameters, 5) + var_chaste_interface__intracellular_ions__nai * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(9.9999999999999995e-8)) + 3.7499999999999999e-17 * (-NV_Ith_S(mParameters, 5) + var_chaste_interface__intracellular_ions__nai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8))) * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))) : (3.75e-10 * pow(NV_Ith_S(mParameters, 6), 2) * (-NV_Ith_S(mParameters, 5) + var_chaste_interface__intracellular_ions__nai * exp(var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))); // microA_per_microF
        const double var_physical_constants__zca = 2.0; // dimensionless
        const double var_physical_constants__zk = 1.0; // dimensionless
        const double var_physical_constants__zna = 1.0; // dimensionless
        const double var_INaCa_i__INaCa_i = 0.80000000000000004 * (var_INaCa_i__JncxCa_i * var_physical_constants__zca + var_INaCa_i__JncxNa_i * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_i; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ions__cai = (var_cell_geometry__vss * var_diff__Jdiff / var_cell_geometry__vmyo - var_SERCA__Jup * var_cell_geometry__vnsr / var_cell_geometry__vmyo + 0.5 * (-var_ICab__ICab - var_IpCa__IpCa + 2.0 * var_INaCa_i__INaCa_i) * var_cell_geometry__Acap * var_intracellular_ions__cm / (var_cell_geometry__vmyo * NV_Ith_S(mParameters, 6))) * var_intracellular_ions__Bcai; // millimolar / millisecond
        const double var_INaCa_i__INaCa_ss = 0.20000000000000001 * (var_INaCa_i__JncxCa_ss * var_physical_constants__zca + var_INaCa_i__JncxNa_ss * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_ss; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ions__nass = -var_diff__JdiffNa + (-var_ICaL__ICaNa - 3.0 * var_INaCa_i__INaCa_ss) * var_cell_geometry__Acap * var_intracellular_ions__cm / (var_cell_geometry__vss * NV_Ith_S(mParameters, 6)); // millimolar / millisecond
        const double var_INaK__INaK = (var_INaK__JnakK * var_physical_constants__zk + var_INaK__JnakNa * var_physical_constants__zna) * var_INaK__Pnak; // microA_per_microF
        const double var_reversal_potentials__EK = NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__intracellular_ions__ki) / NV_Ith_S(mParameters, 6); // mV
        const double var_IK1__IK1 = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IK1__GK1_total * var_IK1__rk1 * var_chaste_interface__IK1__xk1; // microA_per_microF
        const double var_IKb__IKb = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKb__GKb * var_IKb__xkb; // microA_per_microF
        const double var_IKr__IKr = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKr__GKr_total * var_IKr__rkr * var_IKr__xr; // microA_per_microF
        const double var_Ito__Ito = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * ((1.0 - var_Ito__fItop) * var_chaste_interface__Ito__a * var_Ito__i + var_chaste_interface__Ito__ap * var_Ito__fItop * var_Ito__ip) * var_Ito__Gto; // microA_per_microF
        const double var_reversal_potentials__ENa = NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__intracellular_ions__nai) / NV_Ith_S(mParameters, 6); // mV
        const double var_INa__INa = pow(var_chaste_interface__INa__m, 3) * (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INa__fINap) * var_INa__h * var_chaste_interface__INa__j + var_INa__fINap * var_INa__hp * var_chaste_interface__INa__jp) * NV_Ith_S(mParameters, 12); // microA_per_microF
        const double var_INaL__INaL = (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL + var_INaL__fINaLp * var_chaste_interface__INaL__hLp) * var_INaL__GNaL * var_chaste_interface__INaL__mL; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ions__nai = var_cell_geometry__vss * var_diff__JdiffNa / var_cell_geometry__vmyo + (-var_INa__INa - var_INaL__INaL - var_INab__INab - 3.0 * var_INaCa_i__INaCa_i - 3.0 * var_INaK__INaK) * var_cell_geometry__Acap * var_intracellular_ions__cm / (var_cell_geometry__vmyo * NV_Ith_S(mParameters, 6)); // millimolar / millisecond
        const double var_reversal_potentials__PKNa = 0.018329999999999999; // dimensionless
        const double var_reversal_potentials__EKs = NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) * log((NV_Ith_S(mParameters, 5) * var_reversal_potentials__PKNa + NV_Ith_S(mParameters, 4)) / (var_chaste_interface__intracellular_ions__nai * var_reversal_potentials__PKNa + var_chaste_interface__intracellular_ions__ki)) / NV_Ith_S(mParameters, 6); // mV
        const double var_IKs__IKs = (-var_reversal_potentials__EKs + var_chaste_interface__membrane__v) * var_IKs__GKs_total * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ions__ki = var_cell_geometry__vss * var_diff__JdiffK / var_cell_geometry__vmyo + (-var_IK1__IK1 - var_IKb__IKb - var_IKr__IKr - var_IKs__IKs - var_Ito__Ito - var_membrane__Istim + 2.0 * var_INaK__INaK) * var_cell_geometry__Acap * var_intracellular_ions__cm / (var_cell_geometry__vmyo * NV_Ith_S(mParameters, 6)); // millimolar / millisecond
        const double var_ryr__bt = 4.75; // millisecond
        const double var_ryr__a_rel = 0.5 * var_ryr__bt; // millisecond
        const double var_ryr__Jrel_inf_temp = -var_ICaL__ICaL * var_ryr__a_rel / (1.0 + 25.62890625 / pow(var_chaste_interface__intracellular_ions__cajsr, 8)); // dimensionless
        const double var_ryr__Jrel_inf = ((var_environment__celltype == 2.0) ? (1.7 * var_ryr__Jrel_inf_temp) : (var_ryr__Jrel_inf_temp)); // dimensionless
        const double var_ryr__btp = 1.25 * var_ryr__bt; // millisecond
        const double var_ryr__a_relp = 0.5 * var_ryr__btp; // millisecond
        const double var_ryr__Jrel_temp = -var_ICaL__ICaL * var_ryr__a_relp / (1.0 + 25.62890625 / pow(var_chaste_interface__intracellular_ions__cajsr, 8)); // dimensionless
        const double var_ryr__Jrel_infp = ((var_environment__celltype == 2.0) ? (1.7 * var_ryr__Jrel_temp) : (var_ryr__Jrel_temp)); // dimensionless
        const double var_ryr__fJrelp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_ryr__Jrel = ((1.0 - var_ryr__fJrelp) * var_chaste_interface__ryr__Jrelnp + var_chaste_interface__ryr__Jrelp * var_ryr__fJrelp) * NV_Ith_S(mParameters, 1); // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_intracellular_ions__cass = (-var_diff__Jdiff + var_cell_geometry__vjsr * var_ryr__Jrel / var_cell_geometry__vss + 0.5 * (-var_ICaL__ICaL + 2.0 * var_INaCa_i__INaCa_ss) * var_cell_geometry__Acap * var_intracellular_ions__cm / (var_cell_geometry__vss * NV_Ith_S(mParameters, 6))) * var_intracellular_ions__Bcass; // millimolar / millisecond
        const double var_ryr__tau_rel_temp = var_ryr__bt / (1.0 + 0.0123 / var_chaste_interface__intracellular_ions__cajsr); // millisecond
        const double var_ryr__tau_rel = ((var_ryr__tau_rel_temp < 0.001) ? (0.001) : (var_ryr__tau_rel_temp)); // millisecond
        const double d_dt_chaste_interface_var_ryr__Jrelnp = (-var_chaste_interface__ryr__Jrelnp + var_ryr__Jrel_inf) / var_ryr__tau_rel; // 1 / millisecond
        const double var_ryr__tau_relp_temp = var_ryr__btp / (1.0 + 0.0123 / var_chaste_interface__intracellular_ions__cajsr); // millisecond
        const double var_ryr__tau_relp = ((var_ryr__tau_relp_temp < 0.001) ? (0.001) : (var_ryr__tau_relp_temp)); // millisecond
        const double d_dt_chaste_interface_var_ryr__Jrelp = (-var_chaste_interface__ryr__Jrelp + var_ryr__Jrel_infp) / var_ryr__tau_relp; // 1 / millisecond
        const double var_trans_flux__Jtr = 0.01 * var_chaste_interface__intracellular_ions__cansr - 0.01 * var_chaste_interface__intracellular_ions__cajsr; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_intracellular_ions__cajsr = (-var_ryr__Jrel + var_trans_flux__Jtr) * var_intracellular_ions__Bcajsr; // millimolar / millisecond
        const double d_dt_chaste_interface_var_intracellular_ions__cansr = -var_cell_geometry__vjsr * var_trans_flux__Jtr / var_cell_geometry__vnsr + var_SERCA__Jup; // millimolar / millisecond


        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_intracellular_ions__cai;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_CaMK__CaMKt;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_intracellular_ions__nai;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_intracellular_ions__nass;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_intracellular_ions__ki;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_intracellular_ions__kss;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_intracellular_ions__cass;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_intracellular_ions__cansr;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_intracellular_ions__cajsr;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_INa__m;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_INa__hf;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_INa__hs;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_INa__j;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_INa__hsp;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_INa__jp;
        NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_INaL__mL;
        NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_INaL__hL;
        NV_Ith_S(rDY,17) = d_dt_chaste_interface_var_INaL__hLp;
        NV_Ith_S(rDY,18) = d_dt_chaste_interface_var_Ito__a;
        NV_Ith_S(rDY,19) = d_dt_chaste_interface_var_Ito__iF;
        NV_Ith_S(rDY,20) = d_dt_chaste_interface_var_Ito__iS;
        NV_Ith_S(rDY,21) = d_dt_chaste_interface_var_Ito__ap;
        NV_Ith_S(rDY,22) = d_dt_chaste_interface_var_Ito__iFp;
        NV_Ith_S(rDY,23) = d_dt_chaste_interface_var_Ito__iSp;
        NV_Ith_S(rDY,24) = d_dt_chaste_interface_var_ICaL__d;
        NV_Ith_S(rDY,25) = d_dt_chaste_interface_var_ICaL__ff;
        NV_Ith_S(rDY,26) = d_dt_chaste_interface_var_ICaL__fs;
        NV_Ith_S(rDY,27) = d_dt_chaste_interface_var_ICaL__fcaf;
        NV_Ith_S(rDY,28) = d_dt_chaste_interface_var_ICaL__fcas;
        NV_Ith_S(rDY,29) = d_dt_chaste_interface_var_ICaL__jca;
        NV_Ith_S(rDY,30) = d_dt_chaste_interface_var_ICaL__ffp;
        NV_Ith_S(rDY,31) = d_dt_chaste_interface_var_ICaL__fcafp;
        NV_Ith_S(rDY,32) = d_dt_chaste_interface_var_ICaL__nca;
        NV_Ith_S(rDY,33) = d_dt_chaste_interface_var_IKr__xrf;
        NV_Ith_S(rDY,34) = d_dt_chaste_interface_var_IKr__xrs;
        NV_Ith_S(rDY,35) = d_dt_chaste_interface_var_IKs__xs1;
        NV_Ith_S(rDY,36) = d_dt_chaste_interface_var_IKs__xs2;
        NV_Ith_S(rDY,37) = d_dt_chaste_interface_var_IK1__xk1;
        NV_Ith_S(rDY,38) = d_dt_chaste_interface_var_ryr__Jrelnp;
        NV_Ith_S(rDY,39) = d_dt_chaste_interface_var_ryr__Jrelp;
    }

    N_Vector Cellohara_rudy_2011_epi_analytic_voltageFromCellMLCvode::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__intracellular_ions__cai = NV_Ith_S(rY, 0);
        // Units: millimolar; Initial value: 0.0001
        double var_chaste_interface__CaMK__CaMKt = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0
        double var_chaste_interface__intracellular_ions__nai = NV_Ith_S(rY, 2);
        // Units: millimolar; Initial value: 7.0
        double var_chaste_interface__intracellular_ions__nass = NV_Ith_S(rY, 3);
        // Units: millimolar; Initial value: 7.0
        double var_chaste_interface__intracellular_ions__ki = NV_Ith_S(rY, 4);
        // Units: millimolar; Initial value: 145.0
        double var_chaste_interface__intracellular_ions__kss = NV_Ith_S(rY, 5);
        // Units: millimolar; Initial value: 145.0
        double var_chaste_interface__intracellular_ions__cass = NV_Ith_S(rY, 6);
        // Units: millimolar; Initial value: 0.0001
        double var_chaste_interface__intracellular_ions__cansr = NV_Ith_S(rY, 7);
        // Units: millimolar; Initial value: 1.2
        double var_chaste_interface__intracellular_ions__cajsr = NV_Ith_S(rY, 8);
        // Units: millimolar; Initial value: 1.2
        double var_chaste_interface__INa__m = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__INa__hf = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__hs = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__j = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__hsp = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__jp = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INaL__mL = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__INaL__hL = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INaL__hLp = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__d = NV_Ith_S(rY, 24);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ICaL__ff = NV_Ith_S(rY, 25);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fs = NV_Ith_S(rY, 26);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcaf = NV_Ith_S(rY, 27);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcas = NV_Ith_S(rY, 28);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__jca = NV_Ith_S(rY, 29);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__ffp = NV_Ith_S(rY, 30);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcafp = NV_Ith_S(rY, 31);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__nca = NV_Ith_S(rY, 32);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKr__xrf = NV_Ith_S(rY, 33);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKr__xrs = NV_Ith_S(rY, 34);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKs__xs1 = NV_Ith_S(rY, 35);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKs__xs2 = NV_Ith_S(rY, 36);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IK1__xk1 = NV_Ith_S(rY, 37);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ryr__Jrelnp = NV_Ith_S(rY, 38);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ryr__Jrelp = NV_Ith_S(rY, 39);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : CalculateAnalyticVoltage(rY, mParameters));
        // Units: mV; Initial value: -87.0

        // Mathematics
        const double var_CaMK__CaMKo = 0.050000000000000003; // dimensionless
        const double var_CaMK__KmCaM = 0.0015; // millimolar
        const double var_CaMK__KmCaMK = 0.14999999999999999; // millimolar
        const double var_ICaL__Aff = 0.59999999999999998; // dimensionless
        const double var_ICaL__Afs = 1.0 - var_ICaL__Aff; // dimensionless
        const double var_ICaL__f = var_ICaL__Aff * var_chaste_interface__ICaL__ff + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_ICaL__fp = var_ICaL__Aff * var_chaste_interface__ICaL__ffp + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_INa__Ahf = 0.98999999999999999; // dimensionless
        const double var_INa__Ahs = 1.0 - var_INa__Ahf; // dimensionless
        const double var_INa__h = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hs; // dimensionless
        const double var_INa__hp = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hsp; // dimensionless
        const double var_INaCa_i__KmCaAct = 0.00014999999999999999; // millimolar
        const double var_INaCa_i__kasymm = 12.5; // dimensionless
        const double var_INaCa_i__kcaoff = 5000.0; // per_millisecond
        const double var_INaCa_i__k2_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k2_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__kcaon = 1500000.0; // per_millisecond
        const double var_INaCa_i__kna1 = 15.0; // per_millisecond
        const double var_INaCa_i__kna2 = 5.0; // per_millisecond
        const double var_INaCa_i__kna3 = 88.120000000000005; // per_millisecond
        const double var_INaCa_i__qca = 0.16700000000000001; // dimensionless
        const double var_INaCa_i__qna = 0.52239999999999998; // dimensionless
        const double var_INaCa_i__wca = 60000.0; // dimensionless
        const double var_INaCa_i__wna = 60000.0; // dimensionless
        const double var_INaCa_i__wnaca = 5000.0; // dimensionless
        const double var_INaK__H = 9.9999999999999995e-8; // millimolar
        const double var_INaK__Khp = 1.698e-7; // millimolar
        const double var_INaK__Kki = 0.5; // per_millisecond
        const double var_INaK__Kko = 0.35820000000000002; // per_millisecond
        const double var_INaK__Kmgatp = 1.698e-7; // millimolar
        const double var_INaK__Knai0 = 9.0730000000000004; // millimolar
        const double var_INaK__Knao0 = 27.780000000000001; // millimolar
        const double var_INaK__Knap = 224.0; // millimolar
        const double var_INaK__Kxkur = 292.0; // millimolar
        const double var_INaK__MgADP = 0.050000000000000003; // millimolar
        const double var_INaK__MgATP = 9.8000000000000007; // millimolar
        const double var_INaK__delta = -0.155; // mV
        const double var_INaK__eP = 4.2000000000000002; // dimensionless
        const double var_INaK__k1m = 182.40000000000001; // per_millisecond
        const double var_INaK__b1 = var_INaK__MgADP * var_INaK__k1m; // dimensionless
        const double var_INaK__k1p = 949.5; // per_millisecond
        const double var_INaK__k2m = 39.399999999999999; // per_millisecond
        const double var_INaK__k2p = 687.20000000000005; // per_millisecond
        const double var_INaK__a2 = var_INaK__k2p; // dimensionless
        const double var_INaK__k3m = 79300.0; // per_millisecond
        const double var_INaK__k3p = 1899.0; // per_millisecond
        const double var_INaK__k4m = 40.0; // per_millisecond
        const double var_INaK__k4p = 639.0; // per_millisecond
        const double var_INaK__a4 = var_INaK__MgATP * var_INaK__k4p / ((1.0 + var_INaK__MgATP / var_INaK__Kmgatp) * var_INaK__Kmgatp); // dimensionless
        const double var_IpCa__KmCap = 0.00050000000000000001; // millimolar
        const double var_cell_geometry__L = 0.01; // centimeter
        const double var_cell_geometry__rad = 0.0011000000000000001; // centimeter
        const double var_cell_geometry__Ageo = 6.2800000000000002 * pow(var_cell_geometry__rad, 2) + 6.2800000000000002 * var_cell_geometry__L * var_cell_geometry__rad; // centimeter_squared
        const double var_cell_geometry__Acap = 2.0 * var_cell_geometry__Ageo; // centimeter_squared
        const double var_cell_geometry__vcell = 3140.0 * pow(var_cell_geometry__rad, 2) * var_cell_geometry__L; // microliter
        const double var_cell_geometry__vjsr = 0.0047999999999999996 * var_cell_geometry__vcell; // microliter
        const double var_cell_geometry__vmyo = 0.68000000000000005 * var_cell_geometry__vcell; // microliter
        const double var_cell_geometry__vnsr = 0.055199999999999999 * var_cell_geometry__vcell; // microliter
        const double var_cell_geometry__vss = 0.02 * var_cell_geometry__vcell; // microliter
        const double var_environment__celltype = 1.0; // dimensionless
        const double var_ICaL__PCa = ((var_environment__celltype == 1.0) ? (1.2 * NV_Ith_S(mParameters, 8)) : ((var_environment__celltype == 2.0) ? (2.5 * NV_Ith_S(mParameters, 8)) : (NV_Ith_S(mParameters, 8)))); // dimensionless
        const double var_ICaL__PCaK = 0.00035740000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaNa = 0.00125 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaKp = 0.00035740000000000001 * var_ICaL__PCap; // dimensionless
        const double var_ICaL__PCaNap = 0.00125 * var_ICaL__PCap; // dimensionless
        const double var_IK1__GK1 = ((var_environment__celltype == 1.0) ? (1.2 * NV_Ith_S(mParameters, 13)) : ((var_environment__celltype == 2.0) ? (1.3 * NV_Ith_S(mParameters, 13)) : (NV_Ith_S(mParameters, 13)))); // milliS_per_microF
        const double var_IKb__GKb = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * NV_Ith_S(mParameters, 10)) : (NV_Ith_S(mParameters, 10))); // milliS_per_microF
        const double var_IKr__GKr = ((var_environment__celltype == 1.0) ? (1.3 * NV_Ith_S(mParameters, 15)) : ((var_environment__celltype == 2.0) ? (0.80000000000000004 * NV_Ith_S(mParameters, 15)) : (NV_Ith_S(mParameters, 15)))); // milliS_per_microF
        const double var_IKs__GKs = ((var_environment__celltype == 1.0) ? (1.3999999999999999 * NV_Ith_S(mParameters, 16)) : (NV_Ith_S(mParameters, 16))); // milliS_per_microF
        const double var_INaCa_i__Gncx = ((var_environment__celltype == 1.0) ? (1.1000000000000001 * NV_Ith_S(mParameters, 17)) : ((var_environment__celltype == 2.0) ? (1.3999999999999999 * NV_Ith_S(mParameters, 17)) : (NV_Ith_S(mParameters, 17)))); // milliS_per_microF
        const double var_INaK__Pnak = ((var_environment__celltype == 1.0) ? (0.90000000000000002 * NV_Ith_S(mParameters, 18)) : ((var_environment__celltype == 2.0) ? (0.69999999999999996 * NV_Ith_S(mParameters, 18)) : (NV_Ith_S(mParameters, 18)))); // milliS_per_microF
        const double var_INaL__GNaL = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * NV_Ith_S(mParameters, 14)) : (NV_Ith_S(mParameters, 14))); // milliS_per_microF
        const double var_Ito__Gto = (((var_environment__celltype == 1.0) || (var_environment__celltype == 2.0)) ? (4.0 * NV_Ith_S(mParameters, 19)) : (NV_Ith_S(mParameters, 19))); // milliS_per_microF
        const double var_SERCA__upScale = ((var_environment__celltype == 1.0) ? (1.3) : (1.0)); // dimensionless
        const double var_IK1__GK1_total = sqrt(NV_Ith_S(mParameters, 4)) * var_IK1__GK1; // milliS_per_microF
        const double var_IKr__GKr_total = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 4)) * var_IKr__GKr; // milliS_per_microF
        const double var_INaCa_i__h10_i = 1.0 + (1.0 + NV_Ith_S(mParameters, 5) / var_INaCa_i__kna2) * NV_Ith_S(mParameters, 5) / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h10_ss = 1.0 + (1.0 + NV_Ith_S(mParameters, 5) / var_INaCa_i__kna2) * NV_Ith_S(mParameters, 5) / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h11_i = pow(NV_Ith_S(mParameters, 5), 2) / (var_INaCa_i__h10_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h11_ss = pow(NV_Ith_S(mParameters, 5), 2) / (var_INaCa_i__h10_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h12_i = 1 / var_INaCa_i__h10_i; // dimensionless
        const double var_INaCa_i__h12_ss = 1 / var_INaCa_i__h10_ss; // dimensionless
        const double var_INaCa_i__k1_i = var_INaCa_i__h12_i * var_INaCa_i__kcaon * NV_Ith_S(mParameters, 3); // dimensionless
        const double var_INaCa_i__k1_ss = var_INaCa_i__h12_ss * var_INaCa_i__kcaon * NV_Ith_S(mParameters, 3); // dimensionless
        const double var_extracellular__sum_of_ext_charges = 2*NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 4) + NV_Ith_S(mParameters, 5); // millimolar
        const double var_intracellular_ions__BSLmax = 1.1240000000000001; // millimolar
        const double var_intracellular_ions__BSRmax = 0.047; // millimolar
        const double var_intracellular_ions__Cm = 1.0; // microF
        const double var_intracellular_ions__C0 = var_extracellular__sum_of_ext_charges + NV_Ith_S(mParameters, 0); // millimolar
        const double var_intracellular_ions__KmBSL = 0.0086999999999999994; // millimolar
        const double var_intracellular_ions__KmBSR = 0.00087000000000000001; // millimolar
        const double var_IKs__KsCa = 1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__intracellular_ions__cai), 1.3999999999999999)); // dimensionless
        const double var_IKs__GKs_total = var_IKs__GKs * var_IKs__KsCa; // milliS_per_microF
        const double var_INaCa_i__allo_i = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cai, 2)); // dimensionless
        const double var_IpCa__IpCa = NV_Ith_S(mParameters, 11) * var_chaste_interface__intracellular_ions__cai / (var_IpCa__KmCap + var_chaste_interface__intracellular_ions__cai); // microA_per_microF
        const double var_IpCa__IpCa_converted = HeartConfig::Instance()->GetCapacitance() * var_IpCa__IpCa; // uA_per_cm2
        const double var_SERCA__Jupnp = 0.0043750000000000004 * var_SERCA__upScale * var_chaste_interface__intracellular_ions__cai / (0.00092000000000000003 + var_chaste_interface__intracellular_ions__cai); // millimolar_per_millisecond
        const double var_SERCA__Jupp = 0.01203125 * var_SERCA__upScale * var_chaste_interface__intracellular_ions__cai / (0.00075000000000000002 + var_chaste_interface__intracellular_ions__cai); // millimolar_per_millisecond
        const double var_SERCA__Jleak = 0.00026249999999999998 * var_chaste_interface__intracellular_ions__cansr; // millimolar_per_millisecond
        const double var_CaMK__CaMKb = (1.0 - var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKo / (1.0 + var_CaMK__KmCaM / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_ICaL__fICaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INa__fINap = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INaCa_i__allo_ss = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cass, 2)); // dimensionless
        const double var_INaL__fINaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_SERCA__fJupp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_SERCA__Jup = (-var_SERCA__Jleak + (1.0 - var_SERCA__fJupp) * var_SERCA__Jupnp + var_SERCA__Jupp * var_SERCA__fJupp) * NV_Ith_S(mParameters, 2); // millimolar_per_millisecond
        const double var_intracellular_ions__Bcass = 1 / (1.0 + var_intracellular_ions__BSLmax * var_intracellular_ions__KmBSL / pow((var_intracellular_ions__KmBSL + var_chaste_interface__intracellular_ions__cass), 2) + var_intracellular_ions__BSRmax * var_intracellular_ions__KmBSR / pow((var_intracellular_ions__KmBSR + var_chaste_interface__intracellular_ions__cass), 2)); // dimensionless
        const double var_intracellular_ions__Ca_ss_tot = (1.0 + var_intracellular_ions__BSLmax / (var_intracellular_ions__KmBSL + var_chaste_interface__intracellular_ions__cass) + var_intracellular_ions__BSRmax / (var_intracellular_ions__KmBSR + var_chaste_interface__intracellular_ions__cass)) * var_chaste_interface__intracellular_ions__cass; // millimolar
        const double var_intracellular_ions__cmdnmax_b = 0.050000000000000003; // millimolar
        const double var_intracellular_ions__cmdnmax = ((var_environment__celltype == 1.0) ? (1.3 * var_intracellular_ions__cmdnmax_b) : (var_intracellular_ions__cmdnmax_b)); // millimolar
        const double var_intracellular_ions__csqnmax = 10.0; // millimolar
        const double var_intracellular_ions__kmcmdn = 0.0023800000000000002; // millimolar
        const double var_intracellular_ions__kmcsqn = 0.80000000000000004; // millimolar
        const double var_intracellular_ions__Ca_jsr_tot = (1.0 + var_intracellular_ions__csqnmax / (var_chaste_interface__intracellular_ions__cajsr + var_intracellular_ions__kmcsqn)) * var_chaste_interface__intracellular_ions__cajsr; // millimolar
        const double var_intracellular_ions__kmtrpn = 0.00050000000000000001; // millimolar
        const double var_INaCa_i__h4_i = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_i = pow(var_chaste_interface__intracellular_ions__nai, 2) / (var_INaCa_i__h4_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_i = 1 / var_INaCa_i__h4_i; // dimensionless
        const double var_INaCa_i__k6_i = var_INaCa_i__h6_i * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cai; // dimensionless
        const double var_INaK__P = var_INaK__eP / (1.0 + var_INaK__H / var_INaK__Khp + var_chaste_interface__intracellular_ions__nai / var_INaK__Knap + var_chaste_interface__intracellular_ions__ki / var_INaK__Kxkur); // dimensionless
        const double var_INaK__b3 = var_INaK__H * var_INaK__P * var_INaK__k3m / (1.0 + var_INaK__MgATP / var_INaK__Kmgatp); // dimensionless
        const double var_INaCa_i__h4_ss = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_ss = pow(var_chaste_interface__intracellular_ions__nass, 2) / (var_INaCa_i__h4_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_ss = 1 / var_INaCa_i__h4_ss; // dimensionless
        const double var_INaCa_i__k6_ss = var_INaCa_i__h6_ss * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cass; // dimensionless
        const double var_intracellular_ions__trpnmax = 0.070000000000000007; // millimolar
        const double var_intracellular_ions__Bcai = 1 / (1.0 + var_intracellular_ions__cmdnmax * var_intracellular_ions__kmcmdn / pow((var_chaste_interface__intracellular_ions__cai + var_intracellular_ions__kmcmdn), 2) + var_intracellular_ions__kmtrpn * var_intracellular_ions__trpnmax / pow((var_chaste_interface__intracellular_ions__cai + var_intracellular_ions__kmtrpn), 2)); // dimensionless
        const double var_intracellular_ions__Ca_i_tot = (1.0 + var_intracellular_ions__cmdnmax / (var_chaste_interface__intracellular_ions__cai + var_intracellular_ions__kmcmdn) + var_intracellular_ions__trpnmax / (var_chaste_interface__intracellular_ions__cai + var_intracellular_ions__kmtrpn)) * var_chaste_interface__intracellular_ions__cai; // millimolar
        const double var_membrane__Istim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_ICaL__Afcaf = 0.29999999999999999 + 0.59999999999999998 / (1.0 + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__Afcas = 1.0 - var_ICaL__Afcaf; // dimensionless
        const double var_ICaL__fca = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcaf + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__fcap = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcafp + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_IK1__rk1 = 1 / (1.0 + exp(11.145054250500367 + 0.10534077741493732 * var_chaste_interface__membrane__v - 0.27388602127883704 * NV_Ith_S(mParameters, 4))); // millisecond
        const double var_IKb__xkb = 1 / (1.0 + exp(0.78953107960741553 - 0.054525627044711013 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_IKr__Axrf = 1 / (1.0 + exp(1.4344412457471867 + 0.026171159382360639 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_IKr__Axrs = 1.0 - var_IKr__Axrf; // dimensionless
        const double var_IKr__rkr = 1 / ((1.0 + exp(0.73333333333333328 + 0.013333333333333334 * var_chaste_interface__membrane__v)) * (1.0 + exp(-0.33333333333333331 + 0.033333333333333333 * var_chaste_interface__membrane__v))); // dimensionless
        const double var_IKr__xr = var_IKr__Axrf * var_chaste_interface__IKr__xrf + var_IKr__Axrs * var_chaste_interface__IKr__xrs; // dimensionless
        const double var_intracellular_ions__potential = (2.0 * var_intracellular_ions__Ca_i_tot + (2.0 * var_intracellular_ions__Ca_ss_tot + var_chaste_interface__intracellular_ions__kss + var_chaste_interface__intracellular_ions__nass) * var_cell_geometry__vss / var_cell_geometry__vmyo + 2.0 * var_cell_geometry__vjsr * var_intracellular_ions__Ca_jsr_tot / var_cell_geometry__vmyo + 2.0 * var_cell_geometry__vnsr * var_chaste_interface__intracellular_ions__cansr / var_cell_geometry__vmyo + var_chaste_interface__intracellular_ions__ki + var_chaste_interface__intracellular_ions__nai) * var_cell_geometry__vmyo * NV_Ith_S(mParameters, 6) / (var_cell_geometry__Acap * var_intracellular_ions__Cm); // mV
        const double var_intracellular_ions__V2 = -var_cell_geometry__vmyo * var_intracellular_ions__C0 * NV_Ith_S(mParameters, 6) / (var_cell_geometry__Acap * var_intracellular_ions__Cm) + var_intracellular_ions__potential; // mV
        const double var_ICaL__PhiCaK = ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6))) ? (-9.9999999999999995e-8 * (-0.75 * NV_Ith_S(mParameters, 4) + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * NV_Ith_S(mParameters, 4) + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * NV_Ith_S(mParameters, 4) + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6) + var_chaste_interface__membrane__v) * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))) : (pow(NV_Ith_S(mParameters, 6), 2) * (-0.75 * NV_Ith_S(mParameters, 4) + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))); // dimensionless
        const double var_ICaL__ICaK = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaK * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaKp * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaK_converted = HeartConfig::Instance()->GetCapacitance() * var_ICaL__ICaK; // uA_per_cm2
        const double var_ICaL__PhiCaL = ((fabs(var_chaste_interface__membrane__v) < 4.9999999999999998e-8 * fabs(NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6))) ? (-1.9999999999999999e-7 * (-0.34100000000000003 * NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6) + var_chaste_interface__membrane__v) * (1.9999999999999999e-7 * (-0.34100000000000003 * NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_ions__cass * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(9.9999999999999995e-8)) + 1.9999999999999999e-7 * (-0.34100000000000003 * NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8))) * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))) : (4.0 * pow(NV_Ith_S(mParameters, 6), 2) * (-0.34100000000000003 * NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_ions__cass * exp(2.0 * var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * var_chaste_interface__membrane__v / ((-1.0 + exp(2.0 * var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))); // dimensionless
        const double var_ICaL__ICaL = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCa * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCap * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaL_converted = HeartConfig::Instance()->GetCapacitance() * var_ICaL__ICaL; // uA_per_cm2
        const double var_ICaL__PhiCaNa = ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6))) ? (-9.9999999999999995e-8 * (-0.75 * NV_Ith_S(mParameters, 5) + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * NV_Ith_S(mParameters, 5) + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * NV_Ith_S(mParameters, 5) + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6) + var_chaste_interface__membrane__v) * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))) : (pow(NV_Ith_S(mParameters, 6), 2) * (-0.75 * NV_Ith_S(mParameters, 5) + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))); // dimensionless
        const double var_ICaL__ICaNa = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNa * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNap * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaNa_converted = HeartConfig::Instance()->GetCapacitance() * var_ICaL__ICaNa; // uA_per_cm2
        const double var_ICab__ICab = ((fabs(var_chaste_interface__membrane__v) < 4.9999999999999998e-8 * fabs(NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6))) ? (-1.9999999999999999e-7 * (-0.34100000000000003 * NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 9) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) / NV_Ith_S(mParameters, 6) + var_chaste_interface__membrane__v) * (1.9999999999999999e-7 * (-0.34100000000000003 * NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_ions__cai * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 9) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(9.9999999999999995e-8)) + 1.9999999999999999e-7 * (-0.34100000000000003 * NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 9) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8))) * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))) : (4.0 * pow(NV_Ith_S(mParameters, 6), 2) * (-0.34100000000000003 * NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_ions__cai * exp(2.0 * var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * NV_Ith_S(mParameters, 9) * var_chaste_interface__membrane__v / ((-1.0 + exp(2.0 * var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))) * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20)))); // microA_per_microF
        const double var_ICab__ICab_converted = HeartConfig::Instance()->GetCapacitance() * var_ICab__ICab; // uA_per_cm2
        const double var_INaCa_i__hca = exp(var_INaCa_i__qca * var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))); // dimensionless
        const double var_INaCa_i__hna = exp(var_INaCa_i__qna * var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))); // dimensionless
        const double var_INaCa_i__h1_i = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h1_ss = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h2_i = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nai / (var_INaCa_i__h1_i * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h2_ss = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nass / (var_INaCa_i__h1_ss * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h3_i = 1 / var_INaCa_i__h1_i; // dimensionless
        const double var_INaCa_i__h3_ss = 1 / var_INaCa_i__h1_ss; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * NV_Ith_S(mParameters, 5) / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * NV_Ith_S(mParameters, 5) / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h8_i = NV_Ith_S(mParameters, 5) / (var_INaCa_i__h7_i * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h8_ss = NV_Ith_S(mParameters, 5) / (var_INaCa_i__h7_ss * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h9_i = 1 / var_INaCa_i__h7_i; // dimensionless
        const double var_INaCa_i__h9_ss = 1 / var_INaCa_i__h7_ss; // dimensionless
        const double var_INaCa_i__k3p_i = var_INaCa_i__h9_i * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3p_ss = var_INaCa_i__h9_ss * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3pp_i = var_INaCa_i__h8_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_i = var_INaCa_i__k3p_i + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__k3pp_ss = var_INaCa_i__h8_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_ss = var_INaCa_i__k3p_ss + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__k4p_i = var_INaCa_i__h3_i * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4p_ss = var_INaCa_i__h3_ss * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4pp_i = var_INaCa_i__h2_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_i = var_INaCa_i__k4p_i + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k4pp_ss = var_INaCa_i__h2_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_ss = var_INaCa_i__k4p_ss + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__k7_i = var_INaCa_i__h2_i * var_INaCa_i__h5_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k7_ss = var_INaCa_i__h2_ss * var_INaCa_i__h5_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_i = var_INaCa_i__h11_i * var_INaCa_i__h8_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_ss = var_INaCa_i__h11_ss * var_INaCa_i__h8_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__x1_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k5_i * var_INaCa_i__k7_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k2_i * var_INaCa_i__k4_i; // dimensionless
        const double var_INaCa_i__x1_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k5_ss * var_INaCa_i__k7_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k4_ss; // dimensionless
        const double var_INaCa_i__x2_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k4_i * var_INaCa_i__k6_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k1_i * var_INaCa_i__k7_i; // dimensionless
        const double var_INaCa_i__x2_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k4_ss * var_INaCa_i__k6_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k7_ss; // dimensionless
        const double var_INaCa_i__x3_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k6_i * var_INaCa_i__k8_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k1_i * var_INaCa_i__k3_i; // dimensionless
        const double var_INaCa_i__x3_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k6_ss * var_INaCa_i__k8_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k3_ss; // dimensionless
        const double var_INaCa_i__x4_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k3_i * var_INaCa_i__k5_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k2_i * var_INaCa_i__k8_i; // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E3_i = var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E4_i = var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__JncxCa_i = var_INaCa_i__E2_i * var_INaCa_i__k2_i - var_INaCa_i__E1_i * var_INaCa_i__k1_i; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_i = var_INaCa_i__E3_i * var_INaCa_i__k4pp_i - var_INaCa_i__E2_i * var_INaCa_i__k3pp_i + 3.0 * var_INaCa_i__E4_i * var_INaCa_i__k7_i - 3.0 * var_INaCa_i__E1_i * var_INaCa_i__k8_i; // millimolar_per_millisecond
        const double var_INaCa_i__x4_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k3_ss * var_INaCa_i__k5_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k8_ss; // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E3_ss = var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E4_ss = var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__JncxCa_ss = var_INaCa_i__E2_ss * var_INaCa_i__k2_ss - var_INaCa_i__E1_ss * var_INaCa_i__k1_ss; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_ss = var_INaCa_i__E3_ss * var_INaCa_i__k4pp_ss - var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss + 3.0 * var_INaCa_i__E4_ss * var_INaCa_i__k7_ss - 3.0 * var_INaCa_i__E1_ss * var_INaCa_i__k8_ss; // millimolar_per_millisecond
        const double var_INaK__Knai = var_INaK__Knai0 * exp(0.33333333333333331 * var_INaK__delta * var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))); // millimolar
        const double var_INaK__Knao = var_INaK__Knao0 * exp(0.33333333333333331 * (1.0 - var_INaK__delta) * var_chaste_interface__membrane__v * NV_Ith_S(mParameters, 6) / (NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20))); // millimolar
        const double var_INaK__a1 = pow(var_chaste_interface__intracellular_ions__nai, 3) * var_INaK__k1p / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Knai, 3)); // dimensionless
        const double var_INaK__a3 = pow(NV_Ith_S(mParameters, 4), 2) * var_INaK__k3p / ((-1.0 + pow((1.0 + NV_Ith_S(mParameters, 4) / var_INaK__Kko), 2) + pow((1.0 + NV_Ith_S(mParameters, 5) / var_INaK__Knao), 3)) * pow(var_INaK__Kko, 2)); // dimensionless
        const double var_INaK__b2 = pow(NV_Ith_S(mParameters, 5), 3) * var_INaK__k2m / ((-1.0 + pow((1.0 + NV_Ith_S(mParameters, 4) / var_INaK__Kko), 2) + pow((1.0 + NV_Ith_S(mParameters, 5) / var_INaK__Knao), 3)) * pow(var_INaK__Knao, 3)); // dimensionless
        const double var_INaK__b4 = pow(var_chaste_interface__intracellular_ions__ki, 2) * var_INaK__k4m / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Kki, 2)); // dimensionless
        const double var_INaK__x1 = var_INaK__a1 * var_INaK__a2 * var_INaK__a4 + var_INaK__a1 * var_INaK__a2 * var_INaK__b3 + var_INaK__a2 * var_INaK__b3 * var_INaK__b4 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__x2 = var_INaK__a1 * var_INaK__a2 * var_INaK__a3 + var_INaK__a2 * var_INaK__a3 * var_INaK__b4 + var_INaK__a3 * var_INaK__b1 * var_INaK__b4 + var_INaK__b1 * var_INaK__b2 * var_INaK__b4; // dimensionless
        const double var_INaK__x3 = var_INaK__a2 * var_INaK__a3 * var_INaK__a4 + var_INaK__a3 * var_INaK__a4 * var_INaK__b1 + var_INaK__a4 * var_INaK__b1 * var_INaK__b2 + var_INaK__b1 * var_INaK__b2 * var_INaK__b3; // dimensionless
        const double var_INaK__x4 = var_INaK__a1 * var_INaK__a3 * var_INaK__a4 + var_INaK__a1 * var_INaK__a4 * var_INaK__b2 + var_INaK__a1 * var_INaK__b2 * var_INaK__b3 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__E1 = var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E2 = var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E3 = var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E4 = var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__JnakK = 2.0 * var_INaK__E4 * var_INaK__b1 - 2.0 * var_INaK__E3 * var_INaK__a1; // millimolar_per_millisecond
        const double var_INaK__JnakNa = 3.0 * var_INaK__E1 * var_INaK__a3 - 3.0 * var_INaK__E2 * var_INaK__b3; // millimolar_per_millisecond
        const double var_physical_constants__zca = 2.0; // dimensionless
        const double var_physical_constants__zk = 1.0; // dimensionless
        const double var_physical_constants__zna = 1.0; // dimensionless
        const double var_INaCa_i__INaCa_i = 0.80000000000000004 * (var_INaCa_i__JncxCa_i * var_physical_constants__zca + var_INaCa_i__JncxNa_i * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_i; // microA_per_microF
        const double var_INaCa_i__INaCa_i_converted = HeartConfig::Instance()->GetCapacitance() * var_INaCa_i__INaCa_i; // uA_per_cm2
        const double var_INaCa_i__INaCa_ss = 0.20000000000000001 * (var_INaCa_i__JncxCa_ss * var_physical_constants__zca + var_INaCa_i__JncxNa_ss * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_ss; // microA_per_microF
        const double var_INaCa_i__INaCa_ss_converted = HeartConfig::Instance()->GetCapacitance() * var_INaCa_i__INaCa_ss; // uA_per_cm2
        const double var_INaK__INaK = (var_INaK__JnakK * var_physical_constants__zk + var_INaK__JnakNa * var_physical_constants__zna) * var_INaK__Pnak; // microA_per_microF
        const double var_INaK__INaK_converted = HeartConfig::Instance()->GetCapacitance() * var_INaK__INaK; // uA_per_cm2
        const double var_reversal_potentials__EK = NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__intracellular_ions__ki) / NV_Ith_S(mParameters, 6); // mV
        const double var_IK1__IK1 = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IK1__GK1_total * var_IK1__rk1 * var_chaste_interface__IK1__xk1; // microA_per_microF
        const double var_IK1__IK1_converted = HeartConfig::Instance()->GetCapacitance() * var_IK1__IK1; // uA_per_cm2
        const double var_IKb__IKb = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKb__GKb * var_IKb__xkb; // microA_per_microF
        const double var_IKb__IKb_converted = HeartConfig::Instance()->GetCapacitance() * var_IKb__IKb; // uA_per_cm2
        const double var_IKr__IKr = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKr__GKr_total * var_IKr__rkr * var_IKr__xr; // microA_per_microF
        const double var_IKr__IKr_converted = HeartConfig::Instance()->GetCapacitance() * var_IKr__IKr; // uA_per_cm2
        const double var_reversal_potentials__ENa = NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__intracellular_ions__nai) / NV_Ith_S(mParameters, 6); // mV
        const double var_INa__INa = pow(var_chaste_interface__INa__m, 3) * (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INa__fINap) * var_INa__h * var_chaste_interface__INa__j + var_INa__fINap * var_INa__hp * var_chaste_interface__INa__jp) * NV_Ith_S(mParameters, 12); // microA_per_microF
        const double var_INa__INa_converted = HeartConfig::Instance()->GetCapacitance() * var_INa__INa; // uA_per_cm2
        const double var_INaL__INaL = (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL + var_INaL__fINaLp * var_chaste_interface__INaL__hLp) * var_INaL__GNaL * var_chaste_interface__INaL__mL; // microA_per_microF
        const double var_INaL__INaL_converted = HeartConfig::Instance()->GetCapacitance() * var_INaL__INaL; // uA_per_cm2
        const double var_reversal_potentials__PKNa = 0.018329999999999999; // dimensionless
        const double var_reversal_potentials__EKs = NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 20) * log((NV_Ith_S(mParameters, 5) * var_reversal_potentials__PKNa + NV_Ith_S(mParameters, 4)) / (var_chaste_interface__intracellular_ions__nai * var_reversal_potentials__PKNa + var_chaste_interface__intracellular_ions__ki)) / NV_Ith_S(mParameters, 6); // mV
        const double var_IKs__IKs = (-var_reversal_potentials__EKs + var_chaste_interface__membrane__v) * var_IKs__GKs_total * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2; // microA_per_microF
        const double var_IKs__IKs_converted = HeartConfig::Instance()->GetCapacitance() * var_IKs__IKs; // uA_per_cm2
        const double var_ryr__fJrelp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_ryr__Jrel = ((1.0 - var_ryr__fJrelp) * var_chaste_interface__ryr__Jrelnp + var_chaste_interface__ryr__Jrelp * var_ryr__fJrelp) * NV_Ith_S(mParameters, 1); // millimolar_per_millisecond

        N_Vector dqs = N_VNew_Serial(31);
        NV_Ith_S(dqs, 0) = var_intracellular_ions__C0;
        NV_Ith_S(dqs, 1) = var_SERCA__Jleak;
        NV_Ith_S(dqs, 2) = var_ryr__Jrel;
        NV_Ith_S(dqs, 3) = var_SERCA__Jup;
        NV_Ith_S(dqs, 4) = var_intracellular_ions__V2;
        NV_Ith_S(dqs, 5) = var_intracellular_ions__Bcai;
        NV_Ith_S(dqs, 6) = var_intracellular_ions__Bcass;
        NV_Ith_S(dqs, 7) = var_ICaL__ICaK_converted;
        NV_Ith_S(dqs, 8) = var_ICaL__ICaNa_converted;
        NV_Ith_S(dqs, 9) = var_ICaL__ICaL_converted;
        NV_Ith_S(dqs, 10) = var_ICab__ICab_converted;
        NV_Ith_S(dqs, 11) = var_IKb__IKb_converted;
        NV_Ith_S(dqs, 12) = var_IpCa__IpCa_converted;
        NV_Ith_S(dqs, 13) = var_INa__INa_converted;
        NV_Ith_S(dqs, 14) = var_INa__h;
        NV_Ith_S(dqs, 15) = var_IK1__IK1_converted;
        NV_Ith_S(dqs, 16) = var_IK1__GK1_total;
        NV_Ith_S(dqs, 17) = var_INaL__INaL_converted;
        NV_Ith_S(dqs, 18) = var_INaL__GNaL;
        NV_Ith_S(dqs, 19) = var_IKr__IKr_converted;
        NV_Ith_S(dqs, 20) = var_IKr__GKr_total;
        NV_Ith_S(dqs, 21) = var_IKs__IKs_converted;
        NV_Ith_S(dqs, 22) = var_IKs__GKs_total;
        NV_Ith_S(dqs, 23) = var_INaCa_i__INaCa_i_converted;
        NV_Ith_S(dqs, 24) = var_INaCa_i__INaCa_ss_converted;
        NV_Ith_S(dqs, 25) = var_INaK__INaK_converted;
        NV_Ith_S(dqs, 26) = var_membrane__Istim_converted;
        NV_Ith_S(dqs, 27) = var_Ito__Gto;
        NV_Ith_S(dqs, 28) = var_reversal_potentials__EK;
        NV_Ith_S(dqs, 29) = var_reversal_potentials__ENa;
        NV_Ith_S(dqs, 30) = var_chaste_interface__environment__time;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellohara_rudy_2011_epi_analytic_voltageFromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "ohara_rudy_2011_epi";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0001);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("CaMK__CaMKt");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.0);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("dyadic_space_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.0);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(145.0);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("dyadic_space_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(145.0);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("dyadic_space_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0001);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("NSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.2);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.2);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("INa__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("INa__hf");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("INa__hs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("INa__hsp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("INa__jp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 15):
    this->mVariableNames.push_back("INaL__mL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 16):
    this->mVariableNames.push_back("INaL__hL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 17):
    this->mVariableNames.push_back("INaL__hLp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 18):
    this->mVariableNames.push_back("Ito__a");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 19):
    this->mVariableNames.push_back("Ito__iF");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 20):
    this->mVariableNames.push_back("Ito__iS");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 21):
    this->mVariableNames.push_back("Ito__ap");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 22):
    this->mVariableNames.push_back("Ito__iFp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 23):
    this->mVariableNames.push_back("Ito__iSp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 24):
    this->mVariableNames.push_back("ICaL__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 25):
    this->mVariableNames.push_back("ICaL__ff");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 26):
    this->mVariableNames.push_back("ICaL__fs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 27):
    this->mVariableNames.push_back("ICaL__fcaf");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 28):
    this->mVariableNames.push_back("ICaL__fcas");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 29):
    this->mVariableNames.push_back("ICaL__jca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 30):
    this->mVariableNames.push_back("ICaL__ffp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 31):
    this->mVariableNames.push_back("ICaL__fcafp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 32):
    this->mVariableNames.push_back("ICaL__nca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 33):
    this->mVariableNames.push_back("IKr__xrf");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 34):
    this->mVariableNames.push_back("IKr__xrs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 35):
    this->mVariableNames.push_back("IKs__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 36):
    this->mVariableNames.push_back("IKs__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 37):
    this->mVariableNames.push_back("IK1__xk1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 38):
    this->mVariableNames.push_back("ryr__Jrelnp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 39):
    this->mVariableNames.push_back("ryr__Jrelp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // mParameters[0]:
    this->mParameterNames.push_back("Gamma0");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[1]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[2]:
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[3]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[4]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[5]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[6]:
    this->mParameterNames.push_back("faraday_constant");
    this->mParameterUnits.push_back("coulomb_per_mole");

    // mParameters[7]:
    this->mParameterNames.push_back("gas_constant");
    this->mParameterUnits.push_back("joule_per_kilomole_kelvin");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_background_calcium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_background_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_calcium_pump_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[13]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[14]:
    this->mParameterNames.push_back("membrane_persistent_sodium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[15]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[16]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[17]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[18]:
    this->mParameterNames.push_back("membrane_sodium_potassium_pump_current_permeability");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[19]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[20]:
    this->mParameterNames.push_back("temperature");
    this->mParameterUnits.push_back("kelvin");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("C0");
    this->mDerivedQuantityUnits.push_back("millimolar");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("SR_leak_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_millisecond");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_millisecond");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("SR_uptake_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_millisecond");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_voltage");
    this->mDerivedQuantityUnits.push_back("mV");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("cytosolic_calcium_flux_scaling_from_intrinsic_buffers");
    this->mDerivedQuantityUnits.push_back("dimensionless");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("dyadic_space_calcium_flux_scaling_from_intrinsic_buffers");
    this->mDerivedQuantityUnits.push_back("dimensionless");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_channel_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_channel_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("membrane_background_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [11]:
    this->mDerivedQuantityNames.push_back("membrane_background_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [12]:
    this->mDerivedQuantityNames.push_back("membrane_calcium_pump_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [13]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [14]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mDerivedQuantityUnits.push_back("dimensionless");

    // Derived Quantity index [15]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [16]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mDerivedQuantityUnits.push_back("milliS_per_microF");

    // Derived Quantity index [17]:
    this->mDerivedQuantityNames.push_back("membrane_persistent_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [18]:
    this->mDerivedQuantityNames.push_back("membrane_persistent_sodium_current_conductance");
    this->mDerivedQuantityUnits.push_back("milliS_per_microF");

    // Derived Quantity index [19]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [20]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mDerivedQuantityUnits.push_back("milliS_per_microF");

    // Derived Quantity index [21]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [22]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mDerivedQuantityUnits.push_back("milliS_per_microF");

    // Derived Quantity index [23]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [24]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_dyadic_space_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [25]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_potassium_pump_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [26]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [27]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current_conductance");
    this->mDerivedQuantityUnits.push_back("milliS_per_microF");

    // Derived Quantity index [28]:
    this->mDerivedQuantityNames.push_back("potassium_reversal_potential");
    this->mDerivedQuantityUnits.push_back("mV");

    // Derived Quantity index [29]:
    this->mDerivedQuantityNames.push_back("sodium_reversal_potential");
    this->mDerivedQuantityUnits.push_back("mV");

    // Derived Quantity index [30]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellohara_rudy_2011_epi_analytic_voltageFromCellMLCvode)

#endif // CHASTE_CVODE
