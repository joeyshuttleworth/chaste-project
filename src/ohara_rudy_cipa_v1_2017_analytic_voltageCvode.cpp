#ifdef CHASTE_CVODE
//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: ohara_rudy_cipa_v1_2017
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Wed Jul 22 18:53:39 2020
//! 
//! <autogenerated>

#include "ohara_rudy_cipa_v1_2017Cvode.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"
#include <iostream>
#include <fstream>

/* Constants from CellML */

const double vmyo = 2.583592e-05;
const double vnsr = 2.0972688e-06;
const double vjsr = 1.823712e-07;
const double vss = 7.5988e-07;

const double Acap = 0.0001533576;
const double cm = 1;


std::ofstream output;

    boost::shared_ptr<RegularStimulus> Cellohara_rudy_cipa_v1_2017_analytic_voltageFromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__i_Stim_Start = 10.0; // millisecond
        const double var_chaste_interface__membrane__i_Stim_Period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__i_Stim_PulseDuration = 0.5; // millisecond
        const double var_chaste_interface__membrane__i_Stim_Amplitude =  -80.0 * (HeartConfig::Instance()->GetCapacitance()); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__i_Stim_Amplitude),
                var_chaste_interface__membrane__i_Stim_PulseDuration,
                var_chaste_interface__membrane__i_Stim_Period,
                var_chaste_interface__membrane__i_Stim_Start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    double Cellohara_rudy_cipa_v1_2017_analytic_voltageFromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Cellohara_rudy_cipa_v1_2017_analytic_voltageFromCellMLCvode::Cellohara_rudy_cipa_v1_2017_analytic_voltageFromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                47,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Cellohara_rudy_cipa_v1_2017_analytic_voltageFromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        NV_Ith_S(this->mParameters, 0) = 0.0001007; // (c,ICaL__PCa_b) [dimensionless]
    }
    
    Cellohara_rudy_cipa_v1_2017_analytic_voltageFromCellMLCvode::~Cellohara_rudy_cipa_v1_2017_analytic_voltageFromCellMLCvode()
    {
    }

void Cellohara_rudy_cipa_v1_2017_analytic_voltageFromCellMLCvode::SetIntegrationConstant(double voltage){
 std::vector<double> state_vars = GetStdVecStateVariables();
  const double BSRmax = 0.047;
  const double KmBSR = 0.00087;
  const double KmBSL = 0.0087;
  const double BSLmax = 1.124;
  const double cmdnmax = 0.05;
  const double kmcmdn  = 0.00238;
  const double faradays_constant = 96485;
  const double trpnmax = 0.07;
  const double kmtrpn = 0.0005;
  const double csqnmax = 10;
  const double kmcsqn = 0.8;

  const double cai = state_vars[0];
  const double cass = state_vars[6];
  const double cajsr = state_vars[8];

  const double cai_tot = cai*(1+cmdnmax/(cai+kmcmdn)+trpnmax/(cai+kmtrpn));
  const double cass_tot = cass*(1+BSRmax/(cass+KmBSR)+BSLmax/(cass+KmBSL));
  const double cajsr_tot = cajsr*(1+csqnmax/(cajsr+kmcsqn));


  const double ki = state_vars[4]; // 144.6555918;
  const double nai = state_vars[2];//7.268004498;
  const double nass = state_vars[3];//7.268004498;
  // const double cai_tot = 0.0121027520600993;
  const double kss = state_vars[5];
  // const double cass_tot = 0.0151263470082538;
  // const double cajsr_tot = 8.19746324621951;
  const double cansr = state_vars[7];//1.619574538;
  mIntegrationConstant = ki+nai+2*cai_tot+(kss+nass+2*cass_tot)*vss/vmyo+2*cajsr_tot*vjsr/vmyo+2*cansr*vnsr/vmyo - voltage*Acap*cm/(faradays_constant*vmyo);
  std::cout.precision(18);
  std::cout << "Integration Constant is " << mIntegrationConstant << "\n";
  return;
}

double Cellohara_rudy_cipa_v1_2017_analytic_voltageFromCellMLCvode::CalculateAnalyticVoltage(){
  std::vector<double> state_vars = GetStdVecStateVariables();
  const double vmyo = 2.583592e-05;
  const double vnsr = 2.0972688e-06;
  const double vjsr = 1.823712e-07;
  const double vss = 7.5988e-07;

  const double Acap = 0.0001533576;
  const double cm = 1;

  const double BSRmax = 0.047;
  const double KmBSR = 0.00087;
  const double KmBSL = 0.0087;
  const double BSLmax = 1.124;
  const double cmdnmax = 0.05;
  const double kmcmdn  = 0.00238;
  const double faradays_constant = 96485;
  const double trpnmax = 0.07;
  const double kmtrpn = 0.0005;
  const double csqnmax = 10;
  const double kmcsqn = 0.8;

  const double cai = state_vars[0];
  const double cass = state_vars[6];
  const double cajsr = state_vars[8];

  const double cai_tot = cai*(1+cmdnmax/(cai+kmcmdn)+trpnmax/(cai+kmtrpn));
  const double cass_tot = cass*(1+BSRmax/(cass+KmBSR)+BSLmax/(cass+KmBSL));
  const double cajsr_tot = cajsr*(1+csqnmax/(cajsr+kmcsqn));


  const double ki = state_vars[4]; // 144.6555918;
  const double nai = state_vars[2];//7.268004498;
  const double nass = state_vars[3];//7.268004498;
  // const double cai_tot = 0.0121027520600993;
  const double kss = state_vars[5];
  // const double cass_tot = 0.0151263470082538;
  // const double cajsr_tot = 8.19746324621951;
  const double cansr = state_vars[7];//1.619574538;

  double analytic_voltage = faradays_constant*vmyo*(ki+nai+2*cai_tot+(kss+nass+2*cass_tot)*vss/vmyo+2*cajsr_tot*vjsr/vmyo+2*cansr*vnsr/vmyo - mIntegrationConstant) /(Acap*cm);

  if(!output.is_open()){
    output.open("/tmp/joey/voltageplot.dat");
    output << "analytic_voltage\n";
  }

  if(std::abs(analytic_voltage) < 1000)
    output << analytic_voltage << "\n";
  else{
    // std::cout << "here\n";
    // analytic_voltage = -87.3;
  }
  output.flush();

  // std::cout << analytic_voltage << " " << GetStdVecStateVariables()[0] << "\n";
  // SetVoltage(analytic_voltage);

  // return (std::abs(analytic_voltage) < 1000)? analytic_voltage : -87.3;
  return analytic_voltage;
}

    double Cellohara_rudy_cipa_v1_2017_analytic_voltageFromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }

        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : CalculateAnalyticVoltage());
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__intracellular_ions__cai = NV_Ith_S(rY, 0);
        // Units: millimolar; Initial value: 8.6e-05
        double var_chaste_interface__CaMK__CaMKt = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0125840447
        double var_chaste_interface__intracellular_ions__nai = NV_Ith_S(rY, 2);
        // Units: millimolar; Initial value: 7.268004498
        double var_chaste_interface__intracellular_ions__nass = NV_Ith_S(rY, 3);
        // Units: millimolar; Initial value: 7.268089977
        double var_chaste_interface__intracellular_ions__ki = NV_Ith_S(rY, 4);
        // Units: millimolar; Initial value: 144.6555918
        double var_chaste_interface__intracellular_ions__kss = NV_Ith_S(rY, 5);
        // Units: millimolar; Initial value: 144.6555651
        double var_chaste_interface__intracellular_ions__cass = NV_Ith_S(rY, 6);
        // Units: millimolar; Initial value: 8.49e-05
        double var_chaste_interface__INa__m = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.007344121102
        double var_chaste_interface__INa__hf = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.6981071913
        double var_chaste_interface__INa__hs = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.6980895801
        double var_chaste_interface__INa__j = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.6979908432
        double var_chaste_interface__INa__hsp = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.4549485525
        double var_chaste_interface__INa__jp = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.6979245865
        double var_chaste_interface__INaL__mL = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.0001882617273
        double var_chaste_interface__INaL__hL = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.5008548855
        double var_chaste_interface__INaL__hLp = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 0.2693065357
        double var_chaste_interface__Ito__a = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.001001097687
        double var_chaste_interface__Ito__iF = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 0.9995541745
        double var_chaste_interface__Ito__iS = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.5865061736
        double var_chaste_interface__Ito__ap = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.0005100862934
        double var_chaste_interface__Ito__iFp = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.9995541823
        double var_chaste_interface__Ito__iSp = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.6393399482
        double var_chaste_interface__ICaL__d = NV_Ith_S(rY, 24);
        // Units: dimensionless; Initial value: 2.34e-9
        double var_chaste_interface__ICaL__ff = NV_Ith_S(rY, 25);
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fs = NV_Ith_S(rY, 26);
        // Units: dimensionless; Initial value: 0.9102412777
        double var_chaste_interface__ICaL__fcaf = NV_Ith_S(rY, 27);
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcas = NV_Ith_S(rY, 28);
        // Units: dimensionless; Initial value: 0.9998046777
        double var_chaste_interface__ICaL__jca = NV_Ith_S(rY, 29);
        // Units: dimensionless; Initial value: 0.9999738312
        double var_chaste_interface__ICaL__ffp = NV_Ith_S(rY, 30);
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcafp = NV_Ith_S(rY, 31);
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__nca = NV_Ith_S(rY, 32);
        // Units: dimensionless; Initial value: 0.002749414044
        double var_chaste_interface__IKr__O = NV_Ith_S(rY, 37);
        // Units: dimensionless; Initial value: 0.00015551
        double var_chaste_interface__IKs__xs1 = NV_Ith_S(rY, 42);
        // Units: dimensionless; Initial value: 0.2707758025
        double var_chaste_interface__IKs__xs2 = NV_Ith_S(rY, 43);
        // Units: dimensionless; Initial value: 0.0001928503426
        double var_chaste_interface__IK1__xk1 = NV_Ith_S(rY, 44);
        // Units: dimensionless; Initial value: 0.9967597594

        const double var_extracellular__nao = 140.0; // millimolar
        const double var_extracellular__cao = 1.8; // millimolar
        const double var_extracellular__ko = 5.4000000000000004; // millimolar
        const double var_membrane__vfrt = var_chaste_interface__membrane__v * 0.037435883507802616; // dimensionless
        const double var_INa__GNa = 75.0; // milliS_per_microF
        const double var_INa__h = (0.98999999999999999 * var_chaste_interface__INa__hf) + (0.010000000000000009 * var_chaste_interface__INa__hs); // dimensionless
        const double var_reversal_potentials__ENa = 26.712338705498265 * log(var_extracellular__nao / var_chaste_interface__intracellular_ions__nai); // millivolt
        const double var_CaMK__CaMKb = (0.050000000000000003 * (1.0 - var_chaste_interface__CaMK__CaMKt)) / (1.0 + (0.0015 / var_chaste_interface__intracellular_ions__cass)); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_INa__fINap = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_INa__INa = var_INa__GNa * (var_chaste_interface__membrane__v - var_reversal_potentials__ENa) * pow(var_chaste_interface__INa__m, 3.0) * (((1.0 - var_INa__fINap) * var_INa__h * var_chaste_interface__INa__j) + (var_INa__fINap * ((0.98999999999999999 * var_chaste_interface__INa__hf) + (0.010000000000000009 * var_chaste_interface__INa__hsp)) * var_chaste_interface__INa__jp)); // microA_per_microF
        const double var_INaL__fINaLp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_INaL__GNaL_b = 0.019957499999999975; // milliS_per_microF
        const double var_INaL__INaL = var_INaL__GNaL_b * (var_chaste_interface__membrane__v - var_reversal_potentials__ENa) * var_chaste_interface__INaL__mL * (((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL) + (var_INaL__fINaLp * var_chaste_interface__INaL__hLp)); // microA_per_microF
        const double var_reversal_potentials__EK = 26.712338705498265 * log(var_extracellular__ko / var_chaste_interface__intracellular_ions__ki); // millivolt
        const double var_Ito__Gto_b = 0.02; // milliS_per_microF
        const double var_Ito__AiF = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v - 213.59999999999999) * 0.0066137566137566143)); // dimensionless
        const double var_Ito__AiS = 1.0 - var_Ito__AiF; // dimensionless
        const double var_Ito__fItop = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_Ito__Ito = var_Ito__Gto_b * (var_chaste_interface__membrane__v - var_reversal_potentials__EK) * (((1.0 - var_Ito__fItop) * var_chaste_interface__Ito__a * ((var_Ito__AiF * var_chaste_interface__Ito__iF) + (var_Ito__AiS * var_chaste_interface__Ito__iS))) + (var_Ito__fItop * var_chaste_interface__Ito__ap * ((var_Ito__AiF * var_chaste_interface__Ito__iFp) + (var_Ito__AiS * var_chaste_interface__Ito__iSp)))); // microA_per_microF
        const double var_ICaL__fICaLp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_ICaL__Afcaf = 0.29999999999999999 + (0.59999999999999998 / (1.0 + exp((var_chaste_interface__membrane__v - 10.0) * 0.10000000000000001))); // dimensionless
        const double var_ICaL__Afcas = 1.0 - var_ICaL__Afcaf; // dimensionless
        const double var_ICaL__fcap = (var_ICaL__Afcaf * var_chaste_interface__ICaL__fcafp) + (var_ICaL__Afcas * var_chaste_interface__ICaL__fcas); // dimensionless
        const double var_ICaL__PCa = NV_Ith_S(mParameters, 0); // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__fp = (0.59999999999999998 * var_chaste_interface__ICaL__ffp) + (0.40000000000000002 * var_chaste_interface__ICaL__fs); // dimensionless
        const double var_ICaL__A_1 = (((var_chaste_interface__intracellular_ions__cass * exp(2.0 * var_membrane__vfrt)) - (0.34100000000000003 * var_extracellular__cao)) * 14448.004881001341) * 13.356169352749133; // dimensionless
        const double var_ICaL__U_1 = 0.074871767015605231 * (var_chaste_interface__membrane__v - 0.0); // dimensionless
        const double var_ICaL__PhiCaL = (( -9.9999999999999995e-08 <= var_ICaL__U_1) && (var_ICaL__U_1 <= 9.9999999999999995e-08)) ? (var_ICaL__A_1 * (1.0 - (0.5 * var_ICaL__U_1))) : ((var_ICaL__A_1 * var_ICaL__U_1) / (exp(var_ICaL__U_1) - 1.0)); // dimensionless
        const double var_ICaL__f = (0.59999999999999998 * var_chaste_interface__ICaL__ff) + (0.40000000000000002 * var_chaste_interface__ICaL__fs); // dimensionless
        const double var_ICaL__fca = (var_ICaL__Afcaf * var_chaste_interface__ICaL__fcaf) + (var_ICaL__Afcas * var_chaste_interface__ICaL__fcas); // dimensionless
        const double var_ICaL__ICaL = ((1.0 - var_ICaL__fICaLp) * var_ICaL__PCa * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * var_ICaL__PCap * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_ICaL__A_2 = (((var_chaste_interface__intracellular_ions__nass * exp(var_membrane__vfrt)) - var_extracellular__nao) * 2709.0009151877516) * 26.712338705498265; // dimensionless
        const double var_ICaL__U_2 = 0.037435883507802616 * (var_chaste_interface__membrane__v - 0.0); // dimensionless
        const double var_ICaL__PhiCaNa = (( -9.9999999999999995e-08 <= var_ICaL__U_2) && (var_ICaL__U_2 <= 9.9999999999999995e-08)) ? (var_ICaL__A_2 * (1.0 - (0.5 * var_ICaL__U_2))) : ((var_ICaL__A_2 * var_ICaL__U_2) / (exp(var_ICaL__U_2) - 1.0)); // dimensionless
        const double var_ICaL__ICaNa = ((1.0 - var_ICaL__fICaLp) * (0.00125 * var_ICaL__PCa) * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * (0.00125 * var_ICaL__PCap) * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_ICaL__A_3 = (((var_chaste_interface__intracellular_ions__kss * exp(var_membrane__vfrt)) - var_extracellular__ko) * 2709.0009151877516) * 26.712338705498265; // dimensionless
        const double var_ICaL__U_3 = 0.037435883507802616 * (var_chaste_interface__membrane__v - 0.0); // dimensionless
        const double var_ICaL__PhiCaK = (( -9.9999999999999995e-08 <= var_ICaL__U_3) && (var_ICaL__U_3 <= 9.9999999999999995e-08)) ? (var_ICaL__A_3 * (1.0 - (0.5 * var_ICaL__U_3))) : ((var_ICaL__A_3 * var_ICaL__U_3) / (exp(var_ICaL__U_3) - 1.0)); // dimensionless
        const double var_ICaL__ICaK = ((1.0 - var_ICaL__fICaLp) * (0.00035740000000000001 * var_ICaL__PCa) * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * (0.00035740000000000001 * var_ICaL__PCap) * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_IKr__GKr_b = 0.046585454545454562; // milliS_per_microF
        const double var_IKr__IKr = var_IKr__GKr_b * sqrt(var_extracellular__ko * 0.18518518518518517) * var_chaste_interface__IKr__O * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_IKs__GKs_b = 0.0063580000000000008; // milliS_per_microF
        const double var_IKs__IKs = var_IKs__GKs_b * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_chaste_interface__intracellular_ions__cai, 1.3999999999999999)))) * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2 * (var_chaste_interface__membrane__v - (26.712338705498265 * log((var_extracellular__ko + (0.018329999999999999 * var_extracellular__nao)) / (var_chaste_interface__intracellular_ions__ki + (0.018329999999999999 * var_chaste_interface__intracellular_ions__nai))))); // microA_per_microF
        const double var_IK1__GK1_b = 0.32397839999999978; // milliS_per_microF
        const double var_IK1__IK1 = var_IK1__GK1_b * sqrt(var_extracellular__ko) * (1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 105.8) - (2.6000000000000001 * var_extracellular__ko)) * 0.10534077741493732))) * var_chaste_interface__IK1__xk1 * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_INaCa_i__hna = exp((var_chaste_interface__membrane__v * 50403.763999999996) * 3.8799692706433766e-07); // dimensionless
        const double var_INaCa_i__h1_i = 1.0 + ((var_chaste_interface__intracellular_ions__nai * 0.011348161597821153) * (1.0 + var_INaCa_i__hna)); // dimensionless
        const double var_INaCa_i__h2_i = (var_chaste_interface__intracellular_ions__nai * var_INaCa_i__hna) / (88.120000000000005 * var_INaCa_i__h1_i); // dimensionless
        const double var_INaCa_i__k4pp_i = var_INaCa_i__h2_i * 5000.0; // dimensionless
        const double var_INaCa_i__h4_i = 1.0 + ((var_chaste_interface__intracellular_ions__nai * 0.066666666666666666) * (1.0 + (var_chaste_interface__intracellular_ions__nai * 0.20000000000000001))); // dimensionless
        const double var_INaCa_i__k7_i = ((var_chaste_interface__intracellular_ions__nai * var_chaste_interface__intracellular_ions__nai) / (var_INaCa_i__h4_i * 75.0)) * var_INaCa_i__h2_i * 60000.0; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + ((var_extracellular__nao * 0.011348161597821153) * (1.0 + (1.0 / var_INaCa_i__hna))); // dimensionless
        const double var_INaCa_i__h8_i = var_extracellular__nao / (88.120000000000005 * var_INaCa_i__hna * var_INaCa_i__h7_i); // dimensionless
        const double var_INaCa_i__k3pp_i = var_INaCa_i__h8_i * 5000.0; // dimensionless
        const double var_INaCa_i__h10_i = ((var_extracellular__nao * 0.066666666666666666) * (1.0 + (var_extracellular__nao * 0.20000000000000001))) + 13.5; // dimensionless
        const double var_INaCa_i__k8_i = var_INaCa_i__h8_i * ((var_extracellular__nao * var_extracellular__nao) / (var_INaCa_i__h10_i * 75.0)) * 60000.0; // dimensionless
        const double var_INaCa_i__k1_i = (1.0 / var_INaCa_i__h10_i) * var_extracellular__cao * 1500000.0; // dimensionless
        const double var_INaCa_i__hca = exp((var_chaste_interface__membrane__v * 16112.995000000001) * 3.8799692706433766e-07); // dimensionless
        const double var_INaCa_i__k4_i = (((1.0 / var_INaCa_i__h1_i) * 60000.0) / var_INaCa_i__hca) + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k3_i = ((1.0 / var_INaCa_i__h7_i) * 60000.0) + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__x4_i = (5000.0 * var_INaCa_i__k8_i * (var_INaCa_i__k4_i + 5000.0)) + (var_INaCa_i__k3_i * 5000.0 * (var_INaCa_i__k1_i + var_INaCa_i__k8_i)); // dimensionless
        const double var_INaCa_i__k6_i = (1.0 / var_INaCa_i__h4_i) * var_chaste_interface__intracellular_ions__cai * 1500000.0; // dimensionless
        const double var_INaCa_i__x3_i = (var_INaCa_i__k1_i * var_INaCa_i__k3_i * (var_INaCa_i__k7_i + var_INaCa_i__k6_i)) + (var_INaCa_i__k8_i * var_INaCa_i__k6_i * (5000.0 + var_INaCa_i__k3_i)); // dimensionless
        const double var_INaCa_i__x2_i = (var_INaCa_i__k1_i * var_INaCa_i__k7_i * (var_INaCa_i__k4_i + 5000.0)) + (var_INaCa_i__k4_i * var_INaCa_i__k6_i * (var_INaCa_i__k1_i + var_INaCa_i__k8_i)); // dimensionless
        const double var_INaCa_i__x1_i = (5000.0 * var_INaCa_i__k4_i * (var_INaCa_i__k7_i + var_INaCa_i__k6_i)) + (5000.0 * var_INaCa_i__k7_i * (5000.0 + var_INaCa_i__k3_i)); // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__Gncx_b = 0.00080000000000000004; // milliS_per_microF
        const double var_INaCa_i__Gncx = var_INaCa_i__Gncx_b; // milliS_per_microF
        const double var_INaCa_i__INaCa_i = 0.80000000000000004 * var_INaCa_i__Gncx * (1.0 / (1.0 + pow(0.00014999999999999999 / var_chaste_interface__intracellular_ions__cai, 2.0))) * ((1.0 * (((3.0 * (((var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i)) * var_INaCa_i__k7_i) - (var_INaCa_i__E1_i * var_INaCa_i__k8_i))) + ((var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i)) * var_INaCa_i__k4pp_i)) - (var_INaCa_i__E2_i * var_INaCa_i__k3pp_i))) + (2.0 * ((var_INaCa_i__E2_i * 5000.0) - (var_INaCa_i__E1_i * var_INaCa_i__k1_i)))); // microA_per_microF
        const double var_INaCa_i__h1_ss = 1.0 + ((var_chaste_interface__intracellular_ions__nass * 0.011348161597821153) * (1.0 + var_INaCa_i__hna)); // dimensionless
        const double var_INaCa_i__h2_ss = (var_chaste_interface__intracellular_ions__nass * var_INaCa_i__hna) / (88.120000000000005 * var_INaCa_i__h1_ss); // dimensionless
        const double var_INaCa_i__k4pp_ss = var_INaCa_i__h2_ss * 5000.0; // dimensionless
        const double var_INaCa_i__k4_ss = (((1.0 / var_INaCa_i__h1_ss) * 60000.0) / var_INaCa_i__hca) + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__h10_ss = ((var_extracellular__nao * 0.066666666666666666) * (1.0 + (var_extracellular__nao * 0.20000000000000001))) + 13.5; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + ((var_extracellular__nao * 0.011348161597821153) * (1.0 + (1.0 / var_INaCa_i__hna))); // dimensionless
        const double var_INaCa_i__h8_ss = var_extracellular__nao / (88.120000000000005 * var_INaCa_i__hna * var_INaCa_i__h7_ss); // dimensionless
        const double var_INaCa_i__k8_ss = var_INaCa_i__h8_ss * ((var_extracellular__nao * var_extracellular__nao) / (var_INaCa_i__h10_ss * 75.0)) * 60000.0; // dimensionless
        const double var_INaCa_i__h4_ss = 1.0 + ((var_chaste_interface__intracellular_ions__nass * 0.066666666666666666) * (1.0 + (var_chaste_interface__intracellular_ions__nass * 0.20000000000000001))); // dimensionless
        const double var_INaCa_i__k6_ss = (1.0 / var_INaCa_i__h4_ss) * var_chaste_interface__intracellular_ions__cass * 1500000.0; // dimensionless
        const double var_INaCa_i__k1_ss = (1.0 / var_INaCa_i__h10_ss) * var_extracellular__cao * 1500000.0; // dimensionless
        const double var_INaCa_i__k7_ss = ((var_chaste_interface__intracellular_ions__nass * var_chaste_interface__intracellular_ions__nass) / (var_INaCa_i__h4_ss * 75.0)) * var_INaCa_i__h2_ss * 60000.0; // dimensionless
        const double var_INaCa_i__x2_ss = (var_INaCa_i__k1_ss * var_INaCa_i__k7_ss * (var_INaCa_i__k4_ss + 5000.0)) + (var_INaCa_i__k4_ss * var_INaCa_i__k6_ss * (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss)); // dimensionless
        const double var_INaCa_i__k3pp_ss = var_INaCa_i__h8_ss * 5000.0; // dimensionless
        const double var_INaCa_i__k3_ss = ((1.0 / var_INaCa_i__h7_ss) * 60000.0) + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__x3_ss = (var_INaCa_i__k1_ss * var_INaCa_i__k3_ss * (var_INaCa_i__k7_ss + var_INaCa_i__k6_ss)) + (var_INaCa_i__k8_ss * var_INaCa_i__k6_ss * (5000.0 + var_INaCa_i__k3_ss)); // dimensionless
        const double var_INaCa_i__x1_ss = (5000.0 * var_INaCa_i__k4_ss * (var_INaCa_i__k7_ss + var_INaCa_i__k6_ss)) + (5000.0 * var_INaCa_i__k7_ss * (5000.0 + var_INaCa_i__k3_ss)); // dimensionless
        const double var_INaCa_i__x4_ss = (5000.0 * var_INaCa_i__k8_ss * (var_INaCa_i__k4_ss + 5000.0)) + (var_INaCa_i__k3_ss * 5000.0 * (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss)); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__INaCa_ss = 0.20000000000000001 * var_INaCa_i__Gncx * (1.0 / (1.0 + pow(0.00014999999999999999 / var_chaste_interface__intracellular_ions__cass, 2.0))) * ((1.0 * (((3.0 * (((var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss)) * var_INaCa_i__k7_ss) - (var_INaCa_i__E1_ss * var_INaCa_i__k8_ss))) + ((var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss)) * var_INaCa_i__k4pp_ss)) - (var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss))) + (2.0 * ((var_INaCa_i__E2_ss * 5000.0) - (var_INaCa_i__E1_ss * var_INaCa_i__k1_ss)))); // microA_per_microF
        const double var_INaK__Pnak_b = 30.0; // milliS_per_microF
        const double var_INaK__b3 = ((4.2000000000000002 / ((var_chaste_interface__intracellular_ions__nai * 0.004464285714285714) + (var_chaste_interface__intracellular_ions__ki * 0.0034246575342465752) + 1.5889281507656066)) * 0.0079299999999999995) * 1.732653031203624e-08; // dimensionless
        const double var_INaK__Knao = 27.780000000000001 * exp((var_chaste_interface__membrane__v * 111440.175) * 1.2933230902144589e-07); // millimolar
        const double var_INaK__a3 = (1899.0 * pow(var_extracellular__ko * 2.7917364600781687, 2.0)) / ((pow(1.0 + (var_extracellular__nao / var_INaK__Knao), 3.0) + pow(1.0 + (var_extracellular__ko * 2.7917364600781687), 2.0)) - 1.0); // dimensionless
        const double var_INaK__b2 = (39.399999999999999 * pow(var_extracellular__nao / var_INaK__Knao, 3.0)) / ((pow(1.0 + (var_extracellular__nao / var_INaK__Knao), 3.0) + pow(1.0 + (var_extracellular__ko * 2.7917364600781687), 2.0)) - 1.0); // dimensionless
        const double var_INaK__x3 = (var_INaK__a3 * 439120.79239156022) + (var_INaK__b3 * var_INaK__b2 * 9.120000000000001) + (var_INaK__b2 * 5827.679899026527) + (var_INaK__a3 * 5827.679899026527); // dimensionless
        const double var_INaK__Knai = 9.0730000000000004 * exp((var_chaste_interface__membrane__v *  -14955.174999999999) * 1.2933230902144589e-07); // millimolar
        const double var_INaK__b4 = (40.0 * pow(var_chaste_interface__intracellular_ions__ki * 2.0, 2.0)) / ((pow(1.0 + (var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3.0) + pow(1.0 + (var_chaste_interface__intracellular_ions__ki * 2.0), 2.0)) - 1.0); // dimensionless
        const double var_INaK__a1 = (949.5 * pow(var_chaste_interface__intracellular_ions__nai / var_INaK__Knai, 3.0)) / ((pow(1.0 + (var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3.0) + pow(1.0 + (var_chaste_interface__intracellular_ions__ki * 2.0), 2.0)) - 1.0); // dimensionless
        const double var_INaK__x2 = (var_INaK__b2 * 9.120000000000001 * var_INaK__b4) + (var_INaK__a1 * 687.20000000000005 * var_INaK__a3) + (var_INaK__a3 * 9.120000000000001 * var_INaK__b4) + (687.20000000000005 * var_INaK__a3 * var_INaK__b4); // dimensionless
        const double var_INaK__x1 = (var_INaK__a1 * 439120.79239156022) + (var_INaK__b2 * var_INaK__b4 * var_INaK__b3) + (687.20000000000005 * var_INaK__b4 * var_INaK__b3) + (var_INaK__b3 * var_INaK__a1 * 687.20000000000005); // dimensionless
        const double var_INaK__x4 = (var_INaK__b4 * var_INaK__b3 * var_INaK__b2) + (var_INaK__a3 * 638.99998892834719 * var_INaK__a1) + (var_INaK__b2 * 638.99998892834719 * var_INaK__a1) + (var_INaK__b3 * var_INaK__b2 * var_INaK__a1); // dimensionless
        const double var_INaK__INaK = var_INaK__Pnak_b * ((1.0 * (3.0 * (((var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__a3) - ((var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__b3)))) + (1.0 * (2.0 * (((var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * 9.120000000000001) - ((var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__a1))))); // microA_per_microF
        const double var_INab__PNab = 3.75e-10; // milliS_per_microF
        const double var_INab__A = (var_INab__PNab * 3612.0012202503353 * ((var_chaste_interface__intracellular_ions__nai * exp(var_membrane__vfrt)) - var_extracellular__nao)) * 26.712338705498265; // microA_per_microF
        const double var_INab__U = 0.037435883507802616 * (var_chaste_interface__membrane__v - 0.0); // dimensionless
        const double var_INab__INab = (( -9.9999999999999995e-08 <= var_INab__U) && (var_INab__U <= 9.9999999999999995e-08)) ? (var_INab__A * (1.0 - (0.5 * var_INab__U))) : ((var_INab__A * var_INab__U) / (exp(var_INab__U) - 1.0)); // microA_per_microF
        const double var_IKb__GKb_b = 0.0030000000000000001; // milliS_per_microF
        const double var_IKb__IKb = var_IKb__GKb_b * (1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v - 14.48)) * 0.054525627044711013))) * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_IpCa__GpCa = 0.00050000000000000001; // milliS_per_microF
        const double var_IpCa__IpCa = (var_IpCa__GpCa * var_chaste_interface__intracellular_ions__cai) / (0.00050000000000000001 + var_chaste_interface__intracellular_ions__cai); // microA_per_microF
        const double var_ICab__U = 0.074871767015605231 * (var_chaste_interface__membrane__v - 0.0); // dimensionless
        const double var_ICab__PCab = 2.4999999999999999e-08; // milliS_per_microF
        const double var_ICab__A = (var_ICab__PCab * ((var_chaste_interface__intracellular_ions__cai * exp(2.0 * var_membrane__vfrt)) - (0.34100000000000003 * var_extracellular__cao)) * 14448.004881001341) * 13.356169352749133; // microA_per_microF
        const double var_ICab__ICab = (( -9.9999999999999995e-08 <= var_ICab__U) && (var_ICab__U <= 9.9999999999999995e-08)) ? (var_ICab__A * (1.0 - (0.5 * var_ICab__U))) : ((var_ICab__A * var_ICab__U) / (exp(var_ICab__U) - 1.0)); // microA_per_microF
        const double var_chaste_interface__ICaL__ICaL = var_ICaL__ICaL; // microA_per_microF
        const double var_chaste_interface__ICab__ICab = var_ICab__ICab; // microA_per_microF
        const double var_chaste_interface__INa__INa = var_INa__INa; // microA_per_microF
        const double var_chaste_interface__ICaL__ICaK = var_ICaL__ICaK; // microA_per_microF
        const double var_chaste_interface__INaL__INaL = var_INaL__INaL; // microA_per_microF
        const double var_chaste_interface__INaCa_i__INaCa_i = var_INaCa_i__INaCa_i; // microA_per_microF
        const double var_chaste_interface__INab__INab = var_INab__INab; // microA_per_microF
        const double var_chaste_interface__IKs__IKs = var_IKs__IKs; // microA_per_microF
        const double var_chaste_interface__INaK__INaK = var_INaK__INaK; // microA_per_microF
        const double var_chaste_interface__IKb__IKb = var_IKb__IKb; // microA_per_microF
        const double var_chaste_interface__ICaL__ICaNa = var_ICaL__ICaNa; // microA_per_microF
        const double var_chaste_interface__IK1__IK1 = var_IK1__IK1; // microA_per_microF
        const double var_chaste_interface__Ito__Ito = var_Ito__Ito; // microA_per_microF
        const double var_chaste_interface__INaCa_i__INaCa_ss = var_INaCa_i__INaCa_ss; // microA_per_microF
        const double var_chaste_interface__IKr__IKr = var_IKr__IKr; // microA_per_microF
        const double var_chaste_interface__IpCa__IpCa = var_IpCa__IpCa; // microA_per_microF
        const double var_chaste_interface__i_ionic = (var_chaste_interface__INa__INa + var_chaste_interface__INaL__INaL + var_chaste_interface__Ito__Ito + var_chaste_interface__ICaL__ICaL + var_chaste_interface__ICaL__ICaNa + var_chaste_interface__ICaL__ICaK + var_chaste_interface__IKr__IKr + var_chaste_interface__IKs__IKs + var_chaste_interface__IK1__IK1 + var_chaste_interface__INaCa_i__INaCa_i + var_chaste_interface__INaCa_i__INaCa_ss + var_chaste_interface__INaK__INaK + var_chaste_interface__INab__INab + var_chaste_interface__IKb__IKb + var_chaste_interface__IpCa__IpCa + var_chaste_interface__ICab__ICab) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Cellohara_rudy_cipa_v1_2017_analytic_voltageFromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        // SetVoltage(CalculateAnalyticVoltage());
        const double analytic_voltage = CalculateAnalyticVoltage();
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : analytic_voltage);  //CalculateAnalyticVoltage());
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__intracellular_ions__cai = NV_Ith_S(rY, 0);
        // Units: millimolar; Initial value: 8.6e-05
        double var_chaste_interface__CaMK__CaMKt = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0125840447
        double var_chaste_interface__intracellular_ions__nai = NV_Ith_S(rY, 2);
        // Units: millimolar; Initial value: 7.268004498
        double var_chaste_interface__intracellular_ions__nass = NV_Ith_S(rY, 3);
        // Units: millimolar; Initial value: 7.268089977
        double var_chaste_interface__intracellular_ions__ki = NV_Ith_S(rY, 4);
        // Units: millimolar; Initial value: 144.6555918
        double var_chaste_interface__intracellular_ions__kss = NV_Ith_S(rY, 5);
        // Units: millimolar; Initial value: 144.6555651
        double var_chaste_interface__intracellular_ions__cass = NV_Ith_S(rY, 6);
        // Units: millimolar; Initial value: 8.49e-05
        double var_chaste_interface__intracellular_ions__cansr = NV_Ith_S(rY, 7);
        // Units: millimolar; Initial value: 1.619574538
        double var_chaste_interface__intracellular_ions__cajsr = NV_Ith_S(rY, 8);
        // Units: millimolar; Initial value: 1.571234014
        double var_chaste_interface__INa__m = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.007344121102
        double var_chaste_interface__INa__hf = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.6981071913
        double var_chaste_interface__INa__hs = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.6980895801
        double var_chaste_interface__INa__j = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.6979908432
        double var_chaste_interface__INa__hsp = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.4549485525
        double var_chaste_interface__INa__jp = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.6979245865
        double var_chaste_interface__INaL__mL = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.0001882617273
        double var_chaste_interface__INaL__hL = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.5008548855
        double var_chaste_interface__INaL__hLp = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 0.2693065357
        double var_chaste_interface__Ito__a = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.001001097687
        double var_chaste_interface__Ito__iF = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 0.9995541745
        double var_chaste_interface__Ito__iS = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.5865061736
        double var_chaste_interface__Ito__ap = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.0005100862934
        double var_chaste_interface__Ito__iFp = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.9995541823
        double var_chaste_interface__Ito__iSp = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.6393399482
        double var_chaste_interface__ICaL__d = NV_Ith_S(rY, 24);
        // Units: dimensionless; Initial value: 2.34e-9
        double var_chaste_interface__ICaL__ff = NV_Ith_S(rY, 25);
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fs = NV_Ith_S(rY, 26);
        // Units: dimensionless; Initial value: 0.9102412777
        double var_chaste_interface__ICaL__fcaf = NV_Ith_S(rY, 27);
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcas = NV_Ith_S(rY, 28);
        // Units: dimensionless; Initial value: 0.9998046777
        double var_chaste_interface__ICaL__jca = NV_Ith_S(rY, 29);
        // Units: dimensionless; Initial value: 0.9999738312
        double var_chaste_interface__ICaL__ffp = NV_Ith_S(rY, 30);
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcafp = NV_Ith_S(rY, 31);
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__nca = NV_Ith_S(rY, 32);
        // Units: dimensionless; Initial value: 0.002749414044
        double var_chaste_interface__IKr__IC1 = NV_Ith_S(rY, 33);
        // Units: dimensionless; Initial value: 0.999637
        double var_chaste_interface__IKr__IC2 = NV_Ith_S(rY, 34);
        // Units: dimensionless; Initial value: 6.83208e-05
        double var_chaste_interface__IKr__C1 = NV_Ith_S(rY, 35);
        // Units: dimensionless; Initial value: 1.80145e-08
        double var_chaste_interface__IKr__C2 = NV_Ith_S(rY, 36);
        // Units: dimensionless; Initial value: 8.26619e-05
        double var_chaste_interface__IKr__O = NV_Ith_S(rY, 37);
        // Units: dimensionless; Initial value: 0.00015551
        double var_chaste_interface__IKr__IO = NV_Ith_S(rY, 38);
        // Units: dimensionless; Initial value: 5.67623e-05
        double var_chaste_interface__IKr__IObound = NV_Ith_S(rY, 39);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__IKr__Obound = NV_Ith_S(rY, 40);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__IKr__Cbound = NV_Ith_S(rY, 41);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__IKs__xs1 = NV_Ith_S(rY, 42);
        // Units: dimensionless; Initial value: 0.2707758025
        double var_chaste_interface__IKs__xs2 = NV_Ith_S(rY, 43);
        // Units: dimensionless; Initial value: 0.0001928503426
        double var_chaste_interface__IK1__xk1 = NV_Ith_S(rY, 44);
        // Units: dimensionless; Initial value: 0.9967597594
        double var_chaste_interface__ryr__Jrelnp = NV_Ith_S(rY, 45);
        // Units: dimensionless; Initial value: 2.5e-7
        double var_chaste_interface__ryr__Jrelp = NV_Ith_S(rY, 46);
        // Units: dimensionless; Initial value: 3.12e-7
        // Mathematics
        double d_dt_chaste_interface__membrane__v;
        const double var_extracellular__nao = 140.0; // millimolar
        const double var_extracellular__cao = 1.8; // millimolar
        const double var_extracellular__ko = 5.4000000000000004; // millimolar
        const double var_membrane__vfrt = var_chaste_interface__membrane__v * 0.037435883507802616; // dimensionless
        const double var_INa__GNa = 75.0; // milliS_per_microF
        const double var_INa__h = (0.98999999999999999 * var_chaste_interface__INa__hf) + (0.010000000000000009 * var_chaste_interface__INa__hs); // dimensionless
        const double var_reversal_potentials__ENa = 26.712338705498265 * log(var_extracellular__nao / var_chaste_interface__intracellular_ions__nai); // millivolt
        const double var_CaMK__CaMKb = (0.050000000000000003 * (1.0 - var_chaste_interface__CaMK__CaMKt)) / (1.0 + (0.0015 / var_chaste_interface__intracellular_ions__cass)); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_INa__fINap = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_INa__INa = var_INa__GNa * (var_chaste_interface__membrane__v - var_reversal_potentials__ENa) * pow(var_chaste_interface__INa__m, 3.0) * (((1.0 - var_INa__fINap) * var_INa__h * var_chaste_interface__INa__j) + (var_INa__fINap * ((0.98999999999999999 * var_chaste_interface__INa__hf) + (0.010000000000000009 * var_chaste_interface__INa__hsp)) * var_chaste_interface__INa__jp)); // microA_per_microF
        const double var_INaL__fINaLp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_INaL__GNaL_b = 0.019957499999999975; // milliS_per_microF
        const double var_INaL__INaL = var_INaL__GNaL_b * (var_chaste_interface__membrane__v - var_reversal_potentials__ENa) * var_chaste_interface__INaL__mL * (((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL) + (var_INaL__fINaLp * var_chaste_interface__INaL__hLp)); // microA_per_microF
        const double var_reversal_potentials__EK = 26.712338705498265 * log(var_extracellular__ko / var_chaste_interface__intracellular_ions__ki); // millivolt
        const double var_Ito__Gto_b = 0.02; // milliS_per_microF
        const double var_Ito__AiF = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v - 213.59999999999999) * 0.0066137566137566143)); // dimensionless
        const double var_Ito__AiS = 1.0 - var_Ito__AiF; // dimensionless
        const double var_Ito__fItop = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_Ito__Ito = var_Ito__Gto_b * (var_chaste_interface__membrane__v - var_reversal_potentials__EK) * (((1.0 - var_Ito__fItop) * var_chaste_interface__Ito__a * ((var_Ito__AiF * var_chaste_interface__Ito__iF) + (var_Ito__AiS * var_chaste_interface__Ito__iS))) + (var_Ito__fItop * var_chaste_interface__Ito__ap * ((var_Ito__AiF * var_chaste_interface__Ito__iFp) + (var_Ito__AiS * var_chaste_interface__Ito__iSp)))); // microA_per_microF
        const double var_ICaL__fICaLp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_ICaL__Afcaf = 0.29999999999999999 + (0.59999999999999998 / (1.0 + exp((var_chaste_interface__membrane__v - 10.0) * 0.10000000000000001))); // dimensionless
        const double var_ICaL__Afcas = 1.0 - var_ICaL__Afcaf; // dimensionless
        const double var_ICaL__fcap = (var_ICaL__Afcaf * var_chaste_interface__ICaL__fcafp) + (var_ICaL__Afcas * var_chaste_interface__ICaL__fcas); // dimensionless
        const double var_ICaL__PCa = NV_Ith_S(mParameters, 0); // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__fp = (0.59999999999999998 * var_chaste_interface__ICaL__ffp) + (0.40000000000000002 * var_chaste_interface__ICaL__fs); // dimensionless
        const double var_ICaL__A_1 = (((var_chaste_interface__intracellular_ions__cass * exp(2.0 * var_membrane__vfrt)) - (0.34100000000000003 * var_extracellular__cao)) * 14448.004881001341) * 13.356169352749133; // dimensionless
        const double var_ICaL__U_1 = 0.074871767015605231 * (var_chaste_interface__membrane__v - 0.0); // dimensionless
        const double var_ICaL__PhiCaL = (( -9.9999999999999995e-08 <= var_ICaL__U_1) && (var_ICaL__U_1 <= 9.9999999999999995e-08)) ? (var_ICaL__A_1 * (1.0 - (0.5 * var_ICaL__U_1))) : ((var_ICaL__A_1 * var_ICaL__U_1) / (exp(var_ICaL__U_1) - 1.0)); // dimensionless
        const double var_ICaL__f = (0.59999999999999998 * var_chaste_interface__ICaL__ff) + (0.40000000000000002 * var_chaste_interface__ICaL__fs); // dimensionless
        const double var_ICaL__fca = (var_ICaL__Afcaf * var_chaste_interface__ICaL__fcaf) + (var_ICaL__Afcas * var_chaste_interface__ICaL__fcas); // dimensionless
        const double var_ICaL__ICaL = ((1.0 - var_ICaL__fICaLp) * var_ICaL__PCa * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * var_ICaL__PCap * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_ICaL__A_2 = (((var_chaste_interface__intracellular_ions__nass * exp(var_membrane__vfrt)) - var_extracellular__nao) * 2709.0009151877516) * 26.712338705498265; // dimensionless
        const double var_ICaL__U_2 = 0.037435883507802616 * (var_chaste_interface__membrane__v - 0.0); // dimensionless
        const double var_ICaL__PhiCaNa = (( -9.9999999999999995e-08 <= var_ICaL__U_2) && (var_ICaL__U_2 <= 9.9999999999999995e-08)) ? (var_ICaL__A_2 * (1.0 - (0.5 * var_ICaL__U_2))) : ((var_ICaL__A_2 * var_ICaL__U_2) / (exp(var_ICaL__U_2) - 1.0)); // dimensionless
        const double var_ICaL__ICaNa = ((1.0 - var_ICaL__fICaLp) * (0.00125 * var_ICaL__PCa) * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * (0.00125 * var_ICaL__PCap) * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_ICaL__A_3 = (((var_chaste_interface__intracellular_ions__kss * exp(var_membrane__vfrt)) - var_extracellular__ko) * 2709.0009151877516) * 26.712338705498265; // dimensionless
        const double var_ICaL__U_3 = 0.037435883507802616 * (var_chaste_interface__membrane__v - 0.0); // dimensionless
        const double var_ICaL__PhiCaK = (( -9.9999999999999995e-08 <= var_ICaL__U_3) && (var_ICaL__U_3 <= 9.9999999999999995e-08)) ? (var_ICaL__A_3 * (1.0 - (0.5 * var_ICaL__U_3))) : ((var_ICaL__A_3 * var_ICaL__U_3) / (exp(var_ICaL__U_3) - 1.0)); // dimensionless
        const double var_ICaL__ICaK = ((1.0 - var_ICaL__fICaLp) * (0.00035740000000000001 * var_ICaL__PCa) * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * (0.00035740000000000001 * var_ICaL__PCap) * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_IKr__GKr_b = 0.046585454545454562; // milliS_per_microF
        const double var_IKr__IKr = var_IKr__GKr_b * sqrt(var_extracellular__ko * 0.18518518518518517) * var_chaste_interface__IKr__O * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_IKs__GKs_b = 0.0063580000000000008; // milliS_per_microF
        const double var_IKs__IKs = var_IKs__GKs_b * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_chaste_interface__intracellular_ions__cai, 1.3999999999999999)))) * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2 * (var_chaste_interface__membrane__v - (26.712338705498265 * log((var_extracellular__ko + (0.018329999999999999 * var_extracellular__nao)) / (var_chaste_interface__intracellular_ions__ki + (0.018329999999999999 * var_chaste_interface__intracellular_ions__nai))))); // microA_per_microF
        const double var_IK1__GK1_b = 0.32397839999999978; // milliS_per_microF
        const double var_IK1__IK1 = var_IK1__GK1_b * sqrt(var_extracellular__ko) * (1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 105.8) - (2.6000000000000001 * var_extracellular__ko)) * 0.10534077741493732))) * var_chaste_interface__IK1__xk1 * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_INaCa_i__hna = exp((var_chaste_interface__membrane__v * 50403.763999999996) * 3.8799692706433766e-07); // dimensionless
        const double var_INaCa_i__h1_i = 1.0 + ((var_chaste_interface__intracellular_ions__nai * 0.011348161597821153) * (1.0 + var_INaCa_i__hna)); // dimensionless
        const double var_INaCa_i__h2_i = (var_chaste_interface__intracellular_ions__nai * var_INaCa_i__hna) / (88.120000000000005 * var_INaCa_i__h1_i); // dimensionless
        const double var_INaCa_i__k4pp_i = var_INaCa_i__h2_i * 5000.0; // dimensionless
        const double var_INaCa_i__h4_i = 1.0 + ((var_chaste_interface__intracellular_ions__nai * 0.066666666666666666) * (1.0 + (var_chaste_interface__intracellular_ions__nai * 0.20000000000000001))); // dimensionless
        const double var_INaCa_i__k7_i = ((var_chaste_interface__intracellular_ions__nai * var_chaste_interface__intracellular_ions__nai) / (var_INaCa_i__h4_i * 75.0)) * var_INaCa_i__h2_i * 60000.0; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + ((var_extracellular__nao * 0.011348161597821153) * (1.0 + (1.0 / var_INaCa_i__hna))); // dimensionless
        const double var_INaCa_i__h8_i = var_extracellular__nao / (88.120000000000005 * var_INaCa_i__hna * var_INaCa_i__h7_i); // dimensionless
        const double var_INaCa_i__k3pp_i = var_INaCa_i__h8_i * 5000.0; // dimensionless
        const double var_INaCa_i__h10_i = ((var_extracellular__nao * 0.066666666666666666) * (1.0 + (var_extracellular__nao * 0.20000000000000001))) + 13.5; // dimensionless
        const double var_INaCa_i__k8_i = var_INaCa_i__h8_i * ((var_extracellular__nao * var_extracellular__nao) / (var_INaCa_i__h10_i * 75.0)) * 60000.0; // dimensionless
        const double var_INaCa_i__k1_i = (1.0 / var_INaCa_i__h10_i) * var_extracellular__cao * 1500000.0; // dimensionless
        const double var_INaCa_i__hca = exp((var_chaste_interface__membrane__v * 16112.995000000001) * 3.8799692706433766e-07); // dimensionless
        const double var_INaCa_i__k4_i = (((1.0 / var_INaCa_i__h1_i) * 60000.0) / var_INaCa_i__hca) + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k3_i = ((1.0 / var_INaCa_i__h7_i) * 60000.0) + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__x4_i = (5000.0 * var_INaCa_i__k8_i * (var_INaCa_i__k4_i + 5000.0)) + (var_INaCa_i__k3_i * 5000.0 * (var_INaCa_i__k1_i + var_INaCa_i__k8_i)); // dimensionless
        const double var_INaCa_i__k6_i = (1.0 / var_INaCa_i__h4_i) * var_chaste_interface__intracellular_ions__cai * 1500000.0; // dimensionless
        const double var_INaCa_i__x3_i = (var_INaCa_i__k1_i * var_INaCa_i__k3_i * (var_INaCa_i__k7_i + var_INaCa_i__k6_i)) + (var_INaCa_i__k8_i * var_INaCa_i__k6_i * (5000.0 + var_INaCa_i__k3_i)); // dimensionless
        const double var_INaCa_i__x2_i = (var_INaCa_i__k1_i * var_INaCa_i__k7_i * (var_INaCa_i__k4_i + 5000.0)) + (var_INaCa_i__k4_i * var_INaCa_i__k6_i * (var_INaCa_i__k1_i + var_INaCa_i__k8_i)); // dimensionless
        const double var_INaCa_i__x1_i = (5000.0 * var_INaCa_i__k4_i * (var_INaCa_i__k7_i + var_INaCa_i__k6_i)) + (5000.0 * var_INaCa_i__k7_i * (5000.0 + var_INaCa_i__k3_i)); // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__Gncx_b = 0.00080000000000000004; // milliS_per_microF
        const double var_INaCa_i__Gncx = var_INaCa_i__Gncx_b; // milliS_per_microF
        const double var_INaCa_i__INaCa_i = 0.80000000000000004 * var_INaCa_i__Gncx * (1.0 / (1.0 + pow(0.00014999999999999999 / var_chaste_interface__intracellular_ions__cai, 2.0))) * ((1.0 * (((3.0 * (((var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i)) * var_INaCa_i__k7_i) - (var_INaCa_i__E1_i * var_INaCa_i__k8_i))) + ((var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i)) * var_INaCa_i__k4pp_i)) - (var_INaCa_i__E2_i * var_INaCa_i__k3pp_i))) + (2.0 * ((var_INaCa_i__E2_i * 5000.0) - (var_INaCa_i__E1_i * var_INaCa_i__k1_i)))); // microA_per_microF
        const double var_INaCa_i__h1_ss = 1.0 + ((var_chaste_interface__intracellular_ions__nass * 0.011348161597821153) * (1.0 + var_INaCa_i__hna)); // dimensionless
        const double var_INaCa_i__h2_ss = (var_chaste_interface__intracellular_ions__nass * var_INaCa_i__hna) / (88.120000000000005 * var_INaCa_i__h1_ss); // dimensionless
        const double var_INaCa_i__k4pp_ss = var_INaCa_i__h2_ss * 5000.0; // dimensionless
        const double var_INaCa_i__k4_ss = (((1.0 / var_INaCa_i__h1_ss) * 60000.0) / var_INaCa_i__hca) + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__h10_ss = ((var_extracellular__nao * 0.066666666666666666) * (1.0 + (var_extracellular__nao * 0.20000000000000001))) + 13.5; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + ((var_extracellular__nao * 0.011348161597821153) * (1.0 + (1.0 / var_INaCa_i__hna))); // dimensionless
        const double var_INaCa_i__h8_ss = var_extracellular__nao / (88.120000000000005 * var_INaCa_i__hna * var_INaCa_i__h7_ss); // dimensionless
        const double var_INaCa_i__k8_ss = var_INaCa_i__h8_ss * ((var_extracellular__nao * var_extracellular__nao) / (var_INaCa_i__h10_ss * 75.0)) * 60000.0; // dimensionless
        const double var_INaCa_i__h4_ss = 1.0 + ((var_chaste_interface__intracellular_ions__nass * 0.066666666666666666) * (1.0 + (var_chaste_interface__intracellular_ions__nass * 0.20000000000000001))); // dimensionless
        const double var_INaCa_i__k6_ss = (1.0 / var_INaCa_i__h4_ss) * var_chaste_interface__intracellular_ions__cass * 1500000.0; // dimensionless
        const double var_INaCa_i__k1_ss = (1.0 / var_INaCa_i__h10_ss) * var_extracellular__cao * 1500000.0; // dimensionless
        const double var_INaCa_i__k7_ss = ((var_chaste_interface__intracellular_ions__nass * var_chaste_interface__intracellular_ions__nass) / (var_INaCa_i__h4_ss * 75.0)) * var_INaCa_i__h2_ss * 60000.0; // dimensionless
        const double var_INaCa_i__x2_ss = (var_INaCa_i__k1_ss * var_INaCa_i__k7_ss * (var_INaCa_i__k4_ss + 5000.0)) + (var_INaCa_i__k4_ss * var_INaCa_i__k6_ss * (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss)); // dimensionless
        const double var_INaCa_i__k3pp_ss = var_INaCa_i__h8_ss * 5000.0; // dimensionless
        const double var_INaCa_i__k3_ss = ((1.0 / var_INaCa_i__h7_ss) * 60000.0) + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__x3_ss = (var_INaCa_i__k1_ss * var_INaCa_i__k3_ss * (var_INaCa_i__k7_ss + var_INaCa_i__k6_ss)) + (var_INaCa_i__k8_ss * var_INaCa_i__k6_ss * (5000.0 + var_INaCa_i__k3_ss)); // dimensionless
        const double var_INaCa_i__x1_ss = (5000.0 * var_INaCa_i__k4_ss * (var_INaCa_i__k7_ss + var_INaCa_i__k6_ss)) + (5000.0 * var_INaCa_i__k7_ss * (5000.0 + var_INaCa_i__k3_ss)); // dimensionless
        const double var_INaCa_i__x4_ss = (5000.0 * var_INaCa_i__k8_ss * (var_INaCa_i__k4_ss + 5000.0)) + (var_INaCa_i__k3_ss * 5000.0 * (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss)); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__INaCa_ss = 0.20000000000000001 * var_INaCa_i__Gncx * (1.0 / (1.0 + pow(0.00014999999999999999 / var_chaste_interface__intracellular_ions__cass, 2.0))) * ((1.0 * (((3.0 * (((var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss)) * var_INaCa_i__k7_ss) - (var_INaCa_i__E1_ss * var_INaCa_i__k8_ss))) + ((var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss)) * var_INaCa_i__k4pp_ss)) - (var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss))) + (2.0 * ((var_INaCa_i__E2_ss * 5000.0) - (var_INaCa_i__E1_ss * var_INaCa_i__k1_ss)))); // microA_per_microF
        const double var_INaK__Pnak_b = 30.0; // milliS_per_microF
        const double var_INaK__b3 = ((4.2000000000000002 / ((var_chaste_interface__intracellular_ions__nai * 0.004464285714285714) + (var_chaste_interface__intracellular_ions__ki * 0.0034246575342465752) + 1.5889281507656066)) * 0.0079299999999999995) * 1.732653031203624e-08; // dimensionless
        const double var_INaK__Knao = 27.780000000000001 * exp((var_chaste_interface__membrane__v * 111440.175) * 1.2933230902144589e-07); // millimolar
        const double var_INaK__a3 = (1899.0 * pow(var_extracellular__ko * 2.7917364600781687, 2.0)) / ((pow(1.0 + (var_extracellular__nao / var_INaK__Knao), 3.0) + pow(1.0 + (var_extracellular__ko * 2.7917364600781687), 2.0)) - 1.0); // dimensionless
        const double var_INaK__b2 = (39.399999999999999 * pow(var_extracellular__nao / var_INaK__Knao, 3.0)) / ((pow(1.0 + (var_extracellular__nao / var_INaK__Knao), 3.0) + pow(1.0 + (var_extracellular__ko * 2.7917364600781687), 2.0)) - 1.0); // dimensionless
        const double var_INaK__x3 = (var_INaK__a3 * 439120.79239156022) + (var_INaK__b3 * var_INaK__b2 * 9.120000000000001) + (var_INaK__b2 * 5827.679899026527) + (var_INaK__a3 * 5827.679899026527); // dimensionless
        const double var_INaK__Knai = 9.0730000000000004 * exp((var_chaste_interface__membrane__v *  -14955.174999999999) * 1.2933230902144589e-07); // millimolar
        const double var_INaK__b4 = (40.0 * pow(var_chaste_interface__intracellular_ions__ki * 2.0, 2.0)) / ((pow(1.0 + (var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3.0) + pow(1.0 + (var_chaste_interface__intracellular_ions__ki * 2.0), 2.0)) - 1.0); // dimensionless
        const double var_INaK__a1 = (949.5 * pow(var_chaste_interface__intracellular_ions__nai / var_INaK__Knai, 3.0)) / ((pow(1.0 + (var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3.0) + pow(1.0 + (var_chaste_interface__intracellular_ions__ki * 2.0), 2.0)) - 1.0); // dimensionless
        const double var_INaK__x2 = (var_INaK__b2 * 9.120000000000001 * var_INaK__b4) + (var_INaK__a1 * 687.20000000000005 * var_INaK__a3) + (var_INaK__a3 * 9.120000000000001 * var_INaK__b4) + (687.20000000000005 * var_INaK__a3 * var_INaK__b4); // dimensionless
        const double var_INaK__x1 = (var_INaK__a1 * 439120.79239156022) + (var_INaK__b2 * var_INaK__b4 * var_INaK__b3) + (687.20000000000005 * var_INaK__b4 * var_INaK__b3) + (var_INaK__b3 * var_INaK__a1 * 687.20000000000005); // dimensionless
        const double var_INaK__x4 = (var_INaK__b4 * var_INaK__b3 * var_INaK__b2) + (var_INaK__a3 * 638.99998892834719 * var_INaK__a1) + (var_INaK__b2 * 638.99998892834719 * var_INaK__a1) + (var_INaK__b3 * var_INaK__b2 * var_INaK__a1); // dimensionless
        const double var_INaK__INaK = var_INaK__Pnak_b * ((1.0 * (3.0 * (((var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__a3) - ((var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__b3)))) + (1.0 * (2.0 * (((var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * 9.120000000000001) - ((var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__a1))))); // microA_per_microF
        const double var_INab__PNab = 3.75e-10; // milliS_per_microF
        const double var_INab__A = (var_INab__PNab * 3612.0012202503353 * ((var_chaste_interface__intracellular_ions__nai * exp(var_membrane__vfrt)) - var_extracellular__nao)) * 26.712338705498265; // microA_per_microF
        const double var_INab__U = 0.037435883507802616 * (var_chaste_interface__membrane__v - 0.0); // dimensionless
        const double var_INab__INab = (( -9.9999999999999995e-08 <= var_INab__U) && (var_INab__U <= 9.9999999999999995e-08)) ? (var_INab__A * (1.0 - (0.5 * var_INab__U))) : ((var_INab__A * var_INab__U) / (exp(var_INab__U) - 1.0)); // microA_per_microF
        const double var_IKb__GKb_b = 0.0030000000000000001; // milliS_per_microF
        const double var_IKb__IKb = var_IKb__GKb_b * (1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v - 14.48)) * 0.054525627044711013))) * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_IpCa__GpCa = 0.00050000000000000001; // milliS_per_microF
        const double var_IpCa__IpCa = (var_IpCa__GpCa * var_chaste_interface__intracellular_ions__cai) / (0.00050000000000000001 + var_chaste_interface__intracellular_ions__cai); // microA_per_microF
        const double var_ICab__U = 0.074871767015605231 * (var_chaste_interface__membrane__v - 0.0); // dimensionless
        const double var_ICab__PCab = 2.4999999999999999e-08; // milliS_per_microF
        const double var_ICab__A = (var_ICab__PCab * ((var_chaste_interface__intracellular_ions__cai * exp(2.0 * var_membrane__vfrt)) - (0.34100000000000003 * var_extracellular__cao)) * 14448.004881001341) * 13.356169352749133; // microA_per_microF
        const double var_ICab__ICab = (( -9.9999999999999995e-08 <= var_ICab__U) && (var_ICab__U <= 9.9999999999999995e-08)) ? (var_ICab__A * (1.0 - (0.5 * var_ICab__U))) : ((var_ICab__A * var_ICab__U) / (exp(var_ICab__U) - 1.0)); // microA_per_microF
        const double var_chaste_interface__membrane__Istim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time) * Acap/(Acap * HeartConfig::Instance()->GetCapacitance()); // uA / uF
        const double var_diff__JdiffNa = (var_chaste_interface__intracellular_ions__nass - var_chaste_interface__intracellular_ions__nai) * 0.5; // millimolar_per_millisecond
        const double var_diff__Jdiff = (var_chaste_interface__intracellular_ions__cass - var_chaste_interface__intracellular_ions__cai) * 5.0; // millimolar_per_millisecond
        const double var_SERCA__fJupp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_SERCA__Jup_b = 1.0; // dimensionless
        const double var_SERCA__Jup = var_SERCA__Jup_b * ((((1.0 - var_SERCA__fJupp) * ((var_chaste_interface__intracellular_ions__cai * 0.0043750000000000004) / (var_chaste_interface__intracellular_ions__cai + 0.00092000000000000003))) + (var_SERCA__fJupp * ((var_chaste_interface__intracellular_ions__cai * 0.01203125) / ((var_chaste_interface__intracellular_ions__cai + 0.00092000000000000003) - 0.00017000000000000001)))) - ((0.0039375 * var_chaste_interface__intracellular_ions__cansr) * 0.066666666666666666)); // millimolar_per_millisecond
        const double var_diff__JdiffK = (var_chaste_interface__intracellular_ions__kss - var_chaste_interface__intracellular_ions__ki) * 0.5; // millimolar_per_millisecond
        const double var_ryr__Jrel_scaling_factor = 1.0; // dimensionless
        const double var_ryr__fJrelp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_ryr__Jrel = var_ryr__Jrel_scaling_factor * (((1.0 - var_ryr__fJrelp) * var_chaste_interface__ryr__Jrelnp) + (var_ryr__fJrelp * var_chaste_interface__ryr__Jrelp)); // millimolar_per_millisecond
        const double var_trans_flux__Jtr = (var_chaste_interface__intracellular_ions__cansr - var_chaste_interface__intracellular_ions__cajsr) * 0.01; // millimolar_per_millisecond
        const double var_INa__tm = 1.0 / ((6.7649999999999997 * exp((var_chaste_interface__membrane__v + 11.640000000000001) * 0.02876042565429968)) + (8.5519999999999996 * exp((-(var_chaste_interface__membrane__v + 77.420000000000002)) * 0.16792611251049538))); // millisecond
        const double var_INa__hss = 1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 82.900000000000006) - 0.0) * 0.16431153466973381)); // dimensionless
        const double var_INa__ths = 1.0 / ((0.0097940000000000006 * exp((-((var_chaste_interface__membrane__v + 17.949999999999999) - 0.0)) * 0.035650623885918005)) + (0.33429999999999999 * exp(((var_chaste_interface__membrane__v + 5.7300000000000004) - 0.0) * 0.017649135192375574))); // millisecond
        const double var_INa__jss = var_INa__hss; // dimensionless
        const double var_INa__tj = 2.0379999999999998 + (1.0 / ((0.021360000000000001 * exp((-((var_chaste_interface__membrane__v + 100.59999999999999) - 0.0)) * 0.12075836251660427)) + (0.30520000000000003 * exp(((var_chaste_interface__membrane__v + 0.99409999999999998) - 0.0) * 0.02600780234070221)))); // millisecond
        const double var_Ito__ta = 1.0515000000000001 / ((1.0 / (1.2089000000000001 * (1.0 + exp((-(var_chaste_interface__membrane__v - 18.4099)) * 0.034035137876343539)))) + (3.5 / (1.0 + exp((var_chaste_interface__membrane__v + 100.0) * 0.034035137876343539)))); // millisecond
        const double var_Ito__iss = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 43.939999999999998) * 0.17510068289266328)); // dimensionless
        const double var_Ito__tiF = (4.5620000000000003 + (1.0 / ((0.39329999999999998 * exp((-(var_chaste_interface__membrane__v + 100.0)) * 0.01)) + (0.08004 * exp((var_chaste_interface__membrane__v + 50.0) * 0.060277275467148887))))) * 1.0; // millisecond
        const double var_Ito__tiS = (23.620000000000001 + (1.0 / ((0.0014159999999999999 * exp((-(var_chaste_interface__membrane__v + 96.519999999999996)) * 0.016934801016088061)) + (1.7800000000000001e-08 * exp((var_chaste_interface__membrane__v + 114.09999999999999) * 0.12377769525931426))))) * 1.0; // millisecond
        const double var_Ito__dti_develop = 1.3540000000000001 + (0.0001 / (exp((var_chaste_interface__membrane__v - 167.40000000000001) * 0.062932662051604776) + exp((-(var_chaste_interface__membrane__v - 12.23)) * 4.6425255338904359))); // dimensionless
        const double var_Ito__dti_recover = 1.0 - (0.5 / (1.0 + exp((var_chaste_interface__membrane__v + 70.0) * 0.050000000000000003))); // dimensionless
        const double var_ICaL__fss = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 19.579999999999998) * 0.27056277056277056)); // dimensionless
        const double var_ICaL__fcass = var_ICaL__fss; // dimensionless
        const double var_ICaL__km2n = var_chaste_interface__ICaL__jca * 1.0; // per_millisecond
        const double var_ICaL__tff = 7.0 + (1.0 / ((0.0044999999999999997 * exp((-(var_chaste_interface__membrane__v + 20.0)) * 0.10000000000000001)) + (0.0044999999999999997 * exp((var_chaste_interface__membrane__v + 20.0) * 0.10000000000000001)))); // millisecond
        const double var_ICaL__tfcaf = 7.0 + (1.0 / ((0.040000000000000001 * exp((-(var_chaste_interface__membrane__v - 4.0)) * 0.14285714285714285)) + (0.040000000000000001 * exp((var_chaste_interface__membrane__v - 4.0) * 0.14285714285714285)))); // millisecond
        const double var_IKr__D = 0.0; // dimensionless
        const double var_IKr__Kmax = 0.0; // dimensionless
        const double var_IKr__Ku = 0.0; // per_millisecond
        const double var_IKr__n = 1.0; // dimensionless
        const double var_IKr__halfmax = 1.0; // dimensionless
        const double var_IKr__Kt = 0.0; // per_millisecond
        const double var_IKr__Vhalf = 1.0; // millivolt
        const double var_IKs__xs1ss = 1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v + 11.6)) * 0.11195700850873264)); // dimensionless
        const double var_ryr__tau_rel_temp = 4.75 / (1.0 + (0.0123 / var_chaste_interface__intracellular_ions__cajsr)); // millisecond
        const double var_ryr__tau_relp_temp = 5.9375 / (1.0 + (0.0123 / var_chaste_interface__intracellular_ions__cajsr)); // millisecond
        const double d_dt_chaste_interface__intracellular_ions__cai = (1.0 / (1.0 + (0.00011900000000000002 / pow(0.0023800000000000002 + var_chaste_interface__intracellular_ions__cai, 2.0)) + (3.5000000000000004e-05 / pow(0.00050000000000000001 + var_chaste_interface__intracellular_ions__cai, 2.0)))) * (((((-((var_IpCa__IpCa + var_ICab__ICab) - (2.0 * var_INaCa_i__INaCa_i))) * 0.00015335760000000003) * 0.20057937422849834) - ((var_SERCA__Jup * 2.0972688000000006e-06) * 38705.801844873327)) + ((var_diff__Jdiff * 7.5988000000000021e-07) * 38705.801844873327)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__CaMK__CaMKt = (0.050000000000000003 * var_CaMK__CaMKb * (var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt)) - (0.00068000000000000005 * var_chaste_interface__CaMK__CaMKt); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__nai = (((-(var_INa__INa + var_INaL__INaL + (3.0 * var_INaCa_i__INaCa_i) + (3.0 * var_INaK__INaK) + var_INab__INab)) * 0.00015335760000000003) * 0.40115874845699667) + ((var_diff__JdiffNa * 7.5988000000000021e-07) * 38705.801844873327); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__nass = (((-(var_ICaL__ICaNa + (3.0 * var_INaCa_i__INaCa_ss))) * 0.00015335760000000003) * 13.639397447537888) - var_diff__JdiffNa; // 'millimole per litre per millisecond'
        // const double d_dt_chaste_interface__intracellular_ions__ki = (((-((var_Ito__Ito + var_IKr__IKr + var_IKs__IKs + var_IK1__IK1 + var_IKb__IKb + (var_chaste_interface__membrane__Istim / HeartConfig::Instance()->GetCapacitance())) - (2.0 * var_INaK__INaK))) * 0.00015335760000000003) * 0.40115874845699667) + ((var_diff__JdiffK * 7.5988000000000021e-07) * 38705.801844873327); // 'millimole per litre per millisecond'
        const double cm = 1;
        const double Acap = 0.0001533576;
        const double F = 96485;
        const double d_dt_chaste_interface__intracellular_ions__ki = (-(var_Ito__Ito + var_IKr__IKr + var_IKs__IKs + var_IK1__IK1 + var_IKb__IKb + var_chaste_interface__membrane__Istim - (2.0 * var_INaK__INaK))* cm*Acap/(F*vmyo))+var_diff__JdiffK*vss/vmyo; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__kss = (((-var_ICaL__ICaK) * 0.00015335760000000003) * 13.639397447537888) - var_diff__JdiffK; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__cass = (1.0 / (1.0 + (4.0890000000000003e-05 / pow(0.00087000000000000001 + var_chaste_interface__intracellular_ions__cass, 2.0)) + (0.0097788000000000007 / pow(0.0086999999999999994 + var_chaste_interface__intracellular_ions__cass, 2.0)))) * (((((-(var_ICaL__ICaL - (2.0 * var_INaCa_i__INaCa_ss))) * 0.00015335760000000003) * 6.8196987237689441) + ((var_ryr__Jrel * 1.8237120000000002e-07) * 1315997.2627256932)) - var_diff__Jdiff); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__cansr = var_SERCA__Jup - ((var_trans_flux__Jtr * 1.8237120000000002e-07) * 476810.60243684537); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__cajsr = (1.0 / (1.0 + (8.0 / pow(0.80000000000000004 + var_chaste_interface__intracellular_ions__cajsr, 2.0)))) * (var_trans_flux__Jtr - var_ryr__Jrel); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__INa__m = ((1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v + 39.57)) * 0.10130685847431871))) - var_chaste_interface__INa__m) / var_INa__tm; // per_millisecond
        const double d_dt_chaste_interface__INa__hf = (var_INa__hss - var_chaste_interface__INa__hf) / (1.0 / ((1.432e-05 * exp((-((var_chaste_interface__membrane__v + 1.196) - 0.0)) * 0.15910898965791567)) + (6.149 * exp(((var_chaste_interface__membrane__v + 0.50960000000000005) - 0.0) * 0.049333991119881598)))); // per_millisecond
        const double d_dt_chaste_interface__INa__hs = (var_INa__hss - var_chaste_interface__INa__hs) / var_INa__ths; // per_millisecond
        const double d_dt_chaste_interface__INa__j = (var_INa__jss - var_chaste_interface__INa__j) / var_INa__tj; // per_millisecond
        const double d_dt_chaste_interface__INa__hsp = ((1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 89.099999999999994) - 0.0) * 0.16431153466973381))) - var_chaste_interface__INa__hsp) / (3.0 * var_INa__ths); // per_millisecond
        const double d_dt_chaste_interface__INa__jp = (var_INa__jss - var_chaste_interface__INa__jp) / (1.46 * var_INa__tj); // per_millisecond
        const double d_dt_chaste_interface__INaL__mL = ((1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v + 42.850000000000001)) * 0.18996960486322187))) - var_chaste_interface__INaL__mL) / var_INa__tm; // per_millisecond
        const double d_dt_chaste_interface__INaL__hL = ((1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 87.609999999999999) * 0.13354700854700854))) - var_chaste_interface__INaL__hL) * 0.0050000000000000001; // per_millisecond
        const double d_dt_chaste_interface__INaL__hLp = ((1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 93.810000000000002) * 0.13354700854700854))) - var_chaste_interface__INaL__hLp) * 0.0016666666666666668; // per_millisecond
        const double d_dt_chaste_interface__Ito__a = ((1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v - 14.34)) * 0.067476383265856948))) - var_chaste_interface__Ito__a) / var_Ito__ta; // per_millisecond
        const double d_dt_chaste_interface__Ito__iF = (var_Ito__iss - var_chaste_interface__Ito__iF) / var_Ito__tiF; // per_millisecond
        const double d_dt_chaste_interface__Ito__iS = (var_Ito__iss - var_chaste_interface__Ito__iS) / var_Ito__tiS; // per_millisecond
        const double d_dt_chaste_interface__Ito__ap = ((1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v - 24.34)) * 0.067476383265856948))) - var_chaste_interface__Ito__ap) / var_Ito__ta; // per_millisecond
        const double d_dt_chaste_interface__Ito__iFp = (var_Ito__iss - var_chaste_interface__Ito__iFp) / (var_Ito__dti_develop * var_Ito__dti_recover * var_Ito__tiF); // per_millisecond
        const double d_dt_chaste_interface__Ito__iSp = (var_Ito__iss - var_chaste_interface__Ito__iSp) / (var_Ito__dti_develop * var_Ito__dti_recover * var_Ito__tiS); // per_millisecond
        const double d_dt_chaste_interface__ICaL__d = ((1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v + 3.9399999999999999)) * 0.23640661938534277))) - var_chaste_interface__ICaL__d) / (0.59999999999999998 + (1.0 / (exp( -0.050000000000000003 * (var_chaste_interface__membrane__v + 6.0)) + exp(0.089999999999999997 * (var_chaste_interface__membrane__v + 14.0))))); // per_millisecond
        const double d_dt_chaste_interface__ICaL__ff = (var_ICaL__fss - var_chaste_interface__ICaL__ff) / var_ICaL__tff; // per_millisecond
        const double d_dt_chaste_interface__ICaL__fs = (var_ICaL__fss - var_chaste_interface__ICaL__fs) / (1000.0 + (1.0 / ((3.4999999999999997e-05 * exp((-(var_chaste_interface__membrane__v + 5.0)) * 0.25)) + (3.4999999999999997e-05 * exp((var_chaste_interface__membrane__v + 5.0) * 0.16666666666666666))))); // per_millisecond
        const double d_dt_chaste_interface__ICaL__fcaf = (var_ICaL__fcass - var_chaste_interface__ICaL__fcaf) / var_ICaL__tfcaf; // per_millisecond
        const double d_dt_chaste_interface__ICaL__fcas = (var_ICaL__fcass - var_chaste_interface__ICaL__fcas) / (100.0 + (1.0 / ((0.00012 * exp((-var_chaste_interface__membrane__v) * 0.33333333333333331)) + (0.00012 * exp(var_chaste_interface__membrane__v * 0.14285714285714285))))); // per_millisecond
        const double d_dt_chaste_interface__ICaL__jca = (var_ICaL__fcass - var_chaste_interface__ICaL__jca) * 0.013333333333333334; // per_millisecond
        const double d_dt_chaste_interface__ICaL__ffp = (var_ICaL__fss - var_chaste_interface__ICaL__ffp) / (2.5 * var_ICaL__tff); // per_millisecond
        const double d_dt_chaste_interface__ICaL__fcafp = (var_ICaL__fcass - var_chaste_interface__ICaL__fcafp) / (2.5 * var_ICaL__tfcaf); // per_millisecond
        const double d_dt_chaste_interface__ICaL__nca = ((1.0 / ((1000.0 / var_ICaL__km2n) + pow(1.0 + (0.002 / var_chaste_interface__intracellular_ions__cass), 4.0))) * 1000.0) - (var_chaste_interface__ICaL__nca * var_ICaL__km2n); // per_millisecond
        const double d_dt_chaste_interface__IKr__IC1 = ((-((exp(1.5349999999999998e-08 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__IC1 * 0.011898686196840169) - (exp( -0.16880000000000001 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__IC2 * 6.1453011601621813e-05))) + (exp(0.0085950000000000002 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__C1 * 6.9292902783457055)) - (exp(0.17249999999999999 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__IC1 * 0.22985844625060706); // per_millisecond
        const double d_dt_chaste_interface__IKr__IC2 = ((((exp(1.5349999999999998e-08 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__IC1 * 0.011898686196840169) - (exp( -0.16880000000000001 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__IC2 * 6.1453011601621813e-05)) - ((exp(0.0085159999999999993 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__IC2 * 0.018485669265367641) - (exp( -0.04641 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__IO * 0.00017688628605067472))) + (exp(3.613e-08 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__C2 * 4.3580767605489008)) - (exp( -0.00065749999999999999 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__IC2 * 4.9763781028368754); // per_millisecond
        const double d_dt_chaste_interface__IKr__C1 = (-((exp(4.6310000000000002e-05 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__C1 * 0.38574341789776972) - (exp( -0.0042259999999999997 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__C2 * 5.7880316693427987e-05))) - ((exp(0.0085950000000000002 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__C1 * 6.9292902783457055) - (exp(0.17249999999999999 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__IC1 * 0.22985844625060706)); // per_millisecond
        const double d_dt_chaste_interface__IKr__C2 = (((exp(4.6310000000000002e-05 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__C1 * 0.38574341789776972) - (exp( -0.0042259999999999997 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__C2 * 5.7880316693427987e-05)) - ((exp(7.7710000000000006e-09 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__C2 * 0.063694794240660019) - (exp( -0.02877 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__O * 0.0026912698717094915))) - ((exp(3.613e-08 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__C2 * 4.3580767605489008) - (exp( -0.00065749999999999999 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__IC2 * 4.9763781028368754)); // per_millisecond
        const double d_dt_chaste_interface__IKr__O = (((exp(7.7710000000000006e-09 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__C2 * 0.063694794240660019) - (exp( -0.02877 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__O * 0.0026912698717094915)) - ((exp(0.0046680000000000003 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__O * 0.66562202540710869) - (exp( -0.02215 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__IO * 0.17212014014424634))) - ((((var_IKr__Kmax * var_IKr__Ku * pow(var_IKr__D, var_IKr__n)) / (pow(var_IKr__D, var_IKr__n) + var_IKr__halfmax)) * var_chaste_interface__IKr__O) - (var_IKr__Ku * var_chaste_interface__IKr__Obound)); // per_millisecond
        const double d_dt_chaste_interface__IKr__IO = ((((exp(0.0085159999999999993 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__IC2 * 0.018485669265367641) - (exp( -0.04641 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__IO * 0.00017688628605067472)) + (exp(0.0046680000000000003 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__O * 0.66562202540710869)) - (exp( -0.02215 * var_chaste_interface__membrane__v) * var_chaste_interface__IKr__IO * 0.17212014014424634)) - ((((var_IKr__Kmax * var_IKr__Ku * pow(var_IKr__D, var_IKr__n)) / (pow(var_IKr__D, var_IKr__n) + var_IKr__halfmax)) * var_chaste_interface__IKr__IO) - (((var_IKr__Ku * exp(0.0046680000000000003 * var_chaste_interface__membrane__v) * 0.66562202540710869) / (exp( -0.02215 * var_chaste_interface__membrane__v) * 0.17212014014424634)) * var_chaste_interface__IKr__IObound)); // per_millisecond
        const double d_dt_chaste_interface__IKr__IObound = (((((var_IKr__Kmax * var_IKr__Ku * pow(var_IKr__D, var_IKr__n)) / (pow(var_IKr__D, var_IKr__n) + var_IKr__halfmax)) * var_chaste_interface__IKr__IO) - (((var_IKr__Ku * exp(0.0046680000000000003 * var_chaste_interface__membrane__v) * 0.66562202540710869) / (exp( -0.02215 * var_chaste_interface__membrane__v) * 0.17212014014424634)) * var_chaste_interface__IKr__IObound)) + ((var_IKr__Kt / (1.0 + exp((-(var_chaste_interface__membrane__v - var_IKr__Vhalf)) * 0.14729709824716453))) * var_chaste_interface__IKr__Cbound)) - (var_IKr__Kt * var_chaste_interface__IKr__IObound); // per_millisecond
        const double d_dt_chaste_interface__IKr__Obound = (((((var_IKr__Kmax * var_IKr__Ku * pow(var_IKr__D, var_IKr__n)) / (pow(var_IKr__D, var_IKr__n) + var_IKr__halfmax)) * var_chaste_interface__IKr__O) - (var_IKr__Ku * var_chaste_interface__IKr__Obound)) + ((var_IKr__Kt / (1.0 + exp((-(var_chaste_interface__membrane__v - var_IKr__Vhalf)) * 0.14729709824716453))) * var_chaste_interface__IKr__Cbound)) - (var_IKr__Kt * var_chaste_interface__IKr__Obound); // per_millisecond
        const double d_dt_chaste_interface__IKr__Cbound = (-(((var_IKr__Kt / (1.0 + exp((-(var_chaste_interface__membrane__v - var_IKr__Vhalf)) * 0.14729709824716453))) * var_chaste_interface__IKr__Cbound) - (var_IKr__Kt * var_chaste_interface__IKr__Obound))) - (((var_IKr__Kt / (1.0 + exp((-(var_chaste_interface__membrane__v - var_IKr__Vhalf)) * 0.14729709824716453))) * var_chaste_interface__IKr__Cbound) - (var_IKr__Kt * var_chaste_interface__IKr__IObound)); // per_millisecond
        const double d_dt_chaste_interface__IKs__xs1 = (var_IKs__xs1ss - var_chaste_interface__IKs__xs1) / (817.29999999999995 + (1.0 / ((0.00023259999999999999 * exp((var_chaste_interface__membrane__v + 48.280000000000001) * 0.056179775280898875)) + (0.001292 * exp((-(var_chaste_interface__membrane__v + 210.0)) * 0.0043478260869565218))))); // per_millisecond
        const double d_dt_chaste_interface__IKs__xs2 = (var_IKs__xs1ss - var_chaste_interface__IKs__xs2) / (1.0 / ((0.01 * exp((var_chaste_interface__membrane__v - 50.0) * 0.050000000000000003)) + (0.019300000000000001 * exp((-(var_chaste_interface__membrane__v + 66.540000000000006)) * 0.032258064516129031)))); // per_millisecond
        const double d_dt_chaste_interface__IK1__xk1 = ((1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v + (2.5537999999999998 * var_extracellular__ko) + 144.59)) / ((1.5691999999999999 * var_extracellular__ko) + 3.8115000000000001)))) - var_chaste_interface__IK1__xk1) / (122.2 / (exp((-(var_chaste_interface__membrane__v + 127.2)) * 0.049115913555992145) + exp((var_chaste_interface__membrane__v + 236.80000000000001) * 0.014423770373575654))); // per_millisecond
        const double d_dt_chaste_interface__ryr__Jrelnp = (((2.375 * (-var_ICaL__ICaL)) / (1.0 + (1.0 * pow(1.5 / var_chaste_interface__intracellular_ions__cajsr, 8.0)))) - var_chaste_interface__ryr__Jrelnp) / ((var_ryr__tau_rel_temp < 0.001) ? 0.001 : var_ryr__tau_rel_temp); // per_millisecond
        const double d_dt_chaste_interface__ryr__Jrelp = (((2.96875 * (-var_ICaL__ICaL)) / (1.0 + pow(1.5 / var_chaste_interface__intracellular_ions__cajsr, 8.0))) - var_chaste_interface__ryr__Jrelp) / ((var_ryr__tau_relp_temp < 0.001) ? 0.001 : var_ryr__tau_relp_temp); // per_millisecond
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__membrane__v = 0.0;
        }
        else
        {
            d_dt_chaste_interface__membrane__v = -(var_INa__INa + var_INaL__INaL + var_Ito__Ito + var_ICaL__ICaL + var_ICaL__ICaNa + var_ICaL__ICaK + var_IKr__IKr + var_IKs__IKs + var_IK1__IK1 + var_INaCa_i__INaCa_i + var_INaCa_i__INaCa_ss + var_INaK__INaK + var_INab__INab + var_IKb__IKb + var_IpCa__IpCa + var_ICab__ICab + (var_chaste_interface__membrane__Istim / HeartConfig::Instance()->GetCapacitance())); // 'millivolt per millisecond'
        }
        
        // NV_Ith_S(rDY, 0) = d_dt_chaste_interface__membrane__v;
        NV_Ith_S(rDY, 0) = d_dt_chaste_interface__intracellular_ions__cai;
        NV_Ith_S(rDY, 1) = d_dt_chaste_interface__CaMK__CaMKt;
        NV_Ith_S(rDY, 2) = d_dt_chaste_interface__intracellular_ions__nai;
        NV_Ith_S(rDY, 3) = d_dt_chaste_interface__intracellular_ions__nass;
        NV_Ith_S(rDY, 4) = d_dt_chaste_interface__intracellular_ions__ki;
        NV_Ith_S(rDY, 5) = d_dt_chaste_interface__intracellular_ions__kss;
        NV_Ith_S(rDY, 6) = d_dt_chaste_interface__intracellular_ions__cass;
        NV_Ith_S(rDY, 7) = d_dt_chaste_interface__intracellular_ions__cansr;
        NV_Ith_S(rDY, 8) = d_dt_chaste_interface__intracellular_ions__cajsr;
        NV_Ith_S(rDY, 9) = d_dt_chaste_interface__INa__m;
        NV_Ith_S(rDY, 10) = d_dt_chaste_interface__INa__hf;
        NV_Ith_S(rDY, 11) = d_dt_chaste_interface__INa__hs;
        NV_Ith_S(rDY, 12) = d_dt_chaste_interface__INa__j;
        NV_Ith_S(rDY, 13) = d_dt_chaste_interface__INa__hsp;
        NV_Ith_S(rDY, 14) = d_dt_chaste_interface__INa__jp;
        NV_Ith_S(rDY, 15) = d_dt_chaste_interface__INaL__mL;
        NV_Ith_S(rDY, 16) = d_dt_chaste_interface__INaL__hL;
        NV_Ith_S(rDY, 17) = d_dt_chaste_interface__INaL__hLp;
        NV_Ith_S(rDY, 18) = d_dt_chaste_interface__Ito__a;
        NV_Ith_S(rDY, 19) = d_dt_chaste_interface__Ito__iF;
        NV_Ith_S(rDY, 20) = d_dt_chaste_interface__Ito__iS;
        NV_Ith_S(rDY, 21) = d_dt_chaste_interface__Ito__ap;
        NV_Ith_S(rDY, 22) = d_dt_chaste_interface__Ito__iFp;
        NV_Ith_S(rDY, 23) = d_dt_chaste_interface__Ito__iSp;
        NV_Ith_S(rDY, 24) = d_dt_chaste_interface__ICaL__d;
        NV_Ith_S(rDY, 25) = d_dt_chaste_interface__ICaL__ff;
        NV_Ith_S(rDY, 26) = d_dt_chaste_interface__ICaL__fs;
        NV_Ith_S(rDY, 27) = d_dt_chaste_interface__ICaL__fcaf;
        NV_Ith_S(rDY, 28) = d_dt_chaste_interface__ICaL__fcas;
        NV_Ith_S(rDY, 29) = d_dt_chaste_interface__ICaL__jca;
        NV_Ith_S(rDY, 30) = d_dt_chaste_interface__ICaL__ffp;
        NV_Ith_S(rDY, 31) = d_dt_chaste_interface__ICaL__fcafp;
        NV_Ith_S(rDY, 32) = d_dt_chaste_interface__ICaL__nca;
        NV_Ith_S(rDY, 33) = d_dt_chaste_interface__IKr__IC1;
        NV_Ith_S(rDY, 34) = d_dt_chaste_interface__IKr__IC2;
        NV_Ith_S(rDY, 35) = d_dt_chaste_interface__IKr__C1;
        NV_Ith_S(rDY, 36) = d_dt_chaste_interface__IKr__C2;
        NV_Ith_S(rDY, 37) = d_dt_chaste_interface__IKr__O;
        NV_Ith_S(rDY, 38) = d_dt_chaste_interface__IKr__IO;
        NV_Ith_S(rDY, 39) = d_dt_chaste_interface__IKr__IObound;
        NV_Ith_S(rDY, 40) = d_dt_chaste_interface__IKr__Obound;
        NV_Ith_S(rDY, 41) = d_dt_chaste_interface__IKr__Cbound;
        NV_Ith_S(rDY, 42) = d_dt_chaste_interface__IKs__xs1;
        NV_Ith_S(rDY, 43) = d_dt_chaste_interface__IKs__xs2;
        NV_Ith_S(rDY, 44) = d_dt_chaste_interface__IK1__xk1;
        NV_Ith_S(rDY, 45) = d_dt_chaste_interface__ryr__Jrelnp;
        NV_Ith_S(rDY, 46) = d_dt_chaste_interface__ryr__Jrelp;
    }

template<>
void OdeSystemInformation<Cellohara_rudy_cipa_v1_2017_analytic_voltageFromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "ohara_rudy_cipa_v1_2017";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";
    
    // // rY[0]:
    // this->mVariableNames.push_back("membrane_voltage");
    // this->mVariableUnits.push_back("millivolt");
    // this->mInitialConditions.push_back(-88.00190465);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.6e-05);

    // rY[2]:
    this->mVariableNames.push_back("CaMK__CaMKt");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0125840447);

    // rY[3]:
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.268004498);

    // rY[4]:
    this->mVariableNames.push_back("intracellular_ions__nass");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.268089977);

    // rY[5]:
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(144.6555918);

    // rY[6]:
    this->mVariableNames.push_back("intracellular_ions__kss");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(144.6555651);

    // rY[7]:
    this->mVariableNames.push_back("intracellular_ions__cass");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.49e-05);

    // rY[8]:
    this->mVariableNames.push_back("intracellular_ions__cansr");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.619574538);

    // rY[9]:
    this->mVariableNames.push_back("intracellular_ions__cajsr");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.571234014);

    // rY[10]:
    this->mVariableNames.push_back("INa__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.007344121102);

    // rY[11]:
    this->mVariableNames.push_back("INa__hf");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.6981071913);

    // rY[12]:
    this->mVariableNames.push_back("INa__hs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.6980895801);

    // rY[13]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.6979908432);

    // rY[14]:
    this->mVariableNames.push_back("INa__hsp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.4549485525);

    // rY[15]:
    this->mVariableNames.push_back("INa__jp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.6979245865);

    // rY[16]:
    this->mVariableNames.push_back("INaL__mL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0001882617273);

    // rY[17]:
    this->mVariableNames.push_back("INaL__hL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.5008548855);

    // rY[18]:
    this->mVariableNames.push_back("INaL__hLp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.2693065357);

    // rY[19]:
    this->mVariableNames.push_back("Ito__a");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001001097687);

    // rY[20]:
    this->mVariableNames.push_back("Ito__iF");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9995541745);

    // rY[21]:
    this->mVariableNames.push_back("Ito__iS");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.5865061736);

    // rY[22]:
    this->mVariableNames.push_back("Ito__ap");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0005100862934);

    // rY[23]:
    this->mVariableNames.push_back("Ito__iFp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9995541823);

    // rY[24]:
    this->mVariableNames.push_back("Ito__iSp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.6393399482);

    // rY[25]:
    this->mVariableNames.push_back("ICaL__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.34e-9);

    // rY[26]:
    this->mVariableNames.push_back("ICaL__ff");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999999909);

    // rY[27]:
    this->mVariableNames.push_back("ICaL__fs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9102412777);

    // rY[28]:
    this->mVariableNames.push_back("ICaL__fcaf");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999999909);

    // rY[29]:
    this->mVariableNames.push_back("ICaL__fcas");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9998046777);

    // rY[30]:
    this->mVariableNames.push_back("ICaL__jca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999738312);

    // rY[31]:
    this->mVariableNames.push_back("ICaL__ffp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999999909);

    // rY[32]:
    this->mVariableNames.push_back("ICaL__fcafp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999999909);

    // rY[33]:
    this->mVariableNames.push_back("ICaL__nca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.002749414044);

    // rY[34]:
    this->mVariableNames.push_back("IKr__IC1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999637);

    // rY[35]:
    this->mVariableNames.push_back("IKr__IC2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(6.83208e-05);

    // rY[36]:
    this->mVariableNames.push_back("IKr__C1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.80145e-08);

    // rY[37]:
    this->mVariableNames.push_back("IKr__C2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.26619e-05);

    // rY[38]:
    this->mVariableNames.push_back("IKr__O");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00015551);

    // rY[39]:
    this->mVariableNames.push_back("IKr__IO");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(5.67623e-05);

    // rY[40]:
    this->mVariableNames.push_back("IKr__IObound");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0);

    // rY[41]:
    this->mVariableNames.push_back("IKr__Obound");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0);

    // rY[42]:
    this->mVariableNames.push_back("IKr__Cbound");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0);

    // rY[43]:
    this->mVariableNames.push_back("IKs__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.2707758025);

    // rY[44]:
    this->mVariableNames.push_back("IKs__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0001928503426);

    // rY[45]:
    this->mVariableNames.push_back("IK1__xk1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9967597594);

    // rY[46]:
    this->mVariableNames.push_back("ryr__Jrelnp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.5e-7);

    // rY[47]:
    this->mVariableNames.push_back("ryr__Jrelp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.12e-7);

    // mParameters[0]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("dimensionless");
    
    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellohara_rudy_cipa_v1_2017_analytic_voltageFromCellMLCvode)
#endif // CHASTE_CVODE
