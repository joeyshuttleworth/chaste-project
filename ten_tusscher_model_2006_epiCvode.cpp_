#ifdef CHASTE_CVODE
//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: tentusscher_model_2006_epi
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Tue Sep 22 20:52:35 2020
//! 
//! <autogenerated>

#include "ten_tusscher_model_2006_epiCvode.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

/* Constants */
const double F = 96.4853415; // C per mMol
const double V_c = 0.016404;
const double Cm = 0.000185;
const double V_sr = 0.001094;
const double V_ss = 5.468e-05;


    boost::shared_ptr<RegularStimulus> Cellten_tusscher_model_2006_epiFromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__stim_start = 100.0; // millisecond
        const double var_chaste_interface__membrane__stim_period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__stim_duration = 1.0; // millisecond
        const double var_chaste_interface__membrane__stim_amplitude =  -52.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude),
                var_chaste_interface__membrane__stim_duration,
                var_chaste_interface__membrane__stim_period,
                var_chaste_interface__membrane__stim_start
                ));
        mpIntracellularStimulus = p_cellml_stim;

        return p_cellml_stim;
    }

    double Cellten_tusscher_model_2006_epiFromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }

void Cellten_tusscher_model_2006_epiFromCellMLCvode::SetIntegrationConstant(double voltage){
  N_Vector rY = GetStateVariables();
  const double K_i = NV_Ith_S(rY, 17);
  const double Na_i = NV_Ith_S(rY, 16);
  const double Ca_i = NV_Ith_S(rY, 0);

  const double Ca_ss = NV_Ith_S(rY, 14);
  // const double Ca_sr = NV_Ith_S(rY, 14);
  const double K_buf_ss  = 0.00025;
  const double Buf_ss = 0.4;
  const double Ca_ss_tot = Ca_ss + Ca_ss * Buf_ss / (Ca_ss + K_buf_ss);

  const double Ca_SR = NV_Ith_S(rY, 13);
  const double K_buf_sr = 0.3;
  const double Buf_sr = 10;
  const double Ca_SR_tot = Ca_SR+Ca_SR*Buf_sr/(Ca_SR+K_buf_sr);

  const double Buf_c = 0.2;
  const double K_buf_c = 0.001;
  const double Ca_i_tot = Ca_i+Ca_i*Buf_c/(Ca_i+K_buf_c);

  const double K_o = 5.4000000000000004; // millimolar
  const double Ca_o = 2.0; // millimolar
  const double Na_o = 140.0; // millimolar


  const double V = voltage;

  mIntegrationConstant = (K_i+Na_i+2*Ca_i_tot+2*V_sr/V_c*Ca_SR_tot+2*V_ss/V_c*Ca_ss_tot-K_o-Ca_o-Na_o) - Cm*V/(F*V_c);
  std::cout << "Integration constant is " << mIntegrationConstant << "\n";

  return;
}

double Cellten_tusscher_model_2006_epiFromCellMLCvode::CalculateAnalyticVoltage(){
  const N_Vector rY = GetStateVariables();
  const double C0 = mIntegrationConstant;
  const double K_i = NV_Ith_S(rY, 17);
  const double Na_i = NV_Ith_S(rY, 16);
  const double Ca_i = NV_Ith_S(rY, 0);

  const double Ca_ss = NV_Ith_S(rY, 14);
  // const double Ca_sr = NV_Ith_S(rY, 14);
  const double K_buf_ss  = 0.00025;
  const double Buf_ss = 0.4;
  const double Ca_ss_tot = Ca_ss + Ca_ss * Buf_ss / (Ca_ss + K_buf_ss);

  const double Ca_SR = NV_Ith_S(rY, 13);
  const double K_buf_SR = 0.3;
  const double Buf_sr = 10;
  const double Ca_SR_tot = Ca_SR+Ca_SR*Buf_sr/(Ca_SR+K_buf_SR);

  const double Buf_c = 0.2;
  const double K_buf_c = 0.001;
  const double Ca_i_tot = Ca_i+Ca_i*Buf_c/(Ca_i+K_buf_c);

  const double K_o = 5.4000000000000004; // millimolar
  const double Ca_o = 2.0; // millimolar
  const double Na_o = 140.0; // millimolar

  const double V = F/Cm*V_c*(K_i+Na_i+2*Ca_i_tot+2*V_sr/V_c*Ca_SR_tot+2*V_ss/V_c*Ca_ss_tot-K_o-Ca_o-Na_o-C0);
  return V;
}

    Cellten_tusscher_model_2006_epiFromCellMLCvode::Cellten_tusscher_model_2006_epiFromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                18,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellten_tusscher_model_2006_epiFromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
    }
    
    Cellten_tusscher_model_2006_epiFromCellMLCvode::~Cellten_tusscher_model_2006_epiFromCellMLCvode()
    {
    }
    
    void Cellten_tusscher_model_2006_epiFromCellMLCvode::VerifyStateVariables()
    {
        /* We only expect CVODE to keep state variables to within its tolerances,
         * not exactly the bounds prescribed to each variable that are checked here.
         *
         * For 99.99% of paces this->mAbsTol works,
         * For 99.999% of paces 10*this->mAbsTol is fine,
         * but unfortunately 100x seems to be required on rare occasions for upstrokes.
         * This sounds bad, but is probably typically only 1e-5 or 1e-6.
         */
        const double tol = 100*this->mAbsTol;
        N_Vector rY = rGetStateVariables();
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.00172
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.7444
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.7045
        double var_chaste_interface__L_type_Ca_current_d_gate__d = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 3.373e-5
        double var_chaste_interface__L_type_Ca_current_f_gate__f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.7888
        double var_chaste_interface__L_type_Ca_current_f2_gate__f2 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.9755
        double var_chaste_interface__L_type_Ca_current_fCass_gate__fCass = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.9953
        
        if (var_chaste_interface__fast_sodium_current_j_gate__j < 0 - tol)
        {
            EXCEPTION(DumpState("State variable membrane_fast_sodium_current_j_gate has gone out of range. Check numerical parameters, for example time and space stepsizes, and/or solver tolerances"));
        }
        if (var_chaste_interface__fast_sodium_current_h_gate__h < 0 - tol)
        {
            EXCEPTION(DumpState("State variable membrane_fast_sodium_current_h_gate has gone out of range. Check numerical parameters, for example time and space stepsizes, and/or solver tolerances"));
        }
        if (var_chaste_interface__L_type_Ca_current_fCass_gate__fCass < 0 - tol)
        {
            EXCEPTION(DumpState("State variable membrane_L_type_calcium_current_fCa_gate has gone out of range. Check numerical parameters, for example time and space stepsizes, and/or solver tolerances"));
        }
        if (var_chaste_interface__L_type_Ca_current_f_gate__f < 0 - tol)
        {
            EXCEPTION(DumpState("State variable membrane_L_type_calcium_current_f_gate has gone out of range. Check numerical parameters, for example time and space stepsizes, and/or solver tolerances"));
        }
        if (var_chaste_interface__L_type_Ca_current_d_gate__d < 0 - tol)
        {
            EXCEPTION(DumpState("State variable membrane_L_type_calcium_current_d_gate has gone out of range. Check numerical parameters, for example time and space stepsizes, and/or solver tolerances"));
        }
        if (var_chaste_interface__fast_sodium_current_m_gate__m < 0 - tol)
        {
            EXCEPTION(DumpState("State variable membrane_fast_sodium_current_m_gate has gone out of range. Check numerical parameters, for example time and space stepsizes, and/or solver tolerances"));
        }
        if (var_chaste_interface__L_type_Ca_current_f2_gate__f2 < 0 - tol)
        {
            EXCEPTION(DumpState("State variable membrane_L_type_calcium_current_f2_gate has gone out of range. Check numerical parameters, for example time and space stepsizes, and/or solver tolerances"));
        }
        if (var_chaste_interface__L_type_Ca_current_f_gate__f > 1 + tol)
        {
            EXCEPTION(DumpState("State variable membrane_L_type_calcium_current_f_gate has gone out of range. Check numerical parameters, for example time and space stepsizes, and/or solver tolerances"));
        }
        if (var_chaste_interface__L_type_Ca_current_d_gate__d > 1 + tol)
        {
            EXCEPTION(DumpState("State variable membrane_L_type_calcium_current_d_gate has gone out of range. Check numerical parameters, for example time and space stepsizes, and/or solver tolerances"));
        }
        if (var_chaste_interface__fast_sodium_current_j_gate__j > 1 + tol)
        {
            EXCEPTION(DumpState("State variable membrane_fast_sodium_current_j_gate has gone out of range. Check numerical parameters, for example time and space stepsizes, and/or solver tolerances"));
        }
        if (var_chaste_interface__fast_sodium_current_h_gate__h > 1 + tol)
        {
            EXCEPTION(DumpState("State variable membrane_fast_sodium_current_h_gate has gone out of range. Check numerical parameters, for example time and space stepsizes, and/or solver tolerances"));
        }
        if (var_chaste_interface__L_type_Ca_current_f2_gate__f2 > 1 + tol)
        {
            EXCEPTION(DumpState("State variable membrane_L_type_calcium_current_f2_gate has gone out of range. Check numerical parameters, for example time and space stepsizes, and/or solver tolerances"));
        }
        if (var_chaste_interface__fast_sodium_current_m_gate__m > 1 + tol)
        {
            EXCEPTION(DumpState("State variable membrane_fast_sodium_current_m_gate has gone out of range. Check numerical parameters, for example time and space stepsizes, and/or solver tolerances"));
        }
        if (var_chaste_interface__L_type_Ca_current_fCass_gate__fCass > 1 + tol)
        {
            EXCEPTION(DumpState("State variable membrane_L_type_calcium_current_fCa_gate has gone out of range. Check numerical parameters, for example time and space stepsizes, and/or solver tolerances"));
        }
    }
    
    double Cellten_tusscher_model_2006_epiFromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        
        double var_chaste_interface__membrane__V = CalculateAnalyticVoltage(); //(mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -85.23
        double var_chaste_interface__calcium_dynamics__Ca_i = NV_Ith_S(rY, 0);
        // Units: millimolar; Initial value: 0.000126
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.00621
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.4712
        double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.0095
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.00172
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.7444
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.7045
        double var_chaste_interface__L_type_Ca_current_d_gate__d = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 3.373e-5
        double var_chaste_interface__L_type_Ca_current_f_gate__f = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.7888
        double var_chaste_interface__L_type_Ca_current_f2_gate__f2 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.9755
        double var_chaste_interface__L_type_Ca_current_fCass_gate__fCass = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.9953
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.999998
        double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 2.42e-8
        double var_chaste_interface__calcium_dynamics__Ca_ss = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 0.00036
        double var_chaste_interface__sodium_dynamics__Na_i = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 8.604
        double var_chaste_interface__potassium_dynamics__K_i = NV_Ith_S(rY, 16);
        // Units: millimolar; Initial value: 136.89
        
        const double var_potassium_dynamics__K_o = 5.4000000000000004; // millimolar
        const double var_reversal_potentials__E_K = 26.713760659695648 * log(var_potassium_dynamics__K_o / var_chaste_interface__potassium_dynamics__K_i); // millivolt
        const double var_inward_rectifier_potassium_current__alpha_K1 = 0.10000000000000001 / (1.0 + exp(0.059999999999999998 * ((var_chaste_interface__membrane__V - var_reversal_potentials__E_K) - 200.0))); // dimensionless
        const double var_inward_rectifier_potassium_current__g_K1 = 5.4050000000000002; // nanoS_per_picoF
        const double var_inward_rectifier_potassium_current__i_K1 = var_inward_rectifier_potassium_current__g_K1 * (var_inward_rectifier_potassium_current__alpha_K1 / (var_inward_rectifier_potassium_current__alpha_K1 + (((3.0 * exp(0.00020000000000000001 * ((var_chaste_interface__membrane__V - var_reversal_potentials__E_K) + 100.0))) + exp(0.10000000000000001 * ((var_chaste_interface__membrane__V - var_reversal_potentials__E_K) - 10.0))) / (1.0 + exp( -0.5 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K)))))) * sqrt(var_potassium_dynamics__K_o * 0.18518518518518517) * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // picoA_per_picoF
        const double var_transient_outward_current__g_to = 0.29399999999999998; // nanoS_per_picoF
        const double var_transient_outward_current__i_to = var_transient_outward_current__g_to * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // picoA_per_picoF
        const double var_rapid_time_dependent_potassium_current__g_Kr = 0.153; // nanoS_per_picoF
        const double var_rapid_time_dependent_potassium_current__i_Kr = var_rapid_time_dependent_potassium_current__g_Kr * sqrt(var_potassium_dynamics__K_o * 0.18518518518518517) * var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 * var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // picoA_per_picoF
        const double var_slow_time_dependent_potassium_current__g_Ks = 0.39200000000000002; // nanoS_per_picoF
        const double var_sodium_dynamics__Na_o = 140.0; // millimolar
        const double var_slow_time_dependent_potassium_current__i_Ks = var_slow_time_dependent_potassium_current__g_Ks * pow(var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs, 2.0) * (var_chaste_interface__membrane__V - (26.713760659695648 * log((var_potassium_dynamics__K_o + (0.029999999999999999 * var_sodium_dynamics__Na_o)) / (var_chaste_interface__potassium_dynamics__K_i + (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Na_i))))); // picoA_per_picoF
        const double var_L_type_Ca_current__g_CaL = 3.9799999999999998e-05; // litre_per_farad_second
        const double var_calcium_dynamics__Ca_o = 2.0; // millimolar
        const double var_L_type_Ca_current__i_CaL = ((((var_chaste_interface__membrane__V < 14.999000000000001) || (var_chaste_interface__membrane__V > 15.000999999999999)) ? (((var_chaste_interface__membrane__V - 15.0) * ((0.25 * var_chaste_interface__calcium_dynamics__Ca_ss * exp(((var_chaste_interface__membrane__V - 15.0) * 192970.68299999999) * 3.8797490106562429e-07)) - var_calcium_dynamics__Ca_o)) / (exp(((var_chaste_interface__membrane__V - 15.0) * 192970.68299999999) * 3.8797490106562429e-07) - 1.0)) : (((( -0.00099999999999944578 * ((var_chaste_interface__calcium_dynamics__Ca_ss * 0.24998128375521925) - var_calcium_dynamics__Ca_o)) *  -13357.380336096434) + ((0.00099999999999944578 * ((var_chaste_interface__calcium_dynamics__Ca_ss * 0.25001871764607692) - var_calcium_dynamics__Ca_o)) * 13356.380336110949)) * 0.5)) * var_L_type_Ca_current__g_CaL * var_chaste_interface__L_type_Ca_current_d_gate__d * var_chaste_interface__L_type_Ca_current_f_gate__f * var_chaste_interface__L_type_Ca_current_f2_gate__f2 * var_chaste_interface__L_type_Ca_current_fCass_gate__fCass * 37237684497.486488) * 3.8797490106562429e-07; // picoA_per_picoF
        const double var_sodium_potassium_pump_current__P_NaK = 2.7240000000000002; // picoA_per_picoF
        const double var_sodium_potassium_pump_current__i_NaK = ((((var_sodium_potassium_pump_current__P_NaK * var_potassium_dynamics__K_o) / (var_potassium_dynamics__K_o + 1.0)) * var_chaste_interface__sodium_dynamics__Na_i) / (var_chaste_interface__sodium_dynamics__Na_i + 40.0)) / (1.0 + (0.1245 * exp((var_chaste_interface__membrane__V *  -9648.5341499999995) * 3.8797490106562429e-07)) + (0.035299999999999998 * exp(((-var_chaste_interface__membrane__V) * 96485.341499999995) * 3.8797490106562429e-07))); // picoA_per_picoF
        const double var_fast_sodium_current__g_Na = 14.837999999999999; // nanoS_per_picoF
        const double var_reversal_potentials__E_Na = 26.713760659695648 * log(var_sodium_dynamics__Na_o / var_chaste_interface__sodium_dynamics__Na_i); // millivolt
        const double var_fast_sodium_current__i_Na = var_fast_sodium_current__g_Na * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3.0) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // picoA_per_picoF
        const double var_sodium_background_current__g_bna = 0.00029; // nanoS_per_picoF
        const double var_sodium_background_current__i_b_Na = var_sodium_background_current__g_bna * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__K_NaCa = 1000.0; // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__i_NaCa = (var_sodium_calcium_exchanger_current__K_NaCa * ((exp((var_chaste_interface__membrane__V * 33769.869524999995) * 3.8797490106562429e-07) * pow(var_chaste_interface__sodium_dynamics__Na_i, 3.0) * var_calcium_dynamics__Ca_o) - (exp((var_chaste_interface__membrane__V *  -62715.471975) * 3.8797490106562429e-07) * pow(var_sodium_dynamics__Na_o, 3.0) * var_chaste_interface__calcium_dynamics__Ca_i * 2.5))) / ((669921.875 + pow(var_sodium_dynamics__Na_o, 3.0)) * (1.3799999999999999 + var_calcium_dynamics__Ca_o) * (1.0 + (0.10000000000000001 * exp((var_chaste_interface__membrane__V *  -62715.471975) * 3.8797490106562429e-07)))); // picoA_per_picoF
        const double var_calcium_background_current__g_bca = 0.00059199999999999997; // nanoS_per_picoF
        const double var_calcium_background_current__i_b_Ca = var_calcium_background_current__g_bca * (var_chaste_interface__membrane__V - (13.356880329847824 * log(var_calcium_dynamics__Ca_o / var_chaste_interface__calcium_dynamics__Ca_i))); // picoA_per_picoF
        const double var_potassium_pump_current__g_pK = 0.0146; // nanoS_per_picoF
        const double var_potassium_pump_current__i_p_K = (var_potassium_pump_current__g_pK * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K)) / (1.0 + exp((25.0 - var_chaste_interface__membrane__V) * 0.16722408026755853)); // picoA_per_picoF
        const double var_calcium_pump_current__g_pCa = 0.12379999999999999; // picoA_per_picoF
        const double var_calcium_pump_current__i_p_Ca = (var_calcium_pump_current__g_pCa * var_chaste_interface__calcium_dynamics__Ca_i) / (var_chaste_interface__calcium_dynamics__Ca_i + 0.00050000000000000001); // picoA_per_picoF
        const double var_chaste_interface__L_type_Ca_current__i_CaL = var_L_type_Ca_current__i_CaL; // picoA_per_picoF
        const double var_chaste_interface__sodium_background_current__i_b_Na = var_sodium_background_current__i_b_Na; // picoA_per_picoF
        const double var_chaste_interface__inward_rectifier_potassium_current__i_K1 = var_inward_rectifier_potassium_current__i_K1; // picoA_per_picoF
        const double var_chaste_interface__fast_sodium_current__i_Na = var_fast_sodium_current__i_Na; // picoA_per_picoF
        const double var_chaste_interface__rapid_time_dependent_potassium_current__i_Kr = var_rapid_time_dependent_potassium_current__i_Kr; // picoA_per_picoF
        const double var_chaste_interface__slow_time_dependent_potassium_current__i_Ks = var_slow_time_dependent_potassium_current__i_Ks; // picoA_per_picoF
        const double var_chaste_interface__calcium_pump_current__i_p_Ca = var_calcium_pump_current__i_p_Ca; // picoA_per_picoF
        const double var_chaste_interface__sodium_calcium_exchanger_current__i_NaCa = var_sodium_calcium_exchanger_current__i_NaCa; // picoA_per_picoF
        const double var_chaste_interface__sodium_potassium_pump_current__i_NaK = var_sodium_potassium_pump_current__i_NaK; // picoA_per_picoF
        const double var_chaste_interface__potassium_pump_current__i_p_K = var_potassium_pump_current__i_p_K; // picoA_per_picoF
        const double var_chaste_interface__transient_outward_current__i_to = var_transient_outward_current__i_to; // picoA_per_picoF
        const double var_chaste_interface__calcium_background_current__i_b_Ca = var_calcium_background_current__i_b_Ca; // picoA_per_picoF
        const double var_chaste_interface__i_ionic = (var_chaste_interface__inward_rectifier_potassium_current__i_K1 + var_chaste_interface__transient_outward_current__i_to + var_chaste_interface__rapid_time_dependent_potassium_current__i_Kr + var_chaste_interface__slow_time_dependent_potassium_current__i_Ks + var_chaste_interface__L_type_Ca_current__i_CaL + var_chaste_interface__sodium_potassium_pump_current__i_NaK + var_chaste_interface__fast_sodium_current__i_Na + var_chaste_interface__sodium_background_current__i_b_Na + var_chaste_interface__sodium_calcium_exchanger_current__i_NaCa + var_chaste_interface__calcium_background_current__i_b_Ca + var_chaste_interface__potassium_pump_current__i_p_K + var_chaste_interface__calcium_pump_current__i_p_Ca) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Cellten_tusscher_model_2006_epiFromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
      double var_chaste_interface__membrane__V = CalculateAnalyticVoltage(); //(mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -85.23
        double var_chaste_interface__calcium_dynamics__Ca_i = NV_Ith_S(rY, 0);
        // Units: millimolar; Initial value: 0.000126
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.00621
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.4712
        double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.0095
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.00172
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.7444
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.7045
        double var_chaste_interface__L_type_Ca_current_d_gate__d = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 3.373e-5
        double var_chaste_interface__L_type_Ca_current_f_gate__f = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.7888
        double var_chaste_interface__L_type_Ca_current_f2_gate__f2 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.9755
        double var_chaste_interface__L_type_Ca_current_fCass_gate__fCass = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.9953
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.999998
        double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 2.42e-8
        double var_chaste_interface__calcium_dynamics__Ca_SR = NV_Ith_S(rY, 13);
        // Units: millimolar; Initial value: 3.64
        double var_chaste_interface__calcium_dynamics__Ca_ss = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 0.00036
        double var_chaste_interface__calcium_dynamics__R_prime = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.9073
        double var_chaste_interface__sodium_dynamics__Na_i = NV_Ith_S(rY, 16);
        // Units: millimolar; Initial value: 8.604
        double var_chaste_interface__potassium_dynamics__K_i = NV_Ith_S(rY, 17);
        // Units: millimolar; Initial value: 136.89
        
        
        // Mathematics
        // double d_dt_chaste_interface__membrane__V;
        const double var_membrane__Cm = 0.185; // microF
        const double var_potassium_dynamics__K_o = 5.4000000000000004; // millimolar
        const double var_reversal_potentials__E_K = 26.713760659695648 * log(var_potassium_dynamics__K_o / var_chaste_interface__potassium_dynamics__K_i); // millivolt
        const double var_inward_rectifier_potassium_current__alpha_K1 = 0.10000000000000001 / (1.0 + exp(0.059999999999999998 * ((var_chaste_interface__membrane__V - var_reversal_potentials__E_K) - 200.0))); // dimensionless
        const double var_inward_rectifier_potassium_current__g_K1 = 5.4050000000000002; // nanoS_per_picoF
        const double var_inward_rectifier_potassium_current__i_K1 = var_inward_rectifier_potassium_current__g_K1 * (var_inward_rectifier_potassium_current__alpha_K1 / (var_inward_rectifier_potassium_current__alpha_K1 + (((3.0 * exp(0.00020000000000000001 * ((var_chaste_interface__membrane__V - var_reversal_potentials__E_K) + 100.0))) + exp(0.10000000000000001 * ((var_chaste_interface__membrane__V - var_reversal_potentials__E_K) - 10.0))) / (1.0 + exp( -0.5 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K)))))) * sqrt(var_potassium_dynamics__K_o * 0.18518518518518517) * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // picoA_per_picoF
        const double var_transient_outward_current__g_to = 0.29399999999999998; // nanoS_per_picoF
        const double var_transient_outward_current__i_to = var_transient_outward_current__g_to * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // picoA_per_picoF
        const double var_rapid_time_dependent_potassium_current__g_Kr = 0.153; // nanoS_per_picoF
        const double var_rapid_time_dependent_potassium_current__i_Kr = var_rapid_time_dependent_potassium_current__g_Kr * sqrt(var_potassium_dynamics__K_o * 0.18518518518518517) * var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 * var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // picoA_per_picoF
        const double var_slow_time_dependent_potassium_current__g_Ks = 0.39200000000000002; // nanoS_per_picoF
        const double var_sodium_dynamics__Na_o = 140.0; // millimolar
        const double var_slow_time_dependent_potassium_current__i_Ks = var_slow_time_dependent_potassium_current__g_Ks * pow(var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs, 2.0) * (var_chaste_interface__membrane__V - (26.713760659695648 * log((var_potassium_dynamics__K_o + (0.029999999999999999 * var_sodium_dynamics__Na_o)) / (var_chaste_interface__potassium_dynamics__K_i + (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Na_i))))); // picoA_per_picoF
        const double var_L_type_Ca_current__g_CaL = 3.9799999999999998e-05; // litre_per_farad_second
        const double var_calcium_dynamics__Ca_o = 2.0; // millimolar
        const double var_L_type_Ca_current__i_CaL = ((((var_chaste_interface__membrane__V < 14.999000000000001) || (var_chaste_interface__membrane__V > 15.000999999999999)) ? (((var_chaste_interface__membrane__V - 15.0) * ((0.25 * var_chaste_interface__calcium_dynamics__Ca_ss * exp(((var_chaste_interface__membrane__V - 15.0) * 192970.68299999999) * 3.8797490106562429e-07)) - var_calcium_dynamics__Ca_o)) / (exp(((var_chaste_interface__membrane__V - 15.0) * 192970.68299999999) * 3.8797490106562429e-07) - 1.0)) : (((( -0.00099999999999944578 * ((var_chaste_interface__calcium_dynamics__Ca_ss * 0.24998128375521925) - var_calcium_dynamics__Ca_o)) *  -13357.380336096434) + ((0.00099999999999944578 * ((var_chaste_interface__calcium_dynamics__Ca_ss * 0.25001871764607692) - var_calcium_dynamics__Ca_o)) * 13356.380336110949)) * 0.5)) * var_L_type_Ca_current__g_CaL * var_chaste_interface__L_type_Ca_current_d_gate__d * var_chaste_interface__L_type_Ca_current_f_gate__f * var_chaste_interface__L_type_Ca_current_f2_gate__f2 * var_chaste_interface__L_type_Ca_current_fCass_gate__fCass * 37237684497.486488) * 3.8797490106562429e-07; // picoA_per_picoF
        const double var_sodium_potassium_pump_current__P_NaK = 2.7240000000000002; // picoA_per_picoF
        const double var_sodium_potassium_pump_current__i_NaK = ((((var_sodium_potassium_pump_current__P_NaK * var_potassium_dynamics__K_o) / (var_potassium_dynamics__K_o + 1.0)) * var_chaste_interface__sodium_dynamics__Na_i) / (var_chaste_interface__sodium_dynamics__Na_i + 40.0)) / (1.0 + (0.1245 * exp((var_chaste_interface__membrane__V *  -9648.5341499999995) * 3.8797490106562429e-07)) + (0.035299999999999998 * exp(((-var_chaste_interface__membrane__V) * 96485.341499999995) * 3.8797490106562429e-07))); // picoA_per_picoF
        const double var_fast_sodium_current__g_Na = 14.837999999999999; // nanoS_per_picoF
        const double var_reversal_potentials__E_Na = 26.713760659695648 * log(var_sodium_dynamics__Na_o / var_chaste_interface__sodium_dynamics__Na_i); // millivolt
        const double var_fast_sodium_current__i_Na = var_fast_sodium_current__g_Na * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3.0) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // picoA_per_picoF
        const double var_sodium_background_current__g_bna = 0.00029; // nanoS_per_picoF
        const double var_sodium_background_current__i_b_Na = var_sodium_background_current__g_bna * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__K_NaCa = 1000.0; // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__i_NaCa = (var_sodium_calcium_exchanger_current__K_NaCa * ((exp((var_chaste_interface__membrane__V * 33769.869524999995) * 3.8797490106562429e-07) * pow(var_chaste_interface__sodium_dynamics__Na_i, 3.0) * var_calcium_dynamics__Ca_o) - (exp((var_chaste_interface__membrane__V *  -62715.471975) * 3.8797490106562429e-07) * pow(var_sodium_dynamics__Na_o, 3.0) * var_chaste_interface__calcium_dynamics__Ca_i * 2.5))) / ((669921.875 + pow(var_sodium_dynamics__Na_o, 3.0)) * (1.3799999999999999 + var_calcium_dynamics__Ca_o) * (1.0 + (0.10000000000000001 * exp((var_chaste_interface__membrane__V *  -62715.471975) * 3.8797490106562429e-07)))); // picoA_per_picoF
        const double var_calcium_background_current__g_bca = 0.00059199999999999997; // nanoS_per_picoF
        const double var_calcium_background_current__i_b_Ca = var_calcium_background_current__g_bca * (var_chaste_interface__membrane__V - (13.356880329847824 * log(var_calcium_dynamics__Ca_o / var_chaste_interface__calcium_dynamics__Ca_i))); // picoA_per_picoF
        const double var_potassium_pump_current__g_pK = 0.0146; // nanoS_per_picoF
        const double var_potassium_pump_current__i_p_K = (var_potassium_pump_current__g_pK * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K)) / (1.0 + exp((25.0 - var_chaste_interface__membrane__V) * 0.16722408026755853)); // picoA_per_picoF
        const double var_calcium_pump_current__g_pCa = 0.12379999999999999; // picoA_per_picoF
        const double var_calcium_pump_current__i_p_Ca = (var_calcium_pump_current__g_pCa * var_chaste_interface__calcium_dynamics__Ca_i) / (var_chaste_interface__calcium_dynamics__Ca_i + 0.00050000000000000001); // picoA_per_picoF
        const double var_chaste_interface__membrane__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
        const double var_fast_sodium_current__shift_INa_inact = 0.0; // millivolt
        const double var_fast_sodium_current__perc_reduced_inact_for_IpNa = 0.0; // dimensionless
        const double var_fast_sodium_current_h_gate__tau_h = 1.0 / (((var_chaste_interface__membrane__V < ( -40.0 + var_fast_sodium_current__shift_INa_inact)) ? (0.057000000000000002 * exp((-((var_chaste_interface__membrane__V + 80.0) - var_fast_sodium_current__shift_INa_inact)) * 0.14705882352941177)) : 0.0) + ((var_chaste_interface__membrane__V < ( -40.0 + var_fast_sodium_current__shift_INa_inact)) ? ((2.7000000000000002 * exp(0.079000000000000001 * (var_chaste_interface__membrane__V - var_fast_sodium_current__shift_INa_inact))) + (310000.0 * exp(0.34849999999999998 * (var_chaste_interface__membrane__V - var_fast_sodium_current__shift_INa_inact)))) : (0.77000000000000002 / (0.13 * (1.0 + exp(((var_chaste_interface__membrane__V + 10.66) - var_fast_sodium_current__shift_INa_inact) *  -0.0900900900900901)))))); // millisecond
        const double var_fast_sodium_current_j_gate__tau_j = 1.0 / (((var_chaste_interface__membrane__V < ( -40.0 + var_fast_sodium_current__shift_INa_inact)) ? ((((( -25428.0 * exp(0.24440000000000001 * (var_chaste_interface__membrane__V - var_fast_sodium_current__shift_INa_inact))) - (6.9480000000000002e-06 * exp( -0.043909999999999998 * (var_chaste_interface__membrane__V - var_fast_sodium_current__shift_INa_inact)))) * (var_chaste_interface__membrane__V + 37.780000000000001)) * 1.0) / (1.0 + exp(0.311 * ((var_chaste_interface__membrane__V + 79.230000000000004) - var_fast_sodium_current__shift_INa_inact)))) : 0.0) + ((var_chaste_interface__membrane__V < ( -40.0 + var_fast_sodium_current__shift_INa_inact)) ? ((0.024240000000000001 * exp( -0.01052 * (var_chaste_interface__membrane__V - var_fast_sodium_current__shift_INa_inact))) / (1.0 + exp( -0.13780000000000001 * ((var_chaste_interface__membrane__V + 40.140000000000001) - var_fast_sodium_current__shift_INa_inact)))) : ((0.59999999999999998 * exp(0.057000000000000002 * (var_chaste_interface__membrane__V - var_fast_sodium_current__shift_INa_inact))) / (1.0 + exp( -0.10000000000000001 * ((var_chaste_interface__membrane__V + 32.0) - var_fast_sodium_current__shift_INa_inact)))))); // millisecond
        const double var_L_type_Ca_current_f_gate__tau_f = (1102.5 * exp((-pow(var_chaste_interface__membrane__V + 27.0, 2.0)) * 0.0044444444444444444)) + (200.0 / (1.0 + exp((13.0 - var_chaste_interface__membrane__V) * 0.10000000000000001))) + (180.0 / (1.0 + exp((var_chaste_interface__membrane__V + 30.0) * 0.10000000000000001))) + 20.0; // millisecond
        const double var_L_type_Ca_current_f2_gate__tau_f2 = (562.0 * exp((-pow(var_chaste_interface__membrane__V + 27.0, 2.0)) * 0.0041666666666666666)) + (31.0 / (1.0 + exp((25.0 - var_chaste_interface__membrane__V) * 0.10000000000000001))) + (80.0 / (1.0 + exp((var_chaste_interface__membrane__V + 30.0) * 0.10000000000000001))); // millisecond
        const double var_L_type_Ca_current_fCass_gate__tau_fCass = (80.0 / (1.0 + pow(var_chaste_interface__calcium_dynamics__Ca_ss * 20.0, 2.0))) + 2.0; // millisecond
        const double var_calcium_dynamics__V_rel = 0.10199999999999999; // per_millisecond
        const double var_calcium_dynamics__kcasr = 2.5 - (1.5 / (1.0 + pow(1.5 / var_chaste_interface__calcium_dynamics__Ca_SR, 2.0))); // dimensionless
        const double var_calcium_dynamics__k1 = 0.14999999999999999 / var_calcium_dynamics__kcasr; // per_millimolar2_per_millisecond
        const double var_calcium_dynamics__i_rel = var_calcium_dynamics__V_rel * ((var_calcium_dynamics__k1 * pow(var_chaste_interface__calcium_dynamics__Ca_ss, 2.0) * var_chaste_interface__calcium_dynamics__R_prime) / (0.059999999999999998 + (var_calcium_dynamics__k1 * pow(var_chaste_interface__calcium_dynamics__Ca_ss, 2.0)))) * (var_chaste_interface__calcium_dynamics__Ca_SR - var_chaste_interface__calcium_dynamics__Ca_ss); // millimolar_per_millisecond
        const double var_calcium_dynamics__Vmax_up = 0.0063749999999999996; // millimolar_per_millisecond
        const double var_calcium_dynamics__i_up = var_calcium_dynamics__Vmax_up / (1.0 + (6.2499999999999997e-08 / pow(var_chaste_interface__calcium_dynamics__Ca_i, 2.0))); // millimolar_per_millisecond
        const double var_calcium_dynamics__V_leak = 0.00036000000000000002; // per_millisecond
        const double var_calcium_dynamics__i_leak = var_calcium_dynamics__V_leak * (var_chaste_interface__calcium_dynamics__Ca_SR - var_chaste_interface__calcium_dynamics__Ca_i); // millimolar_per_millisecond
        const double var_calcium_dynamics__i_xfer = 0.0038 * (var_chaste_interface__calcium_dynamics__Ca_ss - var_chaste_interface__calcium_dynamics__Ca_i); // millimolar_per_millisecond
        const double var_sodium_dynamics__conc_clamp = 1.0; // dimensionless
        const double d_dt_chaste_interface__calcium_dynamics__Ca_i = (1.0 / (1.0 + (0.00020000000000000001 / pow(var_chaste_interface__calcium_dynamics__Ca_i + 0.001, 2.0)))) * (((((var_calcium_dynamics__i_leak - var_calcium_dynamics__i_up) * 0.0010939999999999999) * 60.960741282614002) + var_calcium_dynamics__i_xfer) - ((1.0 * ((var_calcium_background_current__i_b_Ca + var_calcium_pump_current__i_p_Ca) - (2.0 * var_sodium_calcium_exchanger_current__i_NaCa)) * var_membrane__Cm) * 0.00031590674984870111)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = ((1.0 / (1.0 + exp(( -26.0 - var_chaste_interface__membrane__V) * 0.14285714285714285))) - var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1) / (1.0 * (450.0 / (1.0 + exp(( -45.0 - var_chaste_interface__membrane__V) * 0.10000000000000001))) * (6.0 / (1.0 + exp((var_chaste_interface__membrane__V + 30.0) * 0.086956521739130432)))); // per_millisecond
        const double d_dt_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = ((1.0 / (1.0 + exp((var_chaste_interface__membrane__V + 88.0) * 0.041666666666666664))) - var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2) / (1.0 * (3.0 / (1.0 + exp(( -60.0 - var_chaste_interface__membrane__V) * 0.050000000000000003))) * (1.1200000000000001 / (1.0 + exp((var_chaste_interface__membrane__V - 60.0) * 0.050000000000000003)))); // per_millisecond
        const double d_dt_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = ((1.0 / (1.0 + exp(( -5.0 - var_chaste_interface__membrane__V) * 0.071428571428571425))) - var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs) / ((1.0 * (1400.0 / sqrt(1.0 + exp((5.0 - var_chaste_interface__membrane__V) * 0.16666666666666666))) * (1.0 / (1.0 + exp((var_chaste_interface__membrane__V - 35.0) * 0.066666666666666666)))) + 80.0); // per_millisecond
        const double d_dt_chaste_interface__fast_sodium_current_m_gate__m = ((1.0 / pow(1.0 + exp(( -56.859999999999999 - var_chaste_interface__membrane__V) * 0.11074197120708749), 2.0)) - var_chaste_interface__fast_sodium_current_m_gate__m) / (1.0 * (1.0 / (1.0 + exp(( -60.0 - var_chaste_interface__membrane__V) * 0.20000000000000001))) * ((0.10000000000000001 / (1.0 + exp((var_chaste_interface__membrane__V + 35.0) * 0.20000000000000001))) + (0.10000000000000001 / (1.0 + exp((var_chaste_interface__membrane__V - 50.0) * 0.0050000000000000001))))); // per_millisecond
        const double d_dt_chaste_interface__fast_sodium_current_h_gate__h = ((((1.0 * (1.0 - (var_fast_sodium_current__perc_reduced_inact_for_IpNa * 0.01))) / pow(1.0 + exp(((var_chaste_interface__membrane__V + 71.549999999999997) - var_fast_sodium_current__shift_INa_inact) * 0.13458950201884254), 2.0)) + (var_fast_sodium_current__perc_reduced_inact_for_IpNa * 0.01)) - var_chaste_interface__fast_sodium_current_h_gate__h) / var_fast_sodium_current_h_gate__tau_h; // per_millisecond
        const double d_dt_chaste_interface__fast_sodium_current_j_gate__j = ((((1.0 * (1.0 - (var_fast_sodium_current__perc_reduced_inact_for_IpNa * 0.01))) / pow(1.0 + exp(((var_chaste_interface__membrane__V + 71.549999999999997) - var_fast_sodium_current__shift_INa_inact) * 0.13458950201884254), 2.0)) + (var_fast_sodium_current__perc_reduced_inact_for_IpNa * 0.01)) - var_chaste_interface__fast_sodium_current_j_gate__j) / var_fast_sodium_current_j_gate__tau_j; // per_millisecond
        const double d_dt_chaste_interface__L_type_Ca_current_d_gate__d = ((1.0 / (1.0 + exp(( -8.0 - var_chaste_interface__membrane__V) * 0.13333333333333333))) - var_chaste_interface__L_type_Ca_current_d_gate__d) / ((1.0 * ((1.3999999999999999 / (1.0 + exp(( -35.0 - var_chaste_interface__membrane__V) * 0.076923076923076927))) + 0.25) * (1.3999999999999999 / (1.0 + exp((var_chaste_interface__membrane__V + 5.0) * 0.20000000000000001)))) + (1.0 / (1.0 + exp((50.0 - var_chaste_interface__membrane__V) * 0.050000000000000003)))); // per_millisecond
        const double d_dt_chaste_interface__L_type_Ca_current_f_gate__f = ((1.0 / (1.0 + exp((var_chaste_interface__membrane__V + 20.0) * 0.14285714285714285))) - var_chaste_interface__L_type_Ca_current_f_gate__f) / var_L_type_Ca_current_f_gate__tau_f; // per_millisecond
        const double d_dt_chaste_interface__L_type_Ca_current_f2_gate__f2 = (((0.67000000000000004 / (1.0 + exp((var_chaste_interface__membrane__V + 35.0) * 0.14285714285714285))) + 0.33000000000000002) - var_chaste_interface__L_type_Ca_current_f2_gate__f2) / var_L_type_Ca_current_f2_gate__tau_f2; // per_millisecond
        const double d_dt_chaste_interface__L_type_Ca_current_fCass_gate__fCass = (((0.59999999999999998 / (1.0 + pow(var_chaste_interface__calcium_dynamics__Ca_ss * 20.0, 2.0))) + 0.40000000000000002) - var_chaste_interface__L_type_Ca_current_fCass_gate__fCass) / var_L_type_Ca_current_fCass_gate__tau_fCass; // per_millisecond
        const double d_dt_chaste_interface__transient_outward_current_s_gate__s = ((1.0 / (1.0 + exp((var_chaste_interface__membrane__V + 20.0) * 0.20000000000000001))) - var_chaste_interface__transient_outward_current_s_gate__s) / ((85.0 * exp((-pow(var_chaste_interface__membrane__V + 45.0, 2.0)) * 0.0031250000000000002)) + (5.0 / (1.0 + exp((var_chaste_interface__membrane__V - 20.0) * 0.20000000000000001))) + 3.0); // per_millisecond
        const double d_dt_chaste_interface__transient_outward_current_r_gate__r = ((1.0 / (1.0 + exp((20.0 - var_chaste_interface__membrane__V) * 0.16666666666666666))) - var_chaste_interface__transient_outward_current_r_gate__r) / ((9.5 * exp((-pow(var_chaste_interface__membrane__V + 40.0, 2.0)) * 0.00055555555555555556)) + 0.80000000000000004); // per_millisecond
        const double d_dt_chaste_interface__calcium_dynamics__Ca_SR = (1.0 / (1.0 + (3.0 / pow(var_chaste_interface__calcium_dynamics__Ca_SR + 0.29999999999999999, 2.0)))) * (var_calcium_dynamics__i_up - (var_calcium_dynamics__i_rel + var_calcium_dynamics__i_leak)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__calcium_dynamics__Ca_ss = (1.0 / (1.0 + (0.0001 / pow(var_chaste_interface__calcium_dynamics__Ca_ss + 0.00025000000000000001, 2.0)))) * (((( -1.0 * var_L_type_Ca_current__i_CaL * var_membrane__Cm) * 0.094772024954610345) + ((var_calcium_dynamics__i_rel * 0.0010939999999999999) * 18288.2223847842)) - ((var_calcium_dynamics__i_xfer * 0.016403999999999998) * 18288.2223847842)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__calcium_dynamics__R_prime = ((-(0.044999999999999998 * var_calcium_dynamics__kcasr)) * var_chaste_interface__calcium_dynamics__Ca_ss * var_chaste_interface__calcium_dynamics__R_prime) + (0.0050000000000000001 * (1.0 - var_chaste_interface__calcium_dynamics__R_prime)); // per_millisecond
        const double d_dt_chaste_interface__sodium_dynamics__Na_i = (((-var_sodium_dynamics__conc_clamp) * 1.0 * (var_fast_sodium_current__i_Na + var_sodium_background_current__i_b_Na + (3.0 * var_sodium_potassium_pump_current__i_NaK) + (3.0 * var_sodium_calcium_exchanger_current__i_NaCa))) * 0.00063181349969740222) * var_membrane__Cm; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__potassium_dynamics__K_i = (((-var_sodium_dynamics__conc_clamp) * 1.0 * ((var_inward_rectifier_potassium_current__i_K1 + var_transient_outward_current__i_to + var_rapid_time_dependent_potassium_current__i_Kr + var_slow_time_dependent_potassium_current__i_Ks + var_potassium_pump_current__i_p_K + (var_chaste_interface__membrane__i_Stim / HeartConfig::Instance()->GetCapacitance())) - (2.0 * var_sodium_potassium_pump_current__i_NaK))) * 0.00063181349969740222) * var_membrane__Cm; // 'millimole per litre per millisecond'
        
        // if (mSetVoltageDerivativeToZero)
        // {
        //     // d_dt_chaste_interface__membrane__V = 0.0;
        // }
        // else
        // {
        //     // d_dt_chaste_interface__membrane__V =  -1.0 * (var_inward_rectifier_potassium_current__i_K1 + var_transient_outward_current__i_to + var_rapid_time_dependent_potassium_current__i_Kr + var_slow_time_dependent_potassium_current__i_Ks + var_L_type_Ca_current__i_CaL + var_sodium_potassium_pump_current__i_NaK + var_fast_sodium_current__i_Na + var_sodium_background_current__i_b_Na + var_sodium_calcium_exchanger_current__i_NaCa + var_calcium_background_current__i_b_Ca + var_potassium_pump_current__i_p_K + var_calcium_pump_current__i_p_Ca + (var_chaste_interface__membrane__i_Stim / HeartConfig::Instance()->GetCapacitance())); // 'millivolt per millisecond'
    // } 
        
        // NV_Ith_S(rDY, 0) = d_dt_chaste_interface__membrane__V;
        NV_Ith_S(rDY, 0) = d_dt_chaste_interface__calcium_dynamics__Ca_i;
        NV_Ith_S(rDY, 1) = d_dt_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1;
        NV_Ith_S(rDY, 2) = d_dt_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2;
        NV_Ith_S(rDY, 3) = d_dt_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs;
        NV_Ith_S(rDY, 4) = d_dt_chaste_interface__fast_sodium_current_m_gate__m;
        NV_Ith_S(rDY, 5) = d_dt_chaste_interface__fast_sodium_current_h_gate__h;
        NV_Ith_S(rDY, 6) = d_dt_chaste_interface__fast_sodium_current_j_gate__j;
        NV_Ith_S(rDY, 7) = d_dt_chaste_interface__L_type_Ca_current_d_gate__d;
        NV_Ith_S(rDY, 8) = d_dt_chaste_interface__L_type_Ca_current_f_gate__f;
        NV_Ith_S(rDY, 9) = d_dt_chaste_interface__L_type_Ca_current_f2_gate__f2;
        NV_Ith_S(rDY, 10) = d_dt_chaste_interface__L_type_Ca_current_fCass_gate__fCass;
        NV_Ith_S(rDY, 11) = d_dt_chaste_interface__transient_outward_current_s_gate__s;
        NV_Ith_S(rDY, 12) = d_dt_chaste_interface__transient_outward_current_r_gate__r;
        NV_Ith_S(rDY, 13) = d_dt_chaste_interface__calcium_dynamics__Ca_SR;
        NV_Ith_S(rDY, 14) = d_dt_chaste_interface__calcium_dynamics__Ca_ss;
        NV_Ith_S(rDY, 15) = d_dt_chaste_interface__calcium_dynamics__R_prime;
        NV_Ith_S(rDY, 16) = d_dt_chaste_interface__sodium_dynamics__Na_i;
        NV_Ith_S(rDY, 17) = d_dt_chaste_interface__potassium_dynamics__K_i;
    }
    
template<>
void OdeSystemInformation<Cellten_tusscher_model_2006_epiFromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "tentusscher_model_2006_epi";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecondas";
    
   // // rY[0]:
    // this->mVariableNames.push_back("membrane_voltage");
    // this->mVariableUnits.push_back("millivolt");
    // this->mInitialConditions.push_back(-85.23);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000126);

    // rY[2]:
    this->mVariableNames.push_back("rapid_time_dependent_potassium_current_Xr1_gate__Xr1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00621);

    // rY[3]:
    this->mVariableNames.push_back("rapid_time_dependent_potassium_current_Xr2_gate__Xr2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.4712);

    // rY[4]:
    this->mVariableNames.push_back("slow_time_dependent_potassium_current_Xs_gate__Xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0095);

    // rY[5]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00172);

    // rY[6]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7444);

    // rY[7]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7045);

    // rY[8]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.373e-5);

    // rY[9]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7888);

    // rY[10]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f2_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9755);

    // rY[11]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_fCa_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9953);

    // rY[12]:
    this->mVariableNames.push_back("transient_outward_current_s_gate__s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999998);

    // rY[13]:
    this->mVariableNames.push_back("transient_outward_current_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.42e-8);

    // rY[14]:
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(3.64);

    // rY[15]:
    this->mVariableNames.push_back("dyadic_space_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.00036);

    // rY[16]:
    this->mVariableNames.push_back("calcium_dynamics__R_prime");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9073);

    // rY[17]:
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.604);

    // rY[18]:
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(136.89);

    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellten_tusscher_model_2006_epiFromCellMLCvode)
#endif // CHASTE_CVODE
